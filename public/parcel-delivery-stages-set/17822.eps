%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1701.i207.029.F.m008.c5.gadget delivery.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: AKSANA
%%CreationDate: 1/25/2017
%%BoundingBox: 0 0 415 398
%%HiResBoundingBox: 0 0 414.9820 397.7881
%%CropBox: 0 0 414.9820 397.7881
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Macrovector</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2017-01-25T09:44:07+04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2017-01-25T09:44:07+04:00</xmp:ModifyDate>
         <xmp:CreateDate>2017-01-25T09:44:07+04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>248</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA+AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqleu+Z9A0G39fVr6G0QglRIwDNT+RPtMfYDIzn&#xA;GIuRpyNNpMueXDjiZHy/T3fF5zrf/OQvlOISw2MF3emhVZIwIEYEdnZhKvz4ZiT7QxjlZeh03sjq&#xA;5UZmEP8AZH9X2vMPMnnzyvrx5XehXwlqf336XmkanhS4inQfQMwcuohPnE/6Z6rRdj6nT/TlhXd4&#xA;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&#xA;dirsVdirsVdirsVf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:EAC5D949C1E2E611A645FECBD6356BF3</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:EAC5D949C1E2E611A645FECBD6356BF3</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:0980117407206811822A9DF3B4454FF9</stRef:instanceID>
            <stRef:documentID>xmp.did:0980117407206811822A9DF3B4454FF9</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0780117407206811822A9DF3B4454FF9</stEvt:instanceID>
                  <stEvt:when>2017-01-25T00:18:05+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0980117407206811822A9DF3B4454FF9</stEvt:instanceID>
                  <stEvt:when>2017-01-25T00:50:03+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EAC5D949C1E2E611A645FECBD6356BF3</stEvt:instanceID>
                  <stEvt:when>2017-01-25T09:44:07+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Grey 600</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>117</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Grey 900</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>33</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -397.788 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 397.788 li
414.982 397.788 li
414.982 0 li
cp
clp
215.151 123.348 mo
221.428 123.348 li
221.428 118.007 li
215.151 118.007 li
215.151 123.348 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.054902 .0666667 .0862745 rgb
f
19.123 103.398 mo
14.6094 103.398 li
14.6094 97.8564 li
19.123 97.8564 li
19.123 103.398 li
cp
f
16.7104 100.357 mo
13.9091 101.974 13.9091 104.597 16.7104 106.215 cv
130.394 171.852 li
133.195 173.469 137.738 173.469 140.538 171.852 cv
219.328 126.362 li
222.129 124.746 222.129 122.123 219.328 120.504 cv
105.643 54.8677 li
102.843 53.2495 98.2998 53.2495 95.4995 54.8677 cv
16.7104 100.357 li
f
16.7104 94.9287 mo
13.9091 96.5473 13.9091 99.17 16.7104 100.788 cv
130.394 166.425 li
133.195 168.042 137.738 168.042 140.538 166.425 cv
219.328 120.936 li
222.129 119.316 222.129 116.696 219.328 115.079 cv
105.643 49.4399 li
102.843 47.8222 98.2998 47.8222 95.4995 49.4405 cv
16.7104 94.9287 li
.14902 .172549 .2 rgb
f
219.325 115.081 mo
137.123 67.6177 li
133.452 65.497 li
133.452 167.47 li
134.647 167.671 135.916 167.692 137.123 167.526 cv
138.376 167.356 139.561 166.991 140.538 166.423 cv
219.325 120.933 li
222.129 119.319 222.129 116.693 219.325 115.081 cv
.227451 .254902 .298039 rgb
f
135.467 158.501 mo
133.452 157.337 li
87.3193 130.701 li
87.8342 130.395 li
132.221 156.02 li
135.402 157.859 li
148.884 150.076 li
148.884 150.754 li
135.467 158.501 li
175.969 135.115 mo
175.969 134.441 li
181.193 131.423 li
181.909 131.009 li
185.733 128.801 li
185.733 129.478 li
175.969 135.115 li
185.733 107.138 mo
175.969 101.501 li
175.969 100.899 li
185.733 106.536 li
185.733 107.138 li
33.7767 99.7864 mo
30.4375 97.8584 li
100.571 57.3652 li
133.452 76.3501 li
148.884 85.2606 li
148.884 85.8613 li
124.813 71.9633 li
123.691 71.312 li
100.635 58.0025 li
31.5445 97.8974 li
34.2886 99.4817 li
33.7767 99.7864 li
level3{
gsave
clp
[-175.162 0 0 175.162 205.6 107.933 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.262745 .717647 .968627 ]
/C1 [.498039 .87451 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-175.162 0 0 175.162 205.6 107.933 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~6UO4.6UX=16q'O577Ka97Rfm<7n6*@84Z<D8P)NH8kM]K91qoO9MA,S9he>W:/4PZ:JXb^:f'tb;,L1f
;GpCj;H$Lm;cH^q<)lpu<E3(#<`W:'='&L+=BJ^/=]nm2>$>*6>?b<:>[1N>?!U`A?=$rE?XI/I?smAM
@:<SQ@:E\T@UinX@q9+\A7T7_AS#IcAnG[gB4kmkBP;'nBk_9rC2.L!CMR^%Ci!p(D/F-,DJj?0Df9Q4
E,]c8E,fl;EH6)?EcZ;CF)uGFFEDYJF`hkNG'8(RGB\7UG^+IYH$O[]H?smaH[C*dI!g<hI=6NlIXZ`p
~>
<~\$riU\$riV\@B&Y\@K/\\[f8]]"5Ja]"5Mc]=Y\e]Y(ni]Y(nj]tM+m]tV4p^:q=q^V@Ou^V@S"^qdb$
_83t(_83t)_SX1,_Sa:/_o'C0`5KU4`5KX6`Pog8`l?$<`l?$=a2c6@a2l?CaN2HDaiVZHaiV]Jb0%lL
bKJ)PbKJ)Qbfn;Tbg"DWc-=MXcHa_\cHab^cd0q`d*U.dd*U.edF$@hdF-IkdaHRle'ldpe'lgreC<!t
e^`4#e^`4$f%/F'f%8O*f@SX+f\"j/f\"m1g"G'3g=k97g=k98gY:K;gYCT>gt^]?h;-oCh;-rEhVR,G
~>
<~p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
135.402 157.859 mo
132.221 156.02 li
87.8342 130.395 li
88.2959 130.12 li
121.588 149.28 li
145.11 149.28 li
145.11 138.254 li
148.884 136.075 li
148.884 150.076 li
135.402 157.859 li
175.969 134.441 mo
175.969 120.437 li
183.651 116.001 li
184.359 115.593 184.358 114.932 183.651 114.524 cv
175.969 110.088 li
175.969 101.501 li
185.733 107.138 li
185.733 128.801 li
181.909 131.009 li
181.193 131.423 li
175.969 134.441 li
145.11 119.539 mo
145.11 89.7539 li
112.624 88.9053 li
81.8828 71.1485 li
54.6006 87.3898 li
53.8125 87.3692 li
53.8125 87.8589 li
34.2886 99.4817 li
31.5445 97.8974 li
100.635 58.0025 li
123.691 71.312 li
124.813 71.9633 li
148.884 85.8613 li
148.884 117.36 li
145.11 119.539 li
level3{
gsave
clp
[-172.951 0 0 172.951 204.496 107.931 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.498039 .87451 1 ]
/C1 [.262745 .717647 .968627 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-172.951 0 0 172.951 204.496 107.931 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~IsuiqIXQWmI=-EiI!^3eH[C'bH?sj^H$OXZG^+FVGB\7SG'8%OF`hhKFEDVGF)uDDEcQ2@EH,u<E,]c8
E,TZ5Df0H1DJa6-D/=$)Ci!m&CMR["C2.HsBk_6oBP;'lB4kjhAnGXdAS#F`A7T4]@q0"Y@U`eU@:<SQ
@:3JN?sd8J?X@&F?<piB?!U]?>[1K;>?b97>$>'3=]nm0=BJ[,='&I(<`W7$<E3%!<)cgr;c?Un;GpCj
;Gg:g;,C(c:esk_:JOY[:/4MX9he;T9MA)P91qlL8kM]I8P)KE84Z9A7n6'=7Rfj:77BX66psF26UO4.
~>
<~hqm5HhVR,Fh;-oCh;$f@gt^]?gY:K;gY:H9g=k97g=b04g"G'2f\"j/f[na,f@SX+f%/F'f%/C%e^`4#
e^W*ueC<!se'ldpe'c[mdaHRldF$@hdF$=fd*U.dd*L%acd0q_cHa_\cHXVYc-=MXbfn;Tbfn8RbKJ)P
bK@uMb0%lKaiVZHaiMQEaN2HDa2c6@a2c3>`l?$<`l5p9`Pog7`5KU4`5BL1_o'C0_SX1,_SX.*_83t(
_8*k%^qdb#^V@Ou^V7Fr^:q=q]tM+m]tM(k]Y(ni]Xtef]=Y\d]"5Ja]",A^\[f8]\@B&Y\@B#W\$riU
~>
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr)forVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVZTkr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtg0cqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYBs_q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q=sa[q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"OOWp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
67.0552 70.3804 mo
66.4482 70.731 66.4482 71.2983 67.0552 71.6484 cv
67.6606 71.9995 68.644 71.9995 69.25 71.6475 cv
69.8564 71.2983 69.8564 70.731 69.25 70.3804 cv
68.644 70.0308 67.6606 70.0308 67.0552 70.3804 cv
cp
.286275 .313726 .356863 rgb
f
67.5308 70.6553 mo
67.1875 70.8535 67.1875 71.1748 67.5308 71.3726 cv
67.874 71.5713 68.4316 71.5713 68.7739 71.3726 cv
69.1177 71.1748 69.1177 70.8535 68.7744 70.6553 cv
68.4316 70.4575 67.874 70.4575 67.5308 70.6553 cv
cp
.427451 .470588 .537255 rgb
f
59.2388 74.8931 mo
58.6338 75.2422 58.6338 75.811 59.2388 76.1602 cv
59.8452 76.5103 60.8296 76.5103 61.4351 76.1602 cv
65.8188 73.6289 li
66.4263 73.2798 66.4263 72.7114 65.8188 72.3618 cv
65.2129 72.0117 64.23 72.0117 63.6235 72.3608 cv
59.2388 74.8931 li
cp
.286275 .313726 .356863 rgb
f
59.8657 75.7988 mo
60.1255 75.9492 60.5483 75.9492 60.8081 75.7988 cv
65.1929 73.2686 li
65.4526 73.1182 65.4526 72.8735 65.1929 72.7231 cv
64.9336 72.5732 64.5107 72.5732 64.25 72.7231 cv
59.8652 75.2549 li
59.606 75.4058 59.606 75.6494 59.8657 75.7988 cv
cp
.427451 .470588 .537255 rgb
f
174.919 140.771 mo
176.335 141.587 178.64 141.587 180.056 140.769 cv
183.861 138.573 li
185.275 137.755 185.276 136.424 183.861 135.607 cv
182.444 134.789 180.141 134.791 178.724 135.607 cv
174.919 137.804 li
173.504 138.623 173.504 139.951 174.919 140.771 cv
.129412 .129412 .129412 rgb
f
175.037 140.703 mo
176.389 141.482 178.588 141.482 179.94 140.703 cv
183.745 138.505 li
185.096 137.726 185.096 136.455 183.744 135.676 cv
182.392 134.894 180.194 134.894 178.842 135.674 cv
175.036 137.872 li
173.684 138.652 173.687 139.922 175.037 140.703 cv
.458824 .458824 .458824 rgb
f
175.268 138.004 mo
174.043 138.712 174.043 139.862 175.269 140.568 cv
176.495 141.276 178.481 141.276 179.708 140.568 cv
183.513 138.372 li
184.738 137.663 184.737 136.517 183.512 135.809 cv
182.287 135.102 180.299 135.101 179.073 135.809 cv
175.268 138.004 li
.192157 .203922 .207843 rgb
f
183.651 114.524 mo
184.358 114.932 184.359 115.593 183.651 116.001 cv
132.173 145.724 li
131.465 146.132 130.321 146.132 129.613 145.724 cv
115.965 137.843 li
115.258 137.436 115.258 136.775 115.965 136.366 cv
167.444 106.645 li
168.152 106.236 169.296 106.236 170.004 106.645 cv
183.651 114.524 li
.870588 0 0 rgb
f
143.516 133.964 mo
144.335 133.493 li
144.998 133.108 145.185 132.686 144.893 132.223 cv
144.795 132.062 144.624 131.91 144.381 131.771 cv
143.8 131.435 143.238 131.271 142.697 131.276 cv
142.204 131.281 141.715 131.422 141.231 131.701 cv
140.414 132.174 li
143.516 133.964 li
138.911 131.307 mo
139.729 130.833 li
140.339 130.482 140.509 130.11 140.241 129.715 cv
140.14 129.569 139.959 129.421 139.699 129.271 cv
139.267 129.021 138.81 128.909 138.325 128.934 cv
137.879 128.956 137.461 129.078 137.075 129.3 cv
136.255 129.774 li
138.911 131.307 li
142.952 136.083 mo
132.547 130.075 li
135.481 128.382 li
136.256 127.934 137.117 127.625 138.066 127.454 cv
138.876 127.307 139.685 127.334 140.494 127.538 cv
140.927 127.646 141.356 127.821 141.784 128.067 cv
142.479 128.469 142.808 128.927 142.765 129.437 cv
142.747 129.65 142.656 129.86 142.488 130.067 cv
143.055 129.891 143.688 129.83 144.385 129.881 cv
144.851 129.918 145.343 130.03 145.859 130.218 cv
146.123 130.314 146.388 130.439 146.654 130.593 cv
147.312 130.972 147.715 131.385 147.863 131.829 cv
147.981 132.177 147.925 132.541 147.7 132.92 cv
147.444 133.348 147.072 133.705 146.582 133.988 cv
142.952 136.083 li
1 1 1 rgb
f
154.82 129.364 mo
153.956 129.864 152.981 130.149 151.899 130.218 cv
150.815 130.287 149.932 130.124 149.247 129.727 cv
141.207 125.085 li
143.126 123.979 li
151.148 128.611 li
151.396 128.753 151.72 128.812 152.115 128.786 cv
152.511 128.757 152.865 128.654 153.174 128.474 cv
153.487 128.295 153.664 128.091 153.707 127.866 cv
153.751 127.639 153.648 127.454 153.4 127.312 cv
145.376 122.678 li
147.418 121.499 li
155.458 126.14 li
156.156 126.543 156.437 127.057 156.305 127.683 cv
156.171 128.309 155.677 128.87 154.82 129.364 cv
f
158.003 122.362 mo
149.331 120.386 li
151.489 119.139 li
156.675 120.456 li
154.382 117.469 li
156.551 116.218 li
159.963 121.23 li
164.32 123.745 li
162.359 124.877 li
158.003 122.362 li
f
145.11 149.28 mo
121.588 149.28 li
88.2959 130.12 li
135.424 102.076 li
112.624 88.9053 li
145.11 89.7539 li
145.11 119.539 li
115.965 136.366 li
115.258 136.775 115.258 137.436 115.965 137.843 cv
129.613 145.724 li
129.967 145.928 130.43 146.03 130.893 146.03 cv
131.356 146.03 131.819 145.928 132.173 145.724 cv
145.11 138.254 li
145.11 149.28 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 397.788 ]ct
[58.56 0 0 61.92 87.36 247.548 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 122 
/H 129 
/M[122 0 0 -129 0 129 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
q%D^$knN1nit_V2r/1Q5pl+[$pl=g(plP64nWNX1n<E\&[+sNoq%EN;l4`Crj;$\j!#PNjpl,-1oSrX+
muR7*pQ>!/pQP*2khO)2hVIu?lP'(-knN1nit_V2qht6.mu@@-qMt$*plP64nWNX1n<DV]dbN^8o+U1!
rtXi7itghpqi($(pQ"a(pQ504mumL1mZdO4b1tt2hVIB0knWn-oG6F&mhkq\n;[1&n;m=*r/pr?mumL1
mZdO4]A;u4hVS&BknWFumMGd;iu%G,nr<I*pQ+g*pQ=m,!0d8Cq3:<4q3J,<s4uPgo+gL*kniS$r>Fu?
oc!^epl>02mZ@7,mZR=.q3:]?pQbN>q3S,;o\Sojq%`-0kniS$knsI>n/D1`pl>02mZ@7,mZR=.q3:?5
r0I;Iq3S,;jkfjj!#Ff8knrY&ko/h+!?3$UNqe\(OSFt6P4"P.Pjt%5QM?gBR/YsEhVR/c(\S[0)!Mq+
)X/46*;bfnOS=k2Onb+.PPCC:Q1:17QggC2hRq_%hZ+JY)#kH;)=JL.)sJ@=*V,<fOo1C?P44\0Pk^O4
QMHmAR.-O%hTOd4ht\,R)<i(/)sJ@2*VpiTOS=k4OnY%.PP:=:Q1(%7QhQm:RJ5UGhqm;^)>tH@)X/40
*9eL5*WR;QOo1CAP4"P0PkUI2QMHmCR-pC<RcrYHhqm8k)<i(;)tY*;*9eL4*q(3JOnb+.PQ-mDPkgU4
QM6aAR.$I<Re`H+hpUE=i;";U)tY-K*:Fp4*pt-C+T%;rP4+V0PkgU4QM6aAR.$I<Re`Gqi8NVNi;aeb
)sJ@3*WI/K*q199+93S^P5(70Pk^O>QL^C@QhQm;RJ30FS,&Sdi:,[]i;ahc*:=j3*qUQP+7LEA+o3D[
POOh2Q2$[6QhZsBR/i]HReN<HSGA_Wi;_`liU\&X*Uk-=+6jsK+RUEG,5[SnPkUI<QLC18R.m$=ReN<H
SGA_Ui:Q!oi;akd*UY!;+7LEA+nHoU,5!2OPkgU=QLL78R/!*<Re`HISG\rNSZ:Z1iqh[1*Uk-=+7:9?
+n-]E,Q&he,l<i$Q2-a6Qhd$CRI6O>S,&TBSb\lViN;(qiqXYm*q(3?+R^KG,4HiG,l/haPkp[FQ2-a6
Qhd$CRI6O>S,&TBSb\lGiOn.+iW(%g+8m>Q+SHuI,46]E,k*)[-Ms)'QLpOAQhZsDRI6O<S,&TCSbSfP
TA\]'iRHlDj7sed+S6iG,4HiG,kNDP-3,FkQ2m6?QhQmBRI?U>S+iHKSaW0FTD>/SiSibFini\q+7gWR
+S6iH,4?cE,k`PQ-Mf+\Qi*6MR.m$<ReN<HSG/TET(elPT_Y;FiUGgUini\q+S6iI,6&kV,P38M-1E8R
-hSnYQhd$CRK&`HReN<HSG/TET(elPT_Y;7iW%ldini_e+nd,K,QB%_,k*,K-M/\T-ib^nQhZsDRJ30>
S+iHJSaW0GTD,#JU"A;rj5K%Tj8^@q,4?cG,k`Pa-1<2S-giDV.0(jpR/!*FRdQ[@SG/TPT(AQLTD>/S
U%"f.ioT4ij5/km,5*8L,k`PQ-M]%e-h&PV.J51fR/!*FRdQ[@SG/TBScGDZTD>/SU%"f.in!/ij5/km
,OcuN-1<2S-giD].JbL^.f([mRJ<6>S+rNLSaN*DTD>/UU$eZNUY"PUjRhR"jT$Ot,k!&Q-M/\T..etW
.KD!n/,CgoRdcg@SG8ZDT(nrPT_Y;MUAUebU\U_;j4*/Ojne'=,k!&O-L`DT./#+Y.eG7]/-.:RqjR#D
pRM#Ln"0<HpRq>Un"TTPq5"#Mg>g]DhW4__qBc"bp*T5UoI0D^mOIo\mk";eqjRANs-rhSpRUfFpRh5R
pS%,OpS7MZq5*Q?l/U:ShW4_`oHs>\s!R7`oI9J`oIKD^oI]bh!&+5=pmh/Nr1<MOq4IDSpn@/Nq4m\[
pnde`i8j[oeE,QLq'Pe_mO7cXoIB;[p+5hfp+H1pr0m\Upmh/Nm[j6HpRq;Tn"TWQpS@S\q53oIiT/MM
hW=eboHsVepF,Y_mje#]oIT\fmOn2d!&4;?pmq>SoUbiMq4RJUm\9NPq5!b]n>>F1nDr*\hW=ecmjRlY
s!dXkoIKVdmOe,boIonl!&=AAn=KBHs.K4]q4[5NpS7P[q5*MVq5;p-s5hbmhWO\_p*oV`oIKkjoIT\f
oIfhjoJ#tn!&F,:q4IDSpn@MXpS.GXpS@V]n##lXq5Dp,o]G,phWFkeoI9J`oIKVdp+?:rp+GtjmkFGi
qD.W5q4IDSpn@/Nr1j4cpS@V]n##lXq5Dp,jlZ'phWFkfoIBPbmk")_p+H.or%IatoJ-%pqD8#?pn.AT
pS%)NpS7MZpS@kentu/Zpo+"ffB(TGs5r2$!%IOip+,bdp+>nhp+Q%lrA".'oJ6+r!&XSFpn7GVm\9NP
pS@S\n##oYpSdkdq5W'/eE?Jflf\<uoIKVdoI]bhoIonloJ-%pq(qq)p+ub,qk*YVq4[5Nq4m\[pndGV
q5<tcr2KXoq5W'/eE>rWqWR`*p+5hfp+Gtjp+Z+np+l7rp,)\)s#'\Hpn@/NpnRY\pSI;Tq5=%epSmY^
roVqseE>]Pq(24koIfhjoJ#tnoJ6+roJH8!qDRu>s.T7_pS7MZq5*MVpS[hcq5Ne^q5`uIl0$R[hWY"k
oI]hjs"<psp+Z+np+l7rp,)D!p,2n0ntGlRr1j1bpn[_^m\]`Vq5F+gm]-)`i90mueEGcRq(;:moIp(q
p+c1pp+u=tp,2J#p,;t2r1O+apnISZpS@S\n##lXpSdnen#H/`q5j>RiTJ_ShWY"loI^+spFl.mp+c1p
p+uP%p,2J#p,Dk.!'0qNpnRb_rhStYq53napo*qdnZ)>apoO:nki_HueEGiT!p]&'oIonlr%\"%r%dn#
p,)D!p,;P%p,Mn/qkEk\q5!\[qPF"bpS[ebpSm\_pT+(jq5r?6s6.tshWjnip+Z+np+lY(p+uD!q_e"(
p,DV'p,N+6qkNq^n"ofVq5<tcpo3_^q5a7kpoX@pfBDkkiT]4aq(VLsoJ6+rq_\"(s#'L.oJcJ'qDn71
qE+SMn>5lVpo!qdpSn(jo;_Veq5j=mpoaFrfBD>\nEJfpq(V\#p+l7rp,)D!r&4@0r&==/oJuV+q`=d?
qkX"`q53napo+"fm]-#^!3H$uq5sCon?:I.f'<;#hWstlp+l7rq_\"(oJZD%oJle0!'0[4p,i+5qkX"`
q53napo+"fm]-#^q5jCopTF"hfBLfMo]ti/!&=+$r%mt%p,2J#q`"4.oJuV+qE"[>pH8:8qka(bq5<tc
n>Z/^poF.jq5sIqnur"qq68K8eEZ/]qWmr4q_Rq&oJQP)oJcJ'oJue0p,hn/r&ssAs$$=Wpo!qdm]$#^
pT+(jpT<tgpTO@rq6Bq`g?I,PhWk.sqD8")r&"%'p,;e,oJlP)oK)n3oK;h1q`Y!Eqkj4fs/5[km]$#^
pT+(jpT<tgpTO@rq6BDRl0?dahWt4uoJHJ'rAOF/p,Dk.oJuV+qE+C5oKE(8p-/OBqkrq^r2KUnpo=.j
pT4.ln#lJipTXFtq6JrDq!-AphX(%pp,2_*oJcJ'qDn71oK2q4p-&%3r'1$Cr2B@gq5O+gpoF4lpT<kd
q60UupTaM!q6Th\iTeqYhX(%qqDS:1q`".,r&OC1p,i.6oKDn3qEO[=qEa\Nr2K[ppT""hq5j=mm]QAh
q69Uupp0_%kj.a(eEl&Z!&aC,p,Dn/s#B^4oK)k2p,r17p-/+5q`sj@!(-R]po4(hpT+=qqQ0.fpoa@p
q69\"pTj:pg$A\(eEl&Zq)7q*q`+4.r&Xj>p,ht1q`XR8r'0g=p-JRB!(6X_po=.jpT3kdpTF:ppTXIu
q6KFpq6\c>o^(Q'hX(;$qD\+-oJue0p,i+5rB:!?q`aX:p-AI?p-SXD!(?^`po=.jpT3kdpTFFtrNGt"
q6Bb$m^)_rfBhVdnEo*#!&sO0r&OC1p,i.6oKE+9q*4dAq`sj@oKrICqF(4\poEkbpoX@ppTO@rpTX_(
qQfRrppBk)fBh)Us6\\2!&sa6p,W"2oK2b/qE=O9q`j^<rBUELoKrFBp-\mLqlB4fpT=4nq60Ospp':n
q6Th&ppKq+fBh#So^;&5!''g8p,`(4oK<%7oKN.:p-A79r'L$C!(?`Qp-esNqlB4fpT=4nq60Ospp':n
q6Th&r3cL2q6noAeEuAcqX4/>q`=F4qE4I7q`aX:r'9m?qa1!DqF($Gr'p]UqlBLnq5sCopojLtpTa.l
q6Tn(pU0e)q7$@jg?mDXhXC8$q`FL6qE=O9q`j^<r'BsAqa:'FqF1*IqaUWWqlKXrs/l+"pTO@rn$2Yn
pTs\&q6ft*pp^(/n*TB,eF)2^!'9a6r&jp@pc\L<p-8C=p-JRBoL&OEoL8XHp.#*RqlTXrq60_#o<A%q
pTjS#pU'b(q6p%,n@7EDq!HT!hXC8%q`OR8qEFU;q`t!Dp-SXDoL/UGoLA^Jp.,0Tr2ft$poaFrm]cMl
pTjS#pU'b(q6p%,n@85[iU,._hX:G+qE4U;rB:$AoKW7=qa'j@r'U*EqaL3JqFC6Mqagc[ql]Ooric(#
pp'Y#pTsY%pU0h*n$i)%q75_WnF"fphXCM-oKE+9q`k!Dq*=jDoKrFBp-eaGqaU9LqFL<Oqapi]ql]^t
q69Uus0DL,q6Th&ppKS!q7$+.ppp43g$\n.eF28`!'L*@p-/@<qEXa?s$HZNoL&OEoL8XHr($BMqapKR
!)*3lpojLtpTaM!q6Th&ppKS!q7$+.ppp43fC&;"iU>Xm!'U0Bq`jd>qEagAqa:3JrC-QOqaU3Jr(-]V
oLf$SqFpdiposS!pTjS#q6]n(r3l4*q7$10pUU(1q7G8Ijm_d/hXUD*q`k!DoKi@@p-\[EqaL3Js$uuW
p.5'PqF^HSqb-uaqlok#q6Kb$ppBLtppTq+!4_m8q7672pq-@7fC.;[s7"n8q*4aAr'BsAqa:9LoL8XH
p.+sMqap`YqF^TWqb6]X!)EEqpp'Y#pTsY%n$Vr!pUBt.q7672pq-@7fC.5Yo^V8;!'g<Fp-JRBoL&OE
qaL-Hr($WToL\sQqb-`Yr(R#_qG-pmpp0@pppBk)pU9k+pUL%0q7?=4r4N!@q7YDLeFDYkqXXGIqa(-H
oL&LDr'g6Iqa^QToL\pPr(HZUqb?u`r(m>go!8(tpU'_'q6p%,ppg(/q7?C6m_&A/rp\Y2eFDDd!'pBH
qa1!DqF(3Lp."mKqagEPqF^WXp.Y<WqbHi\!)W<ns0DI,pU'_'q6p%,ppg(/q7?C6m_&A/n*oT2eFDDd
!($HJp-\dHs$Z]Pp."pLqFL<Oqb$]Xp.Y?XqG-`[qbR8iqm-"'q6^(-r3c=.q7$+.ppp.1n[nP.pq?L;
i:-O2eFDDd!($HJqa:'FqF19Nr($BMqap]XoLo'Tr(ZfYqbR,dqGI0s!42I-q6ft*pp^(/m^`)'q7HI8
pV$@9q7l[oiUPFghX^_6qEt-J!(HiToLA^Jr(-HOqb$cZoM#-Vr(d,boMGH_qbdDmqm?.+r3lU5pUBY%
pUU(1pUg76q7ZO:pqQX?kje04eFMJf!(6BHr'gKPr($QQr(-]VqF^HSqb6i\p.kK\qG@&dp/1lhqm?.+
q6p%,s1%X0pUU(1pUg76q7ZO:pqQX?g%#+4eFMJf!(?HJr'pQRqFL<Os%<5^qFgNUqb?o^qbQo^qGI,f
r)<GkqmGq%pUBq-q7672pq-:5q7ZU<pV6L=q8(\Ro^h&5hXge9qF19Np.+sMqapKRqFgc\s%N>boM59Z
r)!8foMYTcqc!PqqmH4-q7$+.ppp43pUg@9rOhm<q7c[>pV?:7fCJ%pnFPN/!(HNLr($WTqFUBQqb-cZ
qb?cZs%iPgqb[2foMYQbr)EPn!*9!)ppU"-pUL"/q7?=4pq6@7!5A<Dq7l[>nA3`If(8q5hXge:qF:?P
r(-]VoLf$Sqb6i\p.kK\qG@&drDNJiqG[8jr)NSoqmQ:/q7-10pq$:5pUp:7pV-14pV?R?q81bSeFW>)
lgt0HqFCERp.>*Qqb-i\oM,3Xr(m2dqGHraqc!>j!*/qsp/V/pqmZ@1q7672pq-@7m_/A/q7la@pVHdE
rPJBJfCRMajn8KC!(QfTqagWVqb$KRr(Qu^qG-o`p/(T_qbm>joMk]fr)W_s!EWD#\+mK/\bE]1]D9,-
^%]8:^\P\>_>(nC_uB8]o@3Eho`.MY8Gc!V9)D9R9`.W^:ARc`;"dc_;YsDj<;T\f<r?%r=9)M$\GEc9
\bWi)]D9,6^%f>9^\P\@_=thA_th7>oBGkro\T6@8GYpO9)VE_9DV?Z:&IcY:]!ud;>X8f;ta2f<Vfbn
=8Z1s=o5`(\bWi7]DT;9]_T88^A,J;_"khB_Y:tC`;.C1o_A(.p"oBB8bu'Q9D_EZ:&@]`:\7K\;>a>h
;u0Jj<VBJi=8Q+t=o2A&>Ptu2\G3W1](`i3]_T88^A,J;_"khB_Y:tC`;.CHo\oGlp"oBB8bu'V9)qZa
9_;'V:Adob;#4&d;YF&c<;T\n<r5tp=S>np=o_e(\bNc6]DfG:]_K29^A#D;_"Y\@_YM+D`;%=I`p!'a
o[NQjp&I_]9D2'V:&Icd:A[ib;#=,^;Z'Jj<;KVl<r?%k=Sl8!>5MM(>l2,-]D9,6^&PhC^A5P<_"bb?
_XYP<`;%=I`nC"ao[NQjpA%AY9`.W^:ARc`;#4&f;>O2f;uBVl<Vfbn=8#bm=o2D#>PhY*?2M8/]_T88
^A,J=_"YY>_=thB_th7F`V@IKa4L"Vp>P`%pAdk_9`%Q^:A[iZ;#F2f;Yj>j<<#qq<Vohh=8Z1t=o)>!
>Pqb'>l\4.]D0&7^%]89^[Ju9_>V4E_YM+F`:q7G`qd[,p#Yo:p>5Q>9`%Q^:A[i`;#=,f;Y3ob<;]bn
<rZ8!=8Q+t=nGnp>Pqb'>l\4.]^WW/^A,J=_"Y\?_Y:qJ`;7FJ`V7CIa8*g.p"&j:p>5Q>:&@]`:]!ub
;>X8h;u9Pd<W#np=8H%r=oDM(>5MP#>kVJ#?3"@0]_K29^A#D;_"kh@_YD%C`;.CJ`qROKaSEs0p=/j/
q!7\T:&7W^:\IW];>X8h;u9Pj<Vohp=8Q+l=o;J#>P_S)?2S"+?Me(0@/IV3^%oD:^\GV?_=thA_tV+F
`VIOJa8F$WaSEs0p=/iuq"jac:ARc`;#F2_;YsDj<;T\l<r5tr=Sl7t>4u1t>l%b'?Mn1.?iaYDqn;d=
q7l[>pqcdCpVZdEpVlsJq8`6NprW?Srq>(>eG%hp!)EAdqb[2fqbm8hqc*JnoN(ijr)ii!qHEc#r*9,)
qHj&+p0[l/qnDpAs1eBFpVHXAq8;sFpr3!Iq8`<Pm`G:In+Q#>eG%hp!)NGfqbd8hrDW_poMk`gqc<Pp
qcNc!qc`i#qcs&)qd/o%r*]D1!+Pi>pqQX?r5&<IpqljEpVcjGpW!$Lq8i!Gq9%Xiq"N;5hY@.JoMPNa
qc!>jqc3PpqcEVrqcWi#qcio%p0IQ%qHs,-r*fJ3!+YrA!5J<Eq8)gBnAG"=pr3!Iq8`<PpW<3Qq9/O,
iV1jshY@.JqGI,f!)rhpqc*Dlqc<VrqcN\tqc`\tqHWo'r*K8-qI'2/r*oP5!+buApqZgDrk\?GpqupG
pVlpIpW**Nq8rBRpriKWkkFT@eG.nr!)`Adr)<Jlr)Nbsqc<VrqcN\tqc`o%qcru'qd02-qdB&)r*oP5
!+buApqZ^ApVQsJqSW-IpVlpIpW**Nq8rBRpriKWg%bUBeG7tt!)iYlp/LohqH!Jpr)iu%rE8u#qciu'
qd'&)qd98/qdK>1qd]P7qdfb>qnW!Cq82mDpr*!IpW!!KpW30Pq9&HTprrQYfD,"6iVD@,!)iYlqc*Jn
qc<PpqcNc!qc`\ts',D+qd'&)qd98/qdK>1qd]P7qdfb>qn`'Eq8;sFpr3'KpW*3QrQ+`Tq9&NVpWWEW
q9IUejn\EAhYI4NqGd>lr)W\rqH3Vtr*&u%qHWo'r*K8-s'YP.r*fJ3qIBD5r+5b;!,)2GpqupGpVlpI
q8`6NprW9Q!6b5^q98TXps/]]fD4"os8(UL!)r_nqc3PpqcEVrqcWi#qcio%qd',+qd92-qdKG4!+Ph8
qIKJ7r+>h=!,28HpqupGpVlpIq8`6NprW9Qq9/TXpW`KYq9R[geGAh7lh^Z]qGmDnr)`btqH<]!r*0&'
qH`u)r*T>/qI081r+#V7qIKY=r+>k>qIocCpqupGpVlpIq8`6NprW9Qq9/TXpW`W]rQb5bfD3qmjnnoO
!*/krqcE\tqcWc!qciu'qd&i#r*T>/qI081r+#V7qITP9r+Gq@!GH3E_t_1G`V7CIa8*gNanX$QbPBBX
c1fNYchYreq:bYoqVM)L<Vfbn=8Z1t=o)>!>Pqb'?2@n)?i4=/@JXI1A,Km7Abp$9BDcH?B`MoF_tq=O
`;.CH`q[UMaS3gOb4j*Tbk]NXcM5`]d-phqqUGE!quBdo=8Q+t=oDP(>5DJ#>l7n)?M\%+@/OI1@esU3
AGg$9B)60;B`)TAC&i&H`;%=I`r*mTa8!aOanNsQbP06Vc2#ZZchPl_dGXlrqUGE!quBdo=8Q+t=o2D!
>Ph\'?2It)?i+7/@JaO1A,Bg7Ac$*9BDZB?C&;WFC])*N`;%=I`qROKaSEsPb4s0Sbk]NZcM,Z[d.u)`
qVh;#qqh5N<r,np=9)M&=o2D!>Ph\'?2It)?i+7/@JaO1A,Bg7Ac$*9BDZB?C&;WFC\u'F`VdaT`qROK
aSEsPb4s0Sbk]NZcM,Z[d.u)QqXF@2qqh5N<r,np=Su>!>5VV)>Ph\'?2It)?i+7/@JaO1A,Bg7Ac$*9
BDZB?C&;WFC\u'F`VIOJa8a6WaSEsPb4s0Sbk]NZcM,Z[d.u)BqZ$EAqqh5N<r,np=Su>!>5DJ#>l7n-
?N"4,?i+7/@JaO1A,Bg7Ac$*9BDZB?C&;WFC\u'F`VIOJa8!aOanNsQbP06Vc2#ZZchPl_dF\6eqr.G/
quBdo=8Q+t=o2D!>Ph\'?2It)?i=C4@/OI1@esU3AGg$9B)60;B`)TAC&i&H`;%=I`qROKaSEsPb5BH]
bP06Vc2#ZZchPl_dF\6VqsaL>quBdo=8Q+t=o2D!>Ph\'?2It)?i+7/@JaO6A,Kj6AGg$9B)60;B`)TA
C&i&H`;%=I`qROKaSEsPb4s0SbQ,oac2#ZZchPl_dF\6Gqu?QMquBdo=8Q+t=o2D!>Ph\'?2It)?i+7/
@JaO1A,Bg8AH6<=B)60;B`)TAC&i&H`;%=I`qROKaSEsPb4s0Sbk]NZcM,Z[d.u)@qUGE7r9O7\<r,np
=Su>!>5DJ#>l7n)?M\%+@/OI1@esU3AGg$9B)6-?B`)QAC&;WFC\u'F`VIOJa8!aOanNsQbP06Vc2#ZZ
chu/gd.u)@qUGE(r;-<k<r,np=Su>!>5DJ#>l7n)?M\%+@/OI1@esU3AGg$9B)60;B`)TBC&r'bqo&9K
q8W0LprN9QpWE9SpWWHXq9J`\psAiarqb@FeGJ,#!*8qtqcNc!qc`i#qcs&)qd0,+qdB>1qdTD3qdfV9
qe#\;qe5nAqe?+Hqo&?Ms2FfRpW*'Mq8rBRpriEUq9A`\pWrW]q9e[-l2&p,hY[@SqH*Prr)ru%s'#8'
qcs&)qd0,+qdB>1qdTD3qdfV9qe#\;qe5nAqe?+Hqo&9Kq8W?Qr5\TRq8rBRpriEUq9A`\pWrW]q9e-s
q"iM;hY[@SqH*Prr)ro#qHNi%r*B2+qHs,-r*fJ3qIBD5r+5b;qIf\=r+Z%C!,MMN!6"ZOq8W0LprN9Q
pWE9SpWWHXq9J`\psAiap\NkFeGJ,#!*8qtqcEi$rE9#$qHNi%r*B2+qHs,-r*fJ3qIBD5r+5b;qIf\=
r+Z%C!,MJMpr30Nrl4]QprN9QpWE9SpWWHXq9J`\psAiakkafFeGJ,#!*8qtqcNc!qc`o%s',A*r*B2+
qHs,-r*fJ3qIBD5r+5b;qIf\=r+Z%C!,MJMpr3'KpW*<TqT/KSpWE9SpWWHXq9J`\psAiag%taFeGJ,#
!*8qtqcNc!qc`i#qcs&)s'GY1qHs,-r*fJ3qIBD5r+5b;qIf\=r+Z%C!,MJMpr3'KpW*'Mq8rBRpriEU
q9A`\pWrW]q9dgjo_[VEhY[@SqH*Prr)ro#qHNi%r*B2+qHs2/s'Yb5qdTD3qdfV9qe#\;qe5nAqe?+H
qo&9Kq8W0LprN9QpWEEWrQFrZq9A`\pWrW]q9dgjjnnQEhY[@SqH*Prr)ro#qHNi%r*B2+qHs,-r*fJ3
s'tt:qdfV9qe#\;qe5nAqe?+Hqo&9Kq8W0LprN9QpWE9SpWNW^qT\i]pWrW]q9dgjf),LEhY[@SqH*Pr
r)ro#qHNi%r*B2+qHs,-r*fJ3qIBD5rFGt?qe#\;qe5nAqe?+Hqo&9Kq8W0LprN9QpWE9SpWWHXq9J`\
psAiafD="oo_e%Q!*8qtqcNc!qc`i#qcs&)qd0,+qdB>1qdTD3qdfV9qe#\;!,2:Dr+Z%C!,MJMpr3'K
pW*'Mq8rBRpriEUq9A`\pWrcarQtAffD="ojo"uQJ,~>

%%EndBinary
grestore
np
130.893 146.03 mo
130.43 146.03 129.967 145.928 129.613 145.724 cv
115.965 137.843 li
115.258 137.436 115.258 136.775 115.965 136.366 cv
145.11 119.539 li
145.11 125.125 li
143.126 123.979 li
141.207 125.085 li
145.11 127.339 li
145.11 129.994 li
144.862 129.937 144.62 129.9 144.385 129.881 cv
144.225 129.87 144.069 129.864 143.916 129.864 cv
143.402 129.864 142.925 129.931 142.488 130.067 cv
142.656 129.86 142.747 129.65 142.765 129.437 cv
142.808 128.927 142.479 128.469 141.784 128.067 cv
141.356 127.821 140.927 127.646 140.494 127.538 cv
140.025 127.42 139.557 127.361 139.088 127.361 cv
138.748 127.361 138.407 127.392 138.066 127.454 cv
137.117 127.625 136.256 127.934 135.481 128.382 cv
132.547 130.075 li
142.952 136.083 li
145.11 134.837 li
145.11 138.254 li
132.173 145.724 li
131.819 145.928 131.356 146.03 130.893 146.03 cv
143.516 133.964 mo
140.414 132.174 li
141.231 131.701 li
141.715 131.422 142.204 131.281 142.697 131.276 cv
142.705 131.276 142.712 131.276 142.72 131.276 cv
143.254 131.276 143.808 131.439 144.381 131.771 cv
144.624 131.91 144.795 132.062 144.893 132.223 cv
145.185 132.686 144.998 133.108 144.335 133.493 cv
143.516 133.964 li
138.911 131.307 mo
136.255 129.774 li
137.075 129.3 li
137.461 129.078 137.879 128.956 138.325 128.934 cv
138.369 128.931 138.412 128.93 138.455 128.93 cv
138.892 128.93 139.305 129.043 139.699 129.271 cv
139.959 129.421 140.14 129.569 140.241 129.715 cv
140.509 130.11 140.339 130.482 139.729 130.833 cv
138.911 131.307 li
level3{
gsave
clp
[-2.2544e-006 -51.5746 51.5746 -2.2544e-006 99.4614 140.764 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~h>dQ1!!([P!7_&Ldf9Bp!!(7D!6Y?B`rH+Y!!'k9!5JR7]`8&D!!'J.!42_+Z2am.!!')#!3#quV>pUl
!!&\m!1j/jRfEGU!!&;b!0[B_OT5B@!!%lV!/LUTK`D+*!!%NL!.4bHH2mqh!!%-A!-/&>DZBcR!!$^5
!+u93A,lU<!!$=*!*]F'=TAG&!!#pt!)NXq9`P/d!!#Oi!(Hqg63%!N!!#.^!'1)[2uiq8!!"bS!&"<P
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.2544e-006 -51.5746 51.5746 -2.2544e-006 99.4614 140.764 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~h;-l@gY1B7g"=p-e^W*te'cXjd*L"_c-4DTbK@rJa2Z-<`Pf[3_SO((^q[Xu]tD"i]",A]\$i`Q['R*E
ZEga>YHP+2XK8J&WMuhoVP^2dUnjc[U7n6PT:VUDS=>t8R@'>-QBmf$P`q8nOcb`dNfB!VMi*@JLkphA
L4t>7KS+o/JUi9#IXQTjH[:!`G^"@TG'.qLF)uAAE,]`5D/F*)C2.HrBP1siAn>L_@q&kS?sd5G?!LT;
>$>'3=BAO(<E)mq;Gg7e:JOVY9MA)P8kDTF7n6$<779L05s[b$5<_7o4?P\d3B9&Y2`<NM1G^dA0ek@8
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
142.952 136.083 mo
132.547 130.075 li
135.481 128.382 li
136.256 127.934 137.117 127.625 138.066 127.454 cv
138.407 127.392 138.748 127.361 139.088 127.361 cv
139.557 127.361 140.025 127.42 140.494 127.538 cv
140.927 127.646 141.356 127.821 141.784 128.067 cv
142.479 128.469 142.808 128.927 142.765 129.437 cv
142.747 129.65 142.656 129.86 142.488 130.067 cv
142.925 129.931 143.402 129.864 143.916 129.864 cv
144.069 129.864 144.225 129.87 144.385 129.881 cv
144.62 129.9 144.862 129.937 145.11 129.994 cv
145.11 134.837 li
142.952 136.083 li
142.72 131.276 mo
142.712 131.276 142.705 131.276 142.697 131.276 cv
142.204 131.281 141.715 131.422 141.231 131.701 cv
140.414 132.174 li
143.516 133.964 li
144.335 133.493 li
144.998 133.108 145.185 132.686 144.893 132.223 cv
144.795 132.062 144.624 131.91 144.381 131.771 cv
143.808 131.439 143.254 131.276 142.72 131.276 cv
138.455 128.93 mo
138.412 128.93 138.369 128.931 138.325 128.934 cv
137.879 128.956 137.461 129.078 137.075 129.3 cv
136.255 129.774 li
138.911 131.307 li
139.729 130.833 li
140.339 130.482 140.509 130.11 140.241 129.715 cv
140.14 129.569 139.959 129.421 139.699 129.271 cv
139.305 129.043 138.892 128.93 138.455 128.93 cv
level3{
gsave
clp
[-2.2544e-006 -51.5746 51.5746 -2.2544e-006 99.4614 140.764 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W,srr;fmrq60fo(r=Rq>K[Tr9<tRjnAT2o_[P;qV:Z<g%"mhnG1N$ps8@&bj>)GlhAEap;6(f^Zb@'
k4Q:HoX<iQZK(P[iq'80nu:O;VV^j;h=7,mn=88&RG%%pf^G$UmZ5reN7I<PeEr"=m"<^PJ'dM/cg,l%
l?:D:F3Efdb3<`ak\8-%B#j(E`TLUHk$5gd=i09$_<"V2jA<SO9YKIX]]2Jni^:<:5e5i9\)B?Ui&8"$
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.2544e-006 -51.5746 51.5746 -2.2544e-006 99.4614 140.764 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8Mupr;6?dq=s^Xp%7kHo'u5<n*]T1m-Es%l0.<mjlGI^io/hRhqm2FgtUT;g"=s/f%&:!da?Ihcd'h\
bfn8QaiVWE`l?!9_ns7*^V@Lr]Y(kf]",>[\$i]OZa-j?Yck43XfSS(Wi;qqVl$;dUS=HUTV%gISXc1=
R[KS2Q^3r&P`q;oOcYWaNJrgSMM[1GLPLV<KS4u0JUi6!I=6KiH?sj]G^"=RF`_\FEH#i6DJa3*CMIQs
BP1phARo:\@UWYO?<pf@>?Y04=BAR)<E)pr;Gg:f:JOVX91hfJ84Q0>77BU36:*t'5<_4m4$,J`3&iiT
~>
<~s8N#srr)forVZTjqtg0cqYBs_q=sa[q"OOWp\+=Sp@\+No^h\GoCDJCo'u8?naQ&;nF,i7n*]W2mHj3+
m-O'(lg*j$lK[Wul07Eqkih3mk2tdejlPRajQ,@]j5].Yio8qUi8EMMhr!;IhVR)Eh;-lAgt^Z=gY:H9
g"G'2f\"j.f@SX*f%/F&e^`4"eC<!se'c[ldF$@gd*U.ccd0q_cHa_[c-4DTbKJ)Ob0%lKaiVZGaN2HC
a2c6@`l?!:`5KU4_o'C0_SX1,_83t(^qdb$^V@Ls]tM+m]Y(ni]=Y\e]"5Ja\[f8]\@B#W[^NWQ[C*EM
~>
<~s8W-!s8N#srr)forVc]nrVZTkr;?Kjr;6Bgqtp9fqtg0cqYL'bqYBs_q>'j^q=sa[q"XXZq"OOWp\4FV
p\4CTp@e4Rp@e1Pp%A"Np%@tLo^qeJo^qbHoCMSFoCMPDo()ABo()>@naZ/>naZ,<nF5r:nF5o8n*f`6
n*f`5mdBN2mdBN1mHs<.mHs<-m-O**m-O*)lg*m&lg*m%lK[["lK[[!l07Hsl07Hrkih6okih6nkND$k
kND$kk2tggk2tggjlPUcjlPUcjQ,C_jQ,C_j5]1[j5]1[io8tWio8tWiSibSiSibSi8EPOi8EPOhr!>K
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
145.11 127.339 mo
141.207 125.085 li
143.126 123.979 li
145.11 125.125 li
145.11 127.339 li
level3{
gsave
clp
[-2.2544e-006 -51.5746 51.5746 -2.2544e-006 99.4614 140.764 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.2544e-006 -51.5746 51.5746 -2.2544e-006 99.4614 140.764 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
53.8125 87.8589 mo
53.8125 87.3692 li
54.6006 87.3898 li
53.8125 87.8589 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 397.788 ]ct
[1.92 0 0 1.92 53.28 308.988 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 4 
/M[4 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~&.fBa&.fBa&.fBa&.fBa~>
<~KnY57KnY57KnY57KnY57~>
<~g=k97g=k97g=k97g=k97~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
84.0908 132.622 mo
30.5488 101.708 li
33.7767 99.7864 li
87.3193 130.701 li
84.0908 132.622 li
level3{
gsave
clp
[41.9943 -37.3746 37.3746 41.9943 66.8442 116.259 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~()e50)BKY4*YoY8()e50)BKY3*YoV7()\//)'0P2*YoV7()\//)'0P2*YoV7()\//)'0P2*YoV7()\//
)'0M1*YfP6'cA&-)'0M1*YfP6'cA&-)'0M1*YfP6'cA&-)'0M1*YfP6'cA&-)'0M1*YfP6'cA&-)'0M1
*YfP6'cA&-)'0M1*YfP6'cA&-)'0M1*YfP6'cA&-)'0M1*YfP6'cA&-)'0M1*YfP6'cA&-)'0M1*YfP6
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.9943 -37.3746 37.3746 41.9943 66.8442 116.259 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu
'bqGu'bqGu'bqGu'bqGu'bqGu'bqGu'bqDs'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q'GM5q
~>
<~)&X;0)&X;0)&X;0)&X;0)&X;0)&X;0)&O2-(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),
(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),
(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),
(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),(`4),
~>
29 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
87.3193 130.701 mo
33.7767 99.7864 li
34.2886 99.4817 li
87.8342 130.395 li
87.3193 130.701 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 397.788 ]ct
[55.2 0 0 32.64 33.12 266.268 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 115 
/H 68 
/M[115 0 0 -68 0 68 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 115 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 115 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 115 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
rEfA,qcru%qc`o#qcN\rqc<Sor)EMkr)*Mlqb[&`rD*5ar(Qu\s%<(4rm(GepW`KVpWEETrl=fRq8E<N
q82pBs1eBDpq6L8nGi@`li$SUqYU*ap\=IVp\+IVqt'bmqd')(qHNi#r)s&%rE/ntqc<Sor)EMkqbm;f
pJ:c`qb?u^qb-r]ps8c]pW`KVpWENWrQ,#Zpr<*I!5nWLpqZmDqS)a;qmu:sj8J`Mrql]lq"a[Zp@n@U
qXsaWrEfA,qcru%qc`o#qcN\rqc<Sor)EMk!)i_m!)`YjpJ:c`qb?u^qb-r]ps8c]pW`KVpWE?R!6=lS
pVcmErkSEHrkJ<Dpq6L8nGhMHp\asdp\FRYp\4[\qY'gZqt'bmqd')(qHNi#r)ro!qH*Ppqc3PnqG[8h
s&&_kp.t]`qb?u^!)*5_s%<(4q9J`ZpriESq8i?N!6+`Oq82pBrP/6Dpq-U=r4;h+p&F"Lp\b!e!;cHc
p\=LWp\+OX!;-3\rEfA,qcj,*qcir$r)ro!qH*Ppqc3PnqG[8hr_`YkohPQ_qb?u^qb-r]ps8c]pW``]
qTJWUq8i?Ns2FfPq82pBr4i0Dpq6X=rOVLul2CDUp\b$fs8)Kcp\=LWp\+RYs7H9]rEfA,qcru%qc`o#
qcN\rqc<Sor)EMkqbmAis%r>`qb?u^qb-r]ps8c]pW`KVpWE<Qpr<?Q!6+fQq82pBqnN*D!583@rk&0@
nGhDEp\b'grqcBb!;Q?ap\4FUrq69_rq$(pqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hr)!GjqbR&a!)EGd
r(Qu\s%<(4q9J`ZpriES!6P)Ypr<9Oqo&<I!5\KHqS3$D!5/BGqRlg>rjqV!hYm6Is82ckp\FRYp\4FU
s7QB`!;$6^rEfA,qcru%qc`o#qcN\rqc<Sor)EMkqbm;goM>K^rD!/_r(I&^ps/rcqTei[priESs2k/Z
pr<6Nr5AEJs2"QIq7lsDrk83ArO`*@nGiFbj8J`M!;l]jp\FUZp@n=T!;6<_s7?1qqd')(qHNi#r)ro!
qH*Ppqc3PnqG[8hqbcu]r_EGeqFpf[!)!%4q9J`ZpriESs2k/Zpr<3MrPS]RqSN9KqS;m@!5AEFr4Ms>
!4q\"h>R9Lr;?Hgp\FUZp@n=Tr:C!\rEfA,qcru%qc`o#qcN\rqc<Sor)EPl!)rbmqb[>iohYN]s%W;_
r(Hh2q9J`ZpriESrlP)Zpr<0Lrl"iSqn`?Ls2"TJpV6X>rOi$>nGh;Bq#(!bq"a[Zr:g*_q"FUWrEfA,
qcru%qc`o#qcN\rqc<Sor)EMkqbm;gs%rDbr([5drCm/`r(Hh2q9J`ZpriESrQ5#Z!6=oTqSiHPs24`N
rPAEIpV6U=rk/-?rr;Tig\psGqYKs^p\=IVq=a^XrEfA,r*05,qHNi#r)ro!qH*Ppqc3PnqG[8hqbd>h
pJ:Z]pe:WZps8c]pW`KVpWEEUrlG,[qSr?Ms2=oSr5/BJrP80Bqn<!Aqn)@tgAUmGq>0j]p\=IVqY'gY
rEfA,s'5M-qHNi#r)ro!qH*Ppqc3PnqG[8hqbd;gpeUc^pItQZps8c]qT]#apriESqoSlZrl=oUpr*6O
rPSTNqn`9IpV6R<s1J6@nGhqTm/?hZq"ja\p\=LWqY'gYrEfA,qcru%qc`o#qcN\r!*9"uqc3PnqG[8h
qbd8fq+pl_!)<2]s%E.5q9J`ZpriESqT/`YrQ"rXrl4]Or58NNqSE3IpV6O;!5/3@nGh/>r;??d!;cHc
p\=LWqtBpZrEfA,qcru%qc`o#qcN\rqc<Sor)EMkqbm;g!)WSiqG6u`s%W8^s%E.5q9J`ZpriESq8rQT
rPnTNqnrHNq8!'HqnN*Epq?R:nGh,=rVQZmp\OX[p\=LWrUp6bqt0hnqd')(qHNi#r)ro!qH*Ppqc3Pn
qG[8hqbd5eqG6u`r_<2^s%E:9rQk;bpW`KVpWE<RqoA]UpVm!H!5eNIpV6L:!5/6AnGh)<rqlcnpA4OZ
p\=LWrUp6ar:Kqoqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`rD!,^s%E.5q9J`ZpriTXr6"iW
qoA]UpVlsGpqc^>!5A9Bs1J<BnGh>CqYgEks82Ndp\FRYp\4[\s7Q?_rEfA,qcru%qc`o#qcN\rqc<So
r)<Ypqc!Aiqbd5eqG6u`r([&^s%E.5q9J`ZpriESq8rKRs2OfPrPSTO!5eQJpV6aBqRum@rk%\"ec#OG
rqlEcp\FjaqY9dYs7ZHbrq-.qqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG7#a!)EGdqb7#_ps8c]
pW`KVpWE<Rq8WKTpVlsGs2+WKpV6^Aqn;s@s1@e#eGTCFrVQ<bq"a[Zp@eR\rUp3_rEfA,qcru%qc`o#
qcN\rqc<Sor)EMkqbm;gqb[,bqbI&`qb7#_ps8c]r6>/apriESq8rEPpVlsGs2+WKpV6[@r4W$@!5%b#
nGVGHr;63aq"a[Zp@nLX!;-4rqd')(qHNi#r)ro!qc<c!qc<Sor)EMkqbm;gqb[,bqbI&`qb7#_ps8c]
pW`KVpWE<RrQ"iVpVlsGrkeQKpV6X?rOr-A!5%b#e,B1@!;cKep\FRYp\4UY!;-4rqd')(qHNi#r)ro!
qH*Ppqc3PnqG[8hr)!Gkqb[,bqbI&`qb7#_ps8c]pW`KVpWE<RprE-Jq8<0Jr5&?HqnN'CrOr*@nGgu9
qYU$`p\FRYqtL*aqt9noqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`r([&^s%E@;qp5)`pW`KV
pWE<RprE-Jq8<-IrP8KLpqQ^?rk83Ao)Jaie,B+>p\OX[p\=RYqt9noqd')(qHNo%s'#>'qcN\rqc<So
r)EMkqbm;gqb[,bqbI&`qb7#_ps8c]pW`KVpWE<RprE-Jq8<*Hrk\WMq7ld?s1S<Bp&Fsie,B(=p\OX[
p\=UZqt9noqd')(qHEr'r*'#$qcN\rqc<Sor)EMkqbm;gqb[,bqbI&`qb7#_ps8c]pW`KVpWE<RprE-J
q8<'Gs2"]MqS2j?!589BnGhMHo)8@\pA4OZp\=X[qt9noqd')(qHNi#r)ro!qH*Ppqc*VqrD`Vlqbm;g
qb[,bqbI&`qb7#_ps8c]pW`KVpWE<Rpr<BSq8E?Qq8<$F!5\WLqnMp?qn2Fue,9:Eq"sd]p\FRYr:g*]
rEfA,qcru%qc`o#qcN\rqc<Sor)EMkqbm;gqb[,bqbI&`qb7#_ps8c]pW`KVpWE<Rpr<BSpr*6OqSW*F
r4r6Fq7ZjCqn2Fue,9:Ep\X[\p\FUZr:^3br:U"p!+#M.qcru%qc`o#qcN\rqc<Sor)EMkqbm;gqb[,b
qbI&`qb7#_ps8c]pW`KVpWE<RprEESq8NBPqnr3Gr4r6FpqHX<nGi1[hu3TQp\X[\q"a[ZrV-?crUp+q
qd')(qHNi#r)ro!!*B&!qc<Sor)EMkqbm;gqb[,bqbI&`qb7#_ps8c]pW`KVpWE?S!6P#Vrl4fRrl"`P
pqlpDrP/-Aqn2Fue,B=E!;uTgpA4R[p\=a^rq??arEfA,qcru%qc`o#qcN\rqc<Sor)EMkqbm;gqb[,b
qbI&`qb7#_ps8c]pW`KVpWE<RprE?Qqo/NPrPSHJ!5eTJrkJ6Bqn2Fue,B7Cp\X^]p\Fd_qtU3crV$9a
rEfA,qcru%qc`o#qcN\rqc<Sor)EMkqbm;gqb[,bqbI&`qb7#_ps8c]pW`KVpWE<RprE<Pr5JTPrknNJ
q8!$FpqHX<p](*ie,B4Bp\X^]p\FRY!;HEb!;6:sqd')(qca&)qc`o#qcN\rqc<Sor)EMkqbm;gqb[,b
qbI&`qb7#_ps8c]pW`QXs3(/Zq8rEPqo8TRqo&NPpqlgA!5J<Cqn2FujSeTHqu$3cp\OX[p\=[[!;6:s
qd')(qHNi#r)ro!qH*Ppr)E_sr)EMkqbm;gqb[,bqbI&`qb7#_ps8c]pW`KVpWE<RprE6Nrl+`P!5nTK
pV?R<qn2Fue,B.@p\Y!eq>0j]q"Xa[rEfA,qcru%qc`o#qcN\rqc<Sor)EMkqbm;gqb[2ds%iMer([&^
s%E.5q9J`ZpriESq8rEPq8WHRq8E'F!5\HGqnE'Dqn2Fue,B+?p\X^]p\FX[qtC"q!+,P.qcru%qc`o#
qcN\rqc<Sor)EMkqbm;gqb[,bqbI&`qb7#_ps8i_s3CA`priESq8rEPpr3<Qq8E'Fs2"NHpqHX<nGi7]
h>R-Hq"sd]p\F[\qtBtpqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`r([&^s%E.5rm(GepW`KV
pWE<RprE0L!6+cPpqm$HqS;m?qn2FuqYf.Hq#'m`pA4OZqtU'^rEfA,qcru%qc`o#s&f5%qH*Ppqc3Pn
qG[8hqbd5eqG6u`r([&^s%E.5q9J`ZpriESs2k/[prE-Kq8E'FrPABHpqHX<nGh)<rr)Thp\X[\q"ag^
qtBtpqd')(qHNi#r)ro!qH*Ppqc3PnqGRAlr)3Dhqb[,bqbI&`qb7#_ps8c]pW`KVpWE<RprE-K!6+fQ
rkeQLr5&<HpqHX<nGgu9pAF[^pA+dbq>'s`qtBtpqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`
r(R/br(R,`ps8c]pW`KVpWE<RprE-Ks2FlRpqlsFr4r*A!58<Cr;ZHie,At;p\X^]p\Fd_!;HEbrEfA,
qcj,*qcir$r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`r([&^s%E.5q9J`Zs3(8^pWE<RprE-Krl+fRpqlpE
rP/EJq7cmBrOhY"l2BrHo_eI\p\OX[rqQNfrV$1rqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`
r([&^s%E.5q9J`ZpriESq8rEPs2OlSrPe`R!5nWLqSE0Hs1eEErk8<DnGgu9oDJ@[p\OX[s7lTfrq?:s
qd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`r([&^s%E.5q9J`ZpriESq8rEPpW!-Mrl"iSqSN'E
!l2Uds1eHFrOr6DnGgu9o)/7Zp\OX[!;QNes7ZCtqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`
r([&^s%E.5!7(GdpW`KVpWE<RprE-Kqo/TRrknWMpqZsGrP/9Er4N*CnGiFbf_t@<p\X^]p\Fa]!;?@t
qd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`r([&^s%E.5q9J`ZpriESq8rEPpW!'K!6"lSqni*D
r4i3Eqn;M!f_taHnGN(YpA4R[qtL%qqd')(qHNi#r)ro!qH*Ppqc3PnqbmJnqbm;gqb[,bqbI&`qb7#_
ps8c]pW`KVpWE<RprE-KqS`KR_u@RO_Y:nD^](tE^$u'NrUBaZqu-BfqYBsap\eFq?2In'>PhV%=o2=t
=8Q%q<W#hm;u9Ji;>X2d:]!oc9`Rob9`Ic\chYl\c1oKVb5'0Sa7mUL`VdXP_Y:nC^]2%F^&J''s3pr8
r:g*^qYL$bp\eFq?2Rq->l%\%>5VP#=Sc+r<r5np<;KPj;Ys>g;#3ub:Adi`9`Ic\chYl\c1oKVb5'0S
a7mUL`V[RP_Y:nC^]2%F^$u'NrU0UXqtBm`q>9pb?Me%.>l@q(>PhV%=o2=t=8Q%q<W#hm;u9Ji;>X2d
:]!ob:&@Wa9DHj/cMGfbc1oKVb5'0Sa7mUL`VRLP_Y:nB^Au"F^$u'irT=(Gr:g*_qYU*cp\eFq?2In'
>PhV%=o2=t<rc;!<r5np<;KPj;Ys>g;#3ub:Adi`9`Ic\chYl\c1oKVb5'0Va8X-R`qdUL_Z7RJ_>(eB
^$u'NrV6<`r:g*_qY^0dp\eFq?2In'>PhV%=o2=t=8Q%q<W#hm;u9Ji;#jGj;#3ub:Adi`9`Ic\chYl\
c1oKVb5'0Sa7mUL`V@@J_>V4F^Au"G^$u'NrTjCUqtKsdq#U<dr:g.rqd')(qHNi#r)ro!qH*Ppqc3Pn
qG[8hqbd5eqG6u`r([&^s%E:9rQk;bpW`KVpWE<RprE-Kq8N-HpV?jFq7lsDrOq_#e,AS0p\X^]rqZTh
rV-7sqd')(qHNi#r)ro!qH*Ppqc3PnqG[8hqbd5eqG6u`r([&^s%E.5q9J`ZpriTXr6"iWprE-Kq8N-H
pV?jFq7lpCrk7h$h>R*Hl2:;Qp\OpcrqQKerEfA,qcru%qc`o#qcN\rqc<Sor)<Ypqc!Aiqbd5eqG6u`
r([&^s%E.5q9J`ZpriESq8rEPpW!0NrPeQLpVHmFqS3!Cs1Rq%e,AM.!;lThpA+dbrV6EerEfA,qcru%
qc`o#qcN\rqc<Sor)EMkqbm;gqb[,br([5er([&^s%E.5q9J`ZpriESq8rEPpW!$JpqujBrkSEGrOr<H
^$u'NrTO1RqtBmap]1'e?Me%*>l%\%>5VP#=Sc+r<r5np<;KPj;Ys>g;#3ub:Adi`9`Ic\chYlac2>i]
bP00TanWpN`qdUK_tV"G_#1tE^@;0lrT*q?r:g*_qYU'd?Me%*>l%\%>5VP#=Sl/"=8Q%q<W#hm;u9Ji
;>X2d:]!ob:&@Wa9DHj/cM,TYbP00Tao09Xa7mUL`V@@F_>M+I^\bb7s3prCr9aFVqtU$bq#+Or?2In'
>PhV%=o2=t=8Q%q<W#hm;u9Jj;#jJj;#3ub:Adi`9`Ic\chYl\c1oKVb5'0Sa7mUL`V@=N_Z%CK_>D%I
^\bb7s3pr.r:g*dqYp?gq#+Or?2In'>PhV%=o2=t=8Q%q<W#hm;u9Ji;>X2d:]!ob:&@Wa9E*97chYl\
c1oKVb5'0Sa7mUL`V@@N_YM%E_#M1H^@M=(s3pr-r:g*bqYU'd?Me%*>l%\'>5qe(=o2=t=8Q%q<W#hm
;u9Ji;>X2d:]!ob:&@Wa9DHj/cM,TYbP00TanWpN`qdUK_u@OL_>1kH^\bb<s8;oGrT!hMqtp6eq#+Or
?2In'>6%k)>5VP#=Sc+r<r5np<;KPj;Ys>g;#3ub:Adi`9`Ic\chYl\c1oKVb5'0Sa7mUL`V@@L_Y_1E
_#(k8s5O"JrSmbLqu$<fq#+Or?2In'>PhV%=o2=t=8Q%q<<-"s<;KPj;Ys>g;#3ub:Adi`9`Ic\chYl\
c1oKVb5'0Sa8!XS`qdUK_u.CL_>(hC^@;0OrTsIUr:g*eqYU'd?Me%*>l%\%>5VP#=Sc+r<r5np<;KPj
;Ys>g;#3ub:Adi`9`Ic\chYl\c1oKVb5'0Sa7mUL`V@@J_Yq=H^];1I^@;0OrS[VKqu-?kq>C$d?3":/
?2In'>PhV%=o2=t=8Q%q<W#hm;u9Ji;>X2d:]!ob:&@Wa9DHj/cM,TYbP00TanWpN`qdUK_u%=L_>(hC
^@;0qrSRS3r:g*fqZ$Biq#+Or?2In'>PhV%=o2;$=8Q(r<r5np<;KPj;Ys>g;#3ub:Adi`9`Ic\chYl\
c1oKVb503[anWpN`qdUK_tq7L_>(hC^@;0OrVufSr:g*gqYp<iq#+Or?2In'>PhV%=o2=t=8Q%q<W#hm
;u9Ji;>X2d:\mib:&@Wa9DHj/cM,TYbP00TanWpN`qdUL_Z7UM_Z.II_#(k8s3pr'r;QTiqZ-Kkq>^6g
?Me%*>l%\%>5VP#=Sc+r<r5np<;KPj;Ys>g;#3u`:B!ub9`Ic\chYl\c1oKVb5'0Sa7mUL`V@@G_>qFI
_#(k?s8)cErS@DGqu$6iq#+Or?2In(>6%n)>5VP#=Sc+r<r5np<;KPj;Ys>g;#3u_:B+&c9`Ic\chYl\
c2,W`bP00TanWpN`qdUK_tV%C_#(k8s5a.JrS7>Gqtp3f?Me%*>l%\%>5VP#=Sc+r<r>qt<W#hm;u9Ji
;>X2d:\RTa:&@Wa9DHj/cM,TYbP00TanWpQ`r=!R`V@@F_>qFJ_#(k8s3pr7r9jLYqtp2>~>

%%EndBinary
grestore
np
87.8342 130.395 mo
34.2886 99.4817 li
53.8125 87.8589 li
53.8125 110.274 li
88.2959 130.12 li
87.8342 130.395 li
112.624 88.9053 mo
54.6006 87.3898 li
81.8828 71.1485 li
112.624 88.9053 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 397.788 ]ct
[79.68 0 0 60.48 33.6 266.748 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 166 
/H 126 
/M[166 0 0 -126 0 126 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 166 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 166 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 166 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
p+-"kqCVXu!%n(#q_.Urq_@t'qD/+.rA4=-q_e%)q`"C3oJln4rAsg;oK<%7q`apB!1`hTq4@MVr1<_V
pRq;TrhB=apS.GXqkO7gU\CSZV>R4hV#[FhVYR.aW;*@fWr9!onb;PNnb;PDmf;eNmelJHme6&=m-*d0
lL!j/lLue//,Lmo/bUgo0D.$r1&Ea&1]K<21]'$+2>&m)2u>T,3W(r847kZ54o7G@56.5KSb\lSTDb>]
T_b;TT_P5ZUA^bcU\LSYU[b/[V"ge`VZ*FlVu!:dVt[.bWVNRmX8)5[nGDbMnFH&BmeuPHme6&=m.flH
m.0K:lL*p0lLlb*/H.7"/bUgo0D.$r1&Ea&1]B621]'$+2>&m)2u>T,3W(r8481l:4T%A>55[VFSG8ZN
T),)YT)YJ\TD,#RU&:YaU&Un`UA1MPV"pheV>@(hV>dCiVYR.aW;*@fWr9!mnbM\Nnb;PDn+Z8LmJH>K
me?,=m.ouIm.0K:lL4!1lLlb*/G^sq0)R@!0D.$r1&Ea&1]9-11]'$+2>&m)2u>T,3W(r847kZ54o[_E
55[VFSG8ZNT)##YT)YJ\TD,#RU&1SaU&Lh`UA1MZU]@7dV"ge^V?!IlVu*@eVt[.bWVNRmX7l)[nG2VK
nFH&Bmf2\Hmf)VMmIBQ>li-8AlhB]6l1O?8/,Lmo/bUgp0*!Zu0`*U%1AWg#2#B0'2Z#H13:o6/3r;#2
4T%A>55[VFSbScOT)##YT)PD\TD,#RU&(J`U&Cb`UA1MZV#R:eV"ge^V?!IkVu3ClVu!=cW;*@fWr8su
o(MVNnG2VJnFH&BmJuYGme?,Km.9T@li-8@lhB]7l1O?8/,Lmo/bUgo0DI7#0`*U%1AWg#2#B0'2Z#H1
3:o6/3r;#24T%A>55[VGSY#YJ!1s%Ypn%PXrLj+]pRq;Tq4de^r1`t]q5""dqP<n_pnmterMKCgri#[l
po4(hrN#thp@8(Mq!n(IoC(l1p[.\@r9X@IrTs(?pZh>6p$26$q^hRqp+H4qoe?7t!&FI-qD7h%q_e%)
q`"C3oJuh1q`FF4r&sp@r'(7RSt>eLq4@SXqOd\Yrh&qXpn@MXqkO+a!2TFcq5!tcqkX"`pnmqdrhfLh
pSe(jql0CkrN#qgp[S1Np[RtHoC)GA!:TLHp[.P<r9O:Ina#u8o',i4p+-"kqCVCnq_.e"!&=F+q_@t'
r%n@/p,)Y(oeu\+q`+4.r&X^:oK<%7q`apB!1j+\qjmPSpRhGXrh0:`pRq;Tq4d_\rhBFgqP3k^r2'=e
pndb_qPX@jq5<tcpo44lrMogsrUT^QrU9gXp[RtHoC)JBs6oRIp?hG;rTj@IrTj.Bq!.J8p$26$q^hRq
p+H4qqCqq(r\44(q_J"(p,)Y(oeu\+q`+4.!':'>q`FF4r&sp@r'(1PrLWqXq4@>QqOdh\pRq;Tq4d\[
s.]OhqP3q`s.oOgrM0Fjq5*k`q544iq5<tcpo4(hrN#kep[S7Ps75pSp[ItHqsX@KrpTIHp?hG;rp0FI
o'?&8o]c&6pF?4oq^hRqp+H4qqCqn's"O=)q_J"(p,)Y(oeu\+q`+4.r&X^:oK<%7q`apB!1j%ZrLEq\
qO[GRn"BHLq4d\[s.]LgqkNt_qP=1fs.o[lqPEtan>H#Zpo4(hrN#hdp[S:QrpogRp[IbBrpKaQrU9@G
p?hG;s6KLIo'?&8p$)/7p+-"kr[n(#p+H4qqCqk&!&4:)q_J"(p,)Y(oeu\+q`+4.r&X^:pH8F;r&sp@
r'(1Pqk!eX!2'+ZpRh8S!291\!2B:_q4dYZ!2BFfr1j(`q5++es/,[i!2]Ifpnn+jqPX(dpo4(hrN#ec
p[J7QrUT^Qp[IbBqsOFOs6fOIp?hG;!:0FHo'?&8p?D88p+-"kqCVRsr%@k"qCqUtq_J"(p,)Y(oeu\+
q`+4.r&X^:oK<%7s$$BFr'(1Pqk!eXs.B1[pRh8Ss.T7]s.]@`q4dVYr1s:dq5!h_s.oXkqka(bpo".j
qks1epo4(hrN#ecp@8(Op[S"Io'cMEr9s@IrU0FIkNqd*pZhM;p$26$q^hRqp+H7r!&+1&p+cG"qD7h%
q_e%)q`"C3oJuh1q`FX:!'U6Br&sp@r'(1PqO[_Xrh'+[pRh8Ss.T7]rhB:`q4dVYqkX4dq5!e^!2TRj
r1sCkq53qb!2omrqks1epo4(hrN#bbp[S.Op[S"Io'cPFqsX+Dr9aFLo'?ADp[%J:pZhP<p$26$q^hRq
p+H4qqCqq(pbDY$qD7h%q_e%)q`"C3oJuh1q`FX:s#p<Cr&sp@r'(1Pq47VXTDkJ]T(elQT`1Y]T`(V_
U%tGWU\^edU\U_[V>R4hV>mIiVYI(gW;NOpWMlclW;*@fWr9!no(_bOo(_bKnFH&ImeZDCme?,Im.]lH
mJ-&<lhB]?l1O?8/,Lmo/bUgo0D[Br0`X!,1AWg#2#B0'2Z#H13;PW83rD#93r;#84T7MC4T%A>55[VF
SbSfSTDkG]TDG2UT`(S]T_tP_T`CkaUA(GYU]@1cV"^__VZ*FkVu*@dVu<RmVuNalW;`dnWVNRmX7u2\
nbVhNnb2JCn,MhOn+,o@mI]cEmJ-&<lhB]@l1O?>.f_-u/,Lmo/bUgo0D[Br1&Ea(1]K9)2#B0,2?5]7
2Z#H13;PZ83rM):3r;#84T7MC4T%A>55[VFSbSfRTDtMWTDkM]T_tM]T_kJ_T`CkaUA(GPV"^_^VZ3Ll
Vu*@dVu3LmVuE[lW;*@jWr8srWrVbco(qnPo(V\JnFQ,KmeH8Ame?,Am/HDKm/HAAlhKcAl1O?>/,q1!
/,Lmo/bUgo0D[Br1&Ea&1\N[&2>T622uY`42u>T23W;)=3<2,=3r;#84T.GC4T%A>55[VFSbSfQT)bJW
TD>/WU&CY]UAgkdU\ge[U\LVbV>R.hV"^_]V?!IkVu3FeVu*FmVu<UlW;*@fWr9!uoCqhQnbD\Lnb2GP
n+?&Kme?2Ame6&Am/?>Gm.'E:lMKi=lMN13/H74#/,Lmo/bUgo0D[Br1&Ea&1\N[&2>T612ubf52u>T2
3W2#=3W(r848M);4TIVB4o7G@56.8LT'r<IT_bA]T_bD_U&LhbUA(GXU]@7fV"pkeV>-qcVu<LfVu!=l
Vu<UlW;*@fWr9!toCqhRnb;VKnb;PHn+,r=me6&Bm/68Fm.0K:lMTo>lMN12/H76t/H.7"/bUgo0D[Br
1&Ea&1\N[&2>T602ZPc52u>T23W(o<3W(r848M)=4o%8<55[VFSbSfPT)bPZTD>/UU&Ue]U&^ncU]$q]
U\LYbV>I(_V>6tgVYd:jVYI(bW;NXmW;*@fWr9!soCqhSnGr1To(V\KnFQ)KnGMbPn+5u@mJ-&FmJ#u<
lhB]Cl1O?>/,Upu/,Lmo/c74$0DmI"0D[Br1&Ea&1\N[&2>T6)2u>T23VGN248M)54o[_E55[VFSbSfP
T)bPZTD>/TT`Cb\UAUecUA(GXV#I4gV"^_\VY[4jVYI(bW;ERmVuWjnWVNRmX8MS`o)A.ZoChbLnb;PF
n,MnOn,;\Jme6&Dm/$,Dm.0K:lMg&@lMN1*/G^sr0)mU'0)R@&0D[Br1&Ea&1\N[&2>T6)2u>T23VGN2
48M)54o7G@56.8LT)##YT_Y5UT_G/TUAL_cUA(GXV#@.gU]@:eV>-q`VZ<UhVZ<[lW;<LmW;imoWVNRm
X8DM`o)A1ZoChbLnb;PGn,DhNn+?&Jme6&Em.p&Cm.0K:lMp,AlMN1*/G^sr0)dO'0)I<u0`Nm&1&Ea&
1\N[&2>T6)2u>T23VGN248M)54o7G@56.8LScGDZTDkM[TD>,[UA1GWUACVbUA(GXV#7(gV#R=fV>-qV
Vtm:jWViaqW;`goWVNRmX8DM_o)J7ZoChbLnb;PHn,;bMn+,oCmJcMLm.fuBm.0K:l2^)AlMN1*/G^sr
0)[I'0)I<u0_R4$1Aip(1\N[&2>T6)2u>T23VGN248M)54o7G@56.8LT)##XTE(Y^TD>,[UA1GWU@4lP
V#."gV#I7fV>-q_VZ<[kVtm:dW;rmrWW9'sWVNRmX8;G^nc84YoChbMnb2JHn,2\Ln+,o@mJH8EmJ-&<
lg*j6/+kIi/c77"0E3[%0D[Br1&Ea(1]K9)2#B0,2YK*,3;PZ/3r;#84SCr855[VFSbSfPTDYA[T)t^Z
T_tJ_UA:MXUA:PaV"g_[V#$nfV#@1fV>-q_VuN^lVtm:cWVidpWVrjqWr9!ooCqhRoCqhMnb2JIn,)VK
n+,o@mJQ>Fm/ZPKm.'E:l2^/DlMN1*/G^sr0)R@&0)I<u0_R6u1AWg#2#B0,2YK*,3;PZ33rM,:48M)5
4o7G@56.8LT)##UT`(J_U&(G]UACSYUA:PaV"g_[V#."gV>R4gV>-q_VuN^lVtm:cWV`^pWVNRmX8);]
o)&%Qo(V\PnGD_Nn,)VJn+,o@mJZDFmJ#u;lhTfGlh9WA/,Usp/G^sr0(gmo0_R6u1AWg#2#B0,2YK*,
3;PZ/3r;#84SCr855[VFSbSfPTDG5[TDtV^T`(V^U%kAXU]7.cU\LY\V>I.iV>mCeVYI(gW;ELgW;!:g
WrB!nWr9!moD.tRoCqhMnb2JOn,;_OnFl>Ame?,Jm.Kc?m.'E<lMp2ElMN1*/H.7"/c76o0D[Br1&Ea&
1\N[&2>T6)2u>T23VGN248M)=4o%8<55[VFSbSfPTD>/[TDkP^T_tP^U%kAXU].(cU\LY\V>I.gV>6tg
VYI(fW;NRhW;!:fWrK'oWr9!loD8%RoCqhMnb;PLn,)VSnFl>Bme6&Jm.B]>m.0K=lMg,ElMN1*/G^sr
/c[Qu0D[Br1&Ea&1\N[&2>T6)2u>T23VGN248M)54o[_E55[VFSbSfPTD5&ZTDbJ^T_kJ^U%kAXU]%"c
U\LY\V>@(gV>-q_Vu3LlVZ<^mW;!:eWW9$oWr9!koDA+RoCqhMnb;PMn+cDKn,;_Hme6#Jm.9W=m.0K>
lM^&ElMN1*/G^sr0(ppu0D[Br1&Ea&1\N[&2>T6)2u>T23VGN248M)54o7G@56.8LT)##RTE(V^U&L_]
UAgk]UA:S^V#7"_V"pk_VZ3LfVYI(dW;`[pW;rppW;!:\Wr9!joDJ1SoChbLnb;PNn+Z>Gn,)PJmcX!3
m.0K?lMTuElMN1*/G^sr0(gmo0`Nm,0`X!,1&Ea&1\N[&2>T6)2u>T23VGN248M)54o7G@56.8LScGDZ
TD,#UU&Ue]UApq^UA:S]V#@%gV>6q_V>-nfV>-q_Vu!@lVuE[nW;`dmWVEInX88jpX7Pr]nc8=WoChbL
nb;POmf;nPnFuDBme?)Kmdfc>m.0K@lMKoElMN1*/G^sr0(gmo0`3X*1Aij,1Aip(1\N[&2>T6)2u>T2
3VGN248M)54o7G@56.8LT)##XT_b>XT`Cb\U&^n^UA:S\V#I.hV>@"`V=(5UVtm7kVu<UnW;!:jWr&gr
X8ApqX7Pr]nc8=VoChbLnb;PPn,MqPnFuDBmeH/Lmd]]=m.0KAlMBiElMN1*/G^sr0(gmo0`3[*1Ars)
1Ais.1\N[&2>T6)2u>T23VGN248M)54o7G@56.8LT)##QT`1Y_U$eZNU\U_cU].+eV"pk]V?!OiVYI(a
W;NXoW;!:dWrB%!Wr8srX7Gl]o)J@VoChbMnb2JPn,DkOnFuDBmeQ8MmeQ8GmJ#u<li68Gli$,H/+kIi
/c76o0D[C#1&`s-1&Ea&1\N[&2>T6)2u>T23Vkf83r;#84SCr855[VFSbSfPTD,#SU$eZNU\LVbU]%%e
V#."gV>$keVu!:cVtd4gWW&jjWVELlX8T$uXT#9joDeC\o_7tOo(hhUnb2GPn,;eNnFuDBmeZ>Mmd]]>
m.'BAlM0]ElMN11/G^po/c76o0D[C#1&Wm-1&Ea&1\N[&2>T6)2u>T23VGN248M)54o7G@56.8LT)##Q
T_Y;UU&^taUA:SZU]@1gV>R+hVY[.bVZ3OmVu*@dVtd4fWW/pkWVELkX8]+!XT#9io)S@[o_7tOo(V\N
nGVkSnbDVIn+,oDmJZJDmJ#u2li-2I/+kIm/c@:!0(gmo0`3['1&s'+1AWg#2#B0,2YK*,3;PZ/3r;#8
4T7M>4o7G@56.8LT)##QT_Y;UUAq"bUA:SYV#7(fV#R=hV>$kcVu<ImVYI%hWVNLhW;rmkWVELkX8].!
XT,?ioDJ7ToCqhMnb;PNnGr(RnFl>AmelJMmdfc>m-*d8lMN1*/G^sr/c[Qu0D[C#1%d<u1\N[&2>T6)
2u>T23VGN248M)54o[_E55[VFSbSfPT)bS[T_Y;UUAgqbUA:SYV#."fV#I7hV>$kcVu3ClW;3@kWVWR^
WVELjX8f4!X8o<ioDA1SoCqhMnbDVNnb;PHn+5uFmJH>BmJ#u2lN$5J/+kIi/c76p0*![%0`3Zu1AWg#
2#B0,2YK*,3;PZ/3r;#84Sq8A55dYA55[VFSbSfPTDtV\T_Y;UUA^kbUA:SYV#$qfV#@1hV>$kbVu<Lm
W;<FkWV`UoWVWRoWq`RgWqrarWr9$foD8+RoCqhMnbM\Nnb;PJn,MkJmeuPLmdfc>m-*d5/+kIi/c76o
0D[C&1&`p#1AWg#2#B0,2YK*,3;PZ/3r;#84Sq;A55m_B55[VFSbScVTDG2ZU&(GXU%b;ZU]$neV#$k\
V"pheV#7+hV>$kaVuERmW;ELkWVi^jW<0*"WVWUhWqi^oXRGcVo_A%Oo(V\NnG2VKnFuDImeZANmJ62@
mJ#u3lhi:+/G^sr0(gmo0`3[%1Aip(1\N[&2>T6/2ZPi82u>T23Vti;48h5;48M):4oRYF4o7G@56.8L
T)##XT`Ce`T_Y;UUAL_bUAq%dU\CSZV>R4iV>$k`VuNXmW;NRlWVi^jWW&poWW&ppWqi^oXRGcUo_A%O
o(V\OnG)PJnFuDBmf2\Lmdfc>m-<p7/+kIi/c76o0D[C#1%d="1]K9/1]TE22#B0,2Z,N63;kf53;PZ4
3r_;@3r;#84Sq;@56!eC55[VFSbSfPTDYD\T`1Y_U%b;XU]7(fV#7"^V"ge`VZ3LeVYR+iVZ!IkVu3Om
W;3FkWr&djWr9!sX8T-goD%tPoChbLnbhnNnb;PIn+,lHmJ-)LmIKZ=m-F!8/+kIi/c76o0D[C#1%d<u
1]0*02>oB/2>T6/2uYf92u>T23Vti;49%DB3r;#84Sq;?4odbC55[VFSbSfPTDYD\T_Y;UUA:PaUAgtd
U\CSZV>I+jVPX$apo"%grMTOlri#Xlr2T[opo=.jrN,JZp[n4Op@A"Kr:'FMp[IqGkjJ!.p[%84r%%[r
qCMIpr%@XqqCqh%oeQA"r&"C1r\XL0qDS71rAag9q`+F4q`=[;!':!=qE4X<p-/C=!1inVq4IPXrLit[
pS.JY!2BFfrM'@hpn[\]nYZ>`po""frhoUls/>amr2T[opo4=qqQ'Rrn+68Fp[e.Mp[S4O!:ojRp[IqG
oBlVIp[7S=q!@eA!:9FFr%%Fkr[n(#r%@XqqCqh%oeQA"r&"@0s"sU1qDS71r&=[8q`+F4q`=F4qE4a?
r]Ts=r'(1Ppn%;RqP!n]q4[PWpnRb_rhKLiq5!e^q5+.ipne%iqPO=kqPaFlq5F@mq5O7krM]dtq5XIr
qlB[sn+65Ep[e.Mp[S7Ps76-YqXO@Mp@%YAs6o^Mo'Q2<q<S(IpZq`-odoqkr%7t&p+Q7rr%[k"qD8%+
rAFU3q_e4.r&=:.qDnF6p,i+5q`Xd>rBC-D!1inVq4IJVs.K1]pS.GXqkX7erh]Iepnde`s/5[is/>dl
q5=:kn>Z8ari,puqPsOrr2]dtn+62Dp[e.Mp[S:QrpogRrp]dRp@%\BrpTULo'Q2<qWn.Iq!7i.odoqk
r%@[r!&+1&r%[k"qD8%+r&"I2q_e4.r&=:.qDnF6p,i+5q`XX:r'(1Ppn%;Rpn7\\q4Re`pnIPYqP4+d
rMBCepnde`rhoUiri#^lpo*qdqPj:js/H!uql9UrrN#mun+6/Cp[e.Mp[J7QrUT^Qp[J4Oq![qErpTRK
o'Q2<qs44Iq<Rr/odoqkr%@XqqCqq(r\=($qD8%+oelS(r&=:.qDnF6p,i+5q`XX:r'(1PpmqJXqOd5M
s.fCapnRY\r2'=epnde`rMTOiri#^lpo*\]ri5jq!3,ptr2T[rri?"!n+6,Bp[e.Mp[S1Pp[S"Ip@%bD
rU9IJo'Q2<r9O:IqWn&0odoqkr%@XqqCqh%qD.t(qD8%+oelS(r&=:.qDnF6p,i+5q`XX:r'(1Ppn%;R
rh91^!2B=`rhK=apnRY\qka7epnde`r29IirM]Xlpo*\]pT"4ns/Z*uqlKgurN,JZnauVJp@A"KqssLO
p[IqGp[7tJp?qM=p[%kEqs=4Gr%%FkqCVUtoe6.qr%[k"r%n@/r&"((qDS71of2e.q`=F4qE4X<p-/C=
!1inVq4IDT!huE_r1X+bqP*b[q5!k`rhT=cq54(fr20CjrMTFhn>Z/^qlB^rrN-""!3?("n+6&@q"+4M
q=4=Pp[S"Ip[@nFqsXLOqX3qAp[%nFqX".Gr%%FkqCVUtoe6.qr%[k"qD8%+oelS(r&=:.qDnF6!'Bp:
qE4X<p-/C=!1inVq4IDTrhB=arM07apnRY\qPF1epndkbs/,[krMKIjrhoOin>QDgpo=1ks/Pps!3?("
n+6&@p[e@SqXXLQqXX@Mp[IqGq<n+Jp[7S=p[%qGqX".Gr%%[rqCMIpr%@XqqCqh%oeQA"r&"((qDS71
of2e.q`=F4qE4X<p-/C=!1inVq4IDTrhB=ar1j1apnRY\q5++epnde`qPO=js/,Xks/5Xjn>ZGgq5X7k
!35^nn+6#?p[e+Ls7-'Xq==7Lp[IqGqX41Jp[7S=pZqnGq<\(Gr%%Fkr[n(#r%@XqqCqh%oeQA"r&"((
qDS71of2e.q`=F4qE4a?r]Ts=r'(1Ppn%;RpS%P[rLs+`rLs:fq4mb]pn[tdpnde`q5=7iq5=:kpo*te
!35mpri>mqq5XLqorRWRme$8Fp@A.OqssaWp@7nHp[A"Iq![tFna6,<!:0FHrp0J4odoqkr%7t&p+Q7r
r%[k"qD8%+oelS(r&=:.qDnF6p,i+5q`Xd>rBC-D!1inVq4IDTr1a1aqP4%as.oLdq5!GTq53qb!2f4`
po4:nql0Opql9FlorRWRmI^/Ep[\7Pp[\4Or:0ROp@%qIp[@kEo'Pi2s6KS5odoqkr%@[r!&+1&r%[k"
qD8%+oelS(r&=:.qDnF6p,i+5q`XX:r'(1Ppn%;RpS%JYs.T7`s.]LgqkNt_pS@keq5*napS[JYpo+7n
s/Q!rr2]aqpoF(hn+5o<p[e.MrUBmZp[\(Kr:'XRp@%tJ!:]aOp[7V>q!8"JpZqnGr%%FkqCVUtoe6.q
s"XL-oeQA"r&"((qDS71of2e.q`=F4qE4X<p-/C=!1inV!2'+[pS%GX!291_!2BFfr1j(`pSIneqPF"b
pS[JYpo44lrMfdsri?!t!3H!sorRWRlh'rCp[\=Rs7?!Up[S"IrU9UOrpKgUq![qEo'Q8>s6]RIr%%Fk
qCVUtoe6.qr%\%'r%e+)r&"((qDS71of2e.q`=F4qE4X<p-/C=!1inVq4IY[qP!_ZpS7Y^rM01apSIkd
qka+c!3#[jn#6#\r2TaqqQ'Uq!j&K(qlBCkn+5i:p[e.Ms7-*[p[\(Kp[InFs6fpVp[@hDo'Q;?rpBLI
r%%FkqCVUtoe6.qr%[k"r%n@/r&"((qDS71of2e.q`=F4qE4X<p-/C=!1inVq4IDTrhB=bpS7Y^rM01a
pSIhcr2'4ds/>akn#6#\ql9[qqQ'UqriH!trN,t!!3Q7%n+5f9q"+4M!:g$Zp[\(Kp[IqGs6fmUqX=FP
p?qM=qs=:Kq<\#0odoqkr%@XqqCqh%oeQA"r&"((qDS71of2e.q`4^=pH/46q`XX:r'(1Ppn%;RpS%DW
pS7V]rhK:bpSIebrM9Llr20Lkri#[kn#6#\qPjOpq5aOqrN,ptq5jUus/b\\kk+cDrq#jSr:B[Rp[S"I
p[8+MrUBRMp?qM=r9X@KqX",1r%.[qqCVUtoe6.qr%[k"qD8%+oelS(r&=:.qDnF6p,i+5q`XX:r'(1P
pn%;RpS%DWpS7S\s.fCcpSIebrMBOlqkj=jrMT[nn#-5dq5O4j!3,ao!35surN#aqriH1%n+5c8p[e:Q
rUTjWq"".Kp[IqGr:'ILp[7S=rTsFKqs=52odp(or@Rq"oe6.qr%\((!&OO.qD8%+oelS(r&=:.qDnF6
p,i+5r]U6Dr&t*Fr'($C!1inVq4IDTq4dVYq4n"cq5!b]qkj@hrho[kr2BOkq5==mWVNLmWqr^jWqWRk
XT#9rXT#=%XRGcDo_7tPo)&"YoD%nMnb;PJn,)VKn+Z8?mJcJKmJQ>K/+kIi/c74$0D7'q0`3[&1B00/
1AWg)2"`a&2Z,N,3;PZ43qbZ34Sq;>56!kG55[VFSbSfPTD,&TUA(GPV"^_^VZ3LkVu<LiW;WXhW;ijn
W;`goWVNRgX88ptX8/jqXmblDo_7tQo(qtQnc87Snb;PKn+uPJn+Z8?mJlPLmJQ>K/+kIi/c76p0*![%
0`3[&1B00/1AWg)2"`a&2Z,N,3;PZ43rD&>4T%;;4Sq;>56!kG55[VFSbSfPTD,&TUA(GXU]@7fV"^_]
V?!IjVuERiW;`^iW;`dnW;WaoW;rspWqWRjXT,?sXSo9ioB#W=oD8%RoCqhOnc&(RnG2PKnFuDGmdfcF
m.p&Im//C,/G^sr0(gmo0`Nm,1&Ea*1]B0+1]0*&2>T6/2u>Q73W(l53Vtl849%GA48M):4o@MC5Q3kE
56.8LScGDZTD,&TUA(GXV#R:gV"^_\VYd:kVY[7jVtd4hWVi^mWr8msX88jqX88mmX8o<sXSo9ioAoQ<
oDA+RoCqhMnbVbSnG;VKnFuDGmdf`Fm.fuIm//C,/G^sr0(gmo0`3[&1&s-01]K6,1]0*&2>T6/2u>T7
3W1r63Vtl848qAA48M):4o@MB5Q<qF56.8LT)##XU&(JYUA(GXV#I4gV"^_\VYd:kVYR1jVtd4gWVrdm
WrAstX88jjX8]3lXSo9ioAfK;oDJ1RoCqhMnb;PMn+Z>Hn+Q25mJlPN/+kIi/c76o0D[C#1&Ea(1B93.
1]K9/2"`a&2Z,N23;tr;3;PZ43rD)<4T@M>4Sq;>55[VF55[VFSbSfPTD,&YUAUb[U\LY`V>[1iVYI"_
VY[1jVYI(iVtd4fWW&jnWrB!tX8ApkX8&arXo>F#XSo9ioA]E:oDS4[o_7tOo(V\KnGM_TnbDVJn+Q2@
m/ZSKm/ZMN/+kIi/c76o0D[C#1&E`u1]0*&2>T6/2u>T53WD)83Vti;48h8=49.J>4Sq;>55%2@SbSfP
TD,&TUA(GXV#7(gV#R=fV>-qbVuN[_W;ERnW;<OoWW&srWqWRhXT,F"XSo9ioA]BBo_7tVo)J@VoCqhM
nb;POn,MqQnFuDFme#oHme?,H/,Usp/G^sr0(gmo0`3[&1A!C#2"`a&2Z,N23;kl;3;PZ43rD):4Sh2;
4o@M;56.8LT)##QU%tGWU\LY_V>d:iVY[.aVYR.cVuiorWVNLhWW/pmWW9$sX8T'mX8&dqXo,:!Xmbl>
o_J(YoD\=[o_7tOo(V\KnG_nVnb;PIn+Q2BmJcPKmJJL-/H.7"/c76o0D[C#1&E`u1]0*&2>T6/2u>T4
3<2&83Vtl847kZ74oRVB55%2@SbSfPTD,&TUA(GXV#."gV#@1fV>-q`Vt[.iWV`UoW;3CmW;*CjX8]-n
X8&dpXo5=$Y5YQloAK98oDeC[o`+OYoD%nMnb;PQn,DkOnFuDGme,uGmeQ8J/+kIi/c74$0D7'q0`3[&
1A!C#2"`a&2Z,N23:o6.3rD)34Sq;>56!kB56.8LT)##QU%tGWU\LY]V#[=hVYm:cVYR.aW;`dnW;*@e
Wr&jsWqWRhXSf4"XT,I'Xmbl=o_7qWo)/.So)S@Wo(MVJn,VqUnb;PIn+Z8DmJQDKmJJL-/G^sr0(ppu
0D[C#1&E`u1]0*&2>T6/2u>T,3Vtl847kZ44o@M;56.8LT)##QU%tGWU\LY\V>I.gV#[FhVYR.aW;W^n
W;*@eWW9*sWrT0oX8&dnXoGL%XoPTmoA9-6oDA1ToCqeUnb;SJnGMhNnFuDGme?,GmecDL/+kIi/c76o
0D[C&1&`p)1A!C#2#B-12Z,H/2Z,N23:o6.3rD)34Sq;>55%2@SbScVTDG2SU%tGWU\LY\V>I.gV#[Fh
VYR.aW;NXnW;*@eWqNLiX8&dnXoGL%XoPTmoA0'6oDA1SoCqhMnGr+SnGDbMnFuDGmeH2HmecDL/+kIi
/c76o0D[C#1&E^+1\ER%2#B012Z5N02Z,N23:o6.3rD)34Sq;>55%2@SbSfPTDkP\U%tGWU\LY\V>@(g
V>mIiVYR.aW;NXnVuWjnWVELhWrT6rX8]3tXST%!XSo<joA'!6oD8+RoCqhLnbM\Nnb;PIn+Z8GmJ?8K
mJJL-/G^sr0(gmo0`3[&1A3O(1]0*,2?#N52>T6/2u>T,3Vtl847kZ44o@M;56.8LT)##QU&LeaUA(GX
V"pk_VZ3LlVu*@eVt[.eWW&jrWqr^iWqi[qXSAjkXSo:"Xo5Eko@rp6oD/%QoCqhMnbM\Mnc/+SnG)JG
meZ>HmeuPN/+kIi/c76o0D[C#1&E`u1]0*,2>oH52>T6/2u>T,3Vti;48h854Sq;>55%2@SbSfPTD,&T
UA(GXV"pk^V?!IkVu3FhVuN[hW;<LnW;`goWVELhX8f9sX8&dlXo5EkoA]E<o_\7To_7tOo(V\NnG)PK
nFuDFmecDHmf)VO/,Usp/G^sr0(gmo0`3[&1A!C#2#B0.2?5W22Z,N23:o6.3rD):4Sh2;4o@M;56.8L
T)##QU%tGWU\LY\V>$kbVu<LgVtm:kW;3CmW;WaoWVELhX8]3sX8&dlXo5Eko@`a9oDS:To_7tOo(V\O
nFuJJnFuDFmelJHmf2\P/+kIm/c@:!0(gmo0`3[&1A!C#2#B0&2Z,N23:o6.3rD)34T7MC4o@M;56.8L
T)##QU%tGWU\LY\V>$kaVuERhVt[.cW;rpqWr8plWqi^oXS]'nXSK!sY4(u7o_nCYo_e@UoCqhMnbhnN
nb;PIn+Q2JmIorJmJJL-/G^sr/c[Qu0D[C#1&E`u1]0*,2=rg)2u>T,3Vtl847kZ44o@MD5PRGCSbSfP
TD,&TUA(GXV"pk]VY[4jVYR.aW;*@hWrB!mWqi^nXSf+!Xnf'oXo5Eko@W^6o)SIWo_nCYoCqhMnbqqW
o(V\KnFuDGmeuMQn+Q2I/+kIi/c76p0*![%0`3[&1A!C#2#B0&2Z,N23:o6.3rD)34Sq;>55%2@SbSfP
TD,&TUA(GXV"pk]VYR+iVYR.aW;*@gWrK'nWW9*rX8B!sWrT9tXSK!sY4(u6o`"I^p%J%PoD\=Xo(MVQ
nGi(Rnb;PIn+Z8LmJlYLmeeU./G^sr0(gmo0`Nm,1&E`u1]0*,2=rg)2u>T,3Vtl847kZ44o@M;56.8L
ScGDZTD,&TUA(GXU]@:gV>$kVVZ<^kW;*@fWW9$nWqi^pXSo7"X8f<uXSK!sY4(u5o`+O^p%J%QoCqhT
nbM_TnG`"Qnb;PIn+Z8MmJcSLmeeU./G^sr0(gmo0`3[&1&s-'1]0*,2=rg)2u>T,3Vtl847kZ44o@M;
56.8LT)##XU&(JYUA(GXV#R=hV>$kVVuNalW;*@fWW9$nWqi^kXT,@#Xo#3qXo5Eko@<I5oDS@Uo_A%P
o(MSRnGVqPnb;PIn+Z5MmJZMLmeeU./G^sr0(gmo0`3[&1A3O(1]0*,2=rg)2u>T,3Vtl847kZ44o@M;
56.8LT)##QU&LeaUA(GXV#I7hV>$k^VZ<[lVuE[lW;*@\Wqi^jX8o="Xo,:!Xo5C#Y4(u3o_eCVo_7tO
o(MVPo)%tTnb;PIn+Z8Jn+uJM/+kIi/c76o0D[C#1&E`u1]0*,2=rg)2u>T,3Vti;48h854Sq;>55%2@
SbSfPTD,&TUA(GXV#@1hV>$k^VuN^oVuN[nWV`XhWVEInX8/dkX8&arX8K*uX8oF"Xo5EkoA]E6o_\=U
o_7tOo(V\Po(MVJnG)JHmecJMmeeU5/G^po/c76o0D[C#1&E`u1]0*,2=rg)2u>T,3Vtl848V/:4Sq;>
55%2@SbSfPTD,&TUA(GXV#7+hV>$k^VuEXmVu3OnW;igkWVELnX88jlX7r^mXo>F%Y5>@"Y4(u7o_nFY
p%S+QoCqhNnb_nNnb;PJn+c>In,2VO/+kIm/c@:!0(gmo0`3[&1A!C#2#B0&2Z,N23:o6.3rD)34T7MC
4o@M@56*tI56.8LT)##QU%tGWU\LY^VZ3LeVYI(fW;WXkWVraqWqr[pWVELmX8ApmX7r^lXoGL%Y5GF#
Y4(u3o_\=]p%S+QoCqhOnbVhMnbDVJn+lDIn,;\P/+kIi/c74$0D7'q0`3[&1A!C#2#B0&2Z,N23:o6.
3rD)34Sq;>56!kG56*tI56.8LT)##QU%tGWU\LY]V?!IeVYI(eW;`^kWW&jrWqr^iWr9!rWqi^iXSJsu
XSo=#Xo5Eko@3F.p%e7Zo_7tOo(qnPo(V\KnFuDJmeQ>MmeeU./G^sr0(ppu0D[C#1&E`u1]0*,2=rg)
2u>T,3Vtl848V,?4o7A=4o@M@5Q="J56.8LT)##QU%tGWU\LYRVYI(dW;idkWW/prWr&djWr/prWW9-s
X7r^jXo5F$Xo5Eko@3F-p%J%ToDS:To)%tPo(V\KnFuDKmeH8MmeeU./G^sr0(gmo0`Nm,1&E`u1]0*,
2=rg)2u>T33<2,;3Vtl848V/?4o@G>4o@M@5Q3nL5<k_6ScGDZTD,&TUA(GXV!k2UVu!=lVtm=lW;`go
WVELjX8].!XS]'tXST$nXo,@$Xo5Eko@3F,p%J%PoDJ1Xo)%tOo(V\KnFuDLme?2MmeeU./G^sr0(gmo
0`3[&1&s-'1]0*,2=rg)2u>T33WD/<3Vtl848V/>4oIM?4o@M@5Q*hJ5FqS@q4IY[qP!_ZpS7MZq5+.i
pnmhaq5F(f!3#jrr2KIkqQ'XrriH$upT4@rqlTaus/l7&n+5'$!;?0[p@S.Op[\7P!;#sUp[S"Ip[A(K
!:]aO!:Kb8odoqkr%@XqqCqh%q_Ik$s"jR0q_e"(r&=L4q`4X:rAja9r&ad<rB:-Bq`Xj@q`k!D!1inV
q4IDTrhB=bpS7MZq541iq53qbq5F%er2T^ppo=1ks/Q%!rMoq#poO7mrN?.&!3Q4&n+5'$s7Z3[p@S.O
p[\:Qs7?'Ws75pSp[IqGrpKgUp[A#1odoqkr%@XqqCqh%q_Ie"r&":.oJZV+q`+I5rAsp<q`4^=rB'm=
r&t'Bq`Xj@q`k!D!1inVq4IDTq4dVYpn[__rhoUipo""fs/>[kql9Xppo=.j!35suri?($q5j@nordcT
iq2j7rq?*Zp[n4Op[\=Rrq#pUp@7nHp[A.Mrp]^Or%%[rqCMIpr%@XqqCqh%q_Ie"r&":.oJZV+q`+I5
rAsp<q`=X:q`Oa=!'L-Ar'(!Br'17Qpn%;RpS%DWpS7MZq54+gqkj.dq5F+gs/Gjps/GdnpoF:ns/Z.$
qQ0Ioq5s_$riY_]f_#.7rV$!Yp[n4Op[\@SrU]gTp@7nHq!\7NrUBXOr%%Fkr[n(#r%@XqqCqh%q_Ie"
r&":.oJZV+q`+I5r&Xj<q`=X:q`OU9r]U0Cq`k!D!1inVq4IDTq4dVYpn[__r29Iipnn+kqPa.fq5OFo
po=+iqQ'[trN5supoX@ps0)I*n+5'$r:U-`q"=CRp[e.M!:g$Zp[\%Jp[ItH!:KdSqX=>4odoqkr%7t&
p+Q7rr%\((oJ?D%q_e"(r&=L4q`4O7!'0p;r&ad<oKE+9s$-HHr'17Qpn%;RpS%DWpS7MZq54%erMBRn
q5=7lql'7gn#H/`q5jOsqlKRpq6'_#!3Ye^eF`Y3p\":Qp[e.Mr:B[Rp@7qIp[A"KqsXG5odoqkr%@[r
!&+1&r%\((oJ?D%q_e7/!&sd5r&=L4q`4:0r&ad<oKE+9q`k!D!1inVq4IDTq4dVYpn[__qPX=is/>dl
s/GmopSmqf!3>pqpo=CrqQ0Usr2f[qq6'\"n+5'$qY'[Vq"+RYp[e1Nqt'RQp[S"Iq!\(Kr9sP6odoqk
r%@XqqCqq(r\=:*oJ?D%q_e7/s#9j6r&=L4q`4:0r&ad<oKE+9q`k!D!1inV!2'+[pS%DWpS7MZq53tc
s/,gpqPX=lr2B@hpo=@pqPs=kq5jRtriQ.#poX@prNG\]eF`S1q"=@Qq=FXXq==CRp[\(Kp[J"Iq=+@O
r%%FkqCVUtoe6.qr%\((!&O:(r&":.q_nF4rAOR4q`+I5oK)n3q`OL6r'(!Br'17Qpn%;Rrh91^q4dVY
pn[__q5=7iri#^lrMfaopSmqfs/Z!rpoF4lqQ9auriQ("q6'\"n+5'$q=aRUp@S+NqXXIRp[\(Kp[J%J
q=+@Or%%FkqCVUtoe6.qr%\((p+u_)r&":.q_nC3r\j[5q`+I5oK)n3q`OL6r'(!Br'17Qpn%;RpS%S\
r1`q\pn[__pnn+hrM]Xlr2K[opSmqfri>prpoF4lq5s[upoXLtrN?+&n+5'$q"FITp@S.OqXXFQ!:opU
p[S"IqsX=LrpTb8odoqkr%@XqqCqh%q_Ie"r&":.q_n@2s#0d6q`+I5oJut6rB'm=oKE+9q`k!D!1inV
q4IDTq4dVYpn[__pS[qfrMTOls/>[kpo=:nr2Kauq5a=mpoOOtpoX@prNG\]iq2j7p\+@Sp@S.OqssLQ
p[\(Kp[J+Lp[J4Or%%[rqCMIpr%@XqqCqh%q_Ie"r&":.q_n@2s#0d6q`+I5oK)n3q`OL6r'(!Br'17Q
pn%;RpS%DWpS7MZq53naql'LlqPaInq5OCnpo=7mrMon!qQ'Fnm]H;frNG\]f_#.7p@e7Rp[n4Or:9RQ
q"".Kp[J.M!:fgQ!:Th9odp(or@Rq"oe6.qr%\((oJ?D%q_e7/q_nL5r&=L4q`4:0r&ad<pHAL=r'(!B
r'17Qpn%;RpS%DWpS7MZq53naqPaFln#?,_!35psri5t!qlBOopT4Fuq5sIqrNG\]eF`Y3qtBdWp[n4O
rUKs\p@J(Mp@7nHrpTmWp[J)2odoqkr%7t&p+Q7rr%\((oJ?D%q_e7/of)b-q`4:0r&ad<oKE+9s$-HH
r'17Qpn%;RpS%DWpS7MZq53naq5=:kq5F@opo4%gqQ'XrriH!tq5j=ms/u4#q6'\"n+5'$o_/:WqXsUT
p[eCTs7H'Wp[\%Jp[J4Os7,jQr%%FkqCVUtp+HD!qCqh%q_Ie"r&":.q_n++q`+I5oK)n3q`OL6r'(!B
r'17Qpn%;RpS%DWpS7MZq53napo+"fs/Pmopo=.j!36"!r2Th!qQ0Fns/u4#q6'\"n+5'$oChqOs7H-Z
p[eFUrq,sVp[\%Jq!e=PrpfdQr%%FkqCVUtoe6.qs"XL-q_Ie"r&":.q_n++q`+I5oK)n3q`OL6r'(!B
r'17QpmqJXqOdMUq4dVYpn[__pS[ebq5OCoq5O.hpoF=orMoq#qQ0[uqQ9b"qlT[s!3lI+n+5'$o(MhN
p[eIWq""LVrUfjUp[\(Kp[A1OrUK^Qr%%FkqCVUtoe6.qr%\((!&O:(r&":.q_n++q`+I5oK)n3q`OL6
r'(!Br'17Qpn%;Rrh91^q4dVYpn[__pS[ebq5O@nqPj7ipoF:nri?($qlKOoriQ7(r2odts02O,n+5'$
nb2bNp@S+Nr:KaTp[\(Kp[J+NqXFD5odoqkr%@XqqCqh%q_Ik$s"jR0q_e7/of)b-q`4:0r&ad<oKE+9
q`k!D!1inVq4IDTrhB=bpS7MZq53napo+"frMoaopo=+iqQ0^triQ+"pT=@rrN-('riZ4&ricC+n+5'$
nb2_Mp@S.Oqt0jYqt'RQp[S%JqsjRQr%%FkqCVUtoe6.qr%\((oJ?D%q_e7/of)b-q`4:0!'C-@q`OL6
r'(!Br'17Qpn%;RpS%DWpS7MZq53napo+(hs/Gprr2B[sq5X4jq5aRsrN6%"pT==qriQ4(ql]n%n+5Q2
oCVPGp\"7Pq=FLUp@J%Lp[S(KqXOLQr%%[rqCMIpr%@XqqCqh%q_Ie"r&":.q_n++q`+I5oK)n3q`OL6
r'(!Br'17Qpn%;RpS%DWpS7MZq53napo+"fql9[qs/H%!qPs=kpoOCqriGjrqQBk#ric7&rNPb^f_#.7
n+QMKp@S4QqXjLQp[\(KqXF=NrUB_8odp(or@Rq"oe6.qr%\((oJ?D%q_e7/of)b-q`4:0r&ad<pHAL=
r'(!Br'17Qpn%;RpS%DWpS7MZq53napo+"fqPsOos/Z$s!35gppoO@ps/bssq5s_"rNH1&rNPb^eF`Y3
o_/%Pp[n=Rq=OCPq"".KqsaCNrp]h9odoqkr%7t&p+Q7rr%\((oJ?D%q_e7/of)b-q`4:0r&ad<oKE+9
s$-HHr'17Qpn%;RpS%DWpS7MZq53napo+"fq5XIori>prpoF1kqlTn"pT=4nr3-+&rNPb^eF`;)rV$!Y
p[n@Sq"4:Oq"".Kr:'INs7#q:odoqkr%@[r!&+1&r%\((oJ?D%q_e7/of)b-q`4:0r&ad<oKE+9q`k!D
!1inVq4IDTq4dVYpn[__pS[ebq5O.h!3,ptr2TOmpoFItqlKk"pT=4nqlg%&rNPb^eF`,$r:U!\p[nCT
p[n4Op[\%JrU9gXq!nCRr%%FkqCVUtoe6.qs"XL-q_Ie"r&":.q_n++q`+I5oK)n3q`O^<!'^<Dr'(!B
r'17QpmqJXqOdMUq4dVYpn[__pS[ebq5O+gr2]dr!3H!spoO1kqQ9Oqqlg%&rNPb^eF`)#p\"LWqt0jY
!;6*Yp[e.Mp@8.Os75sT!:]n:odoqkr%@XqqCqh%q_A.-oeZM&q_e7/of)b-q`4L6!'C*>r&ad<qE=jB
rB:'Bq`k!D!1inVq4IY[qP!_ZpS7MZq53napo+"fpT"+kri6""qQ'Cmq5jY"poOV$Y-.Z)qQBn%rNPb^
eF`&"p\":Qrq$0_p[n4Op[\(Krp]sYp[S/3odoqkr%@XqqCqh%q_Ik$s"jR0q_e7/of)b-q`4L6s#^0?
r&ad<qE=gAr]U0Cq`k!D!1inVq4IDTrhB=bpS7MZq53napo+"fpT"(js/Q("qlBLnq5s\"q5s\#qQBe#
rNH1(n+5'$l1XoFp@SCVrq6-[rq,sVp[\(Ks7$$Yq!n84odoqkr%@XqqCqh%q_Ie"r&":.q_n++q`+I5
qE"U;r]1$@rB'm=qE=d@s#p9Dq`k!D!1inVq4IDTq4dVYpn[__pS[ebql0UppT"%i!36"!r2]Uoq5sY!
qQ9b#ql]aurNPb^iq2j7l1XlEp@J@VrUopWp[e.Mp[J7QrUTdSr%%[rqCMIpr%@XqqCqh%q_Ie"r&":.
q_n++q`+I5qE"U;r]9s=q`O^<r&t*Dr'(!Br'17Qpn%;RpS%DWpS7MZq53napo+"fq5XIppoF=orN#^p
q5sUuqlTh#r3#k!rNPb^f_#.7kk=cDp@S:Uq"4:Op[\(Kr:9^Sr%%Fkr[n(#r%@XqqCqh%q_Ie"r&":.
q_n++q`+I5qE"R:s#U'>q`O^<r]^-Aq`k!D!1inVq4IDTq4dVYpn[__pS[ebq5O+gq5XLrr2fjtpoO:n
r3#t"r3-(%!3l='rNPb^eF`Y3mIp;Ip[nCVp[n1Np[\+LqssXSr%%FkqCVUt!&+%!qCqh%q_Ie"r&":.
q_n++q`+I5qE"O9!':$>q`O^<p-/L@rBL3F!1inVq4IDTq4dVYpn[__pS[ebq5O+gpoF:nri>gqq5sOs
rN6"$rN?1)qlft&n+5'$nb2\Mp\"=Rqt9^Up@J(Mq!n4Or:0\8odoqkr%@[r!&+1&r%\((oJ?D%q_e7/
of)b-q`4L6p,i.6qE=O9q`k!D!1inVq4IDTq4dVYpn[__pS[ebq5F@ppo=+iqQ0^tpoFItqQ9XtrN5t#
riZ7)r3-('n+5'$kP"rLp\"@SqXsUTp@J(Mq=4:OrUKe9odoqkr%@XqqCqq(r\=:*oJ?D%q_e7/qDSC6
rAXU5q`4L6p,i.6qE=O9q`k!D!1inV!2'+[pS%DWpS7MZq53napo+"fs/YsqpoF4l!3>mrq5sY!rN?.%
qQKq%rNQ7(rNPb^eF_hqqXsj\qXjUVp[n4Op[\1Nq""FSr%%FkqCVUtoe6.qr%\((!&O:(r&":.q_n:0
s#C!:q`+I5qE"=3q`O^<p-/@<r'17Qpn%;Rrh91^q4dVYpn[__pS[ebq5O@oqPs=kn#QMlqQ9Rrs/l:(
r3$+'r361(rNPb^eF_epp\"FUq"=CRp[e.MqsjFOs7-";odoqkr%@XqqCqh%q_Ik$s"jR0q_e7/qD\C5
s#9g7q`4L6p,i.6qE=O9q`k!D!1inVq4IDTrhB=bpS7MZq53napo+"frN#gqpoF1k!3Q'us/u7$poXV!
pojY#!3lI+rNPb^eF_bop\"IVp\":Qp[e.Mr:0OPs7-";odoqkr%@XqqCqh%q_Ie"r&":.q_n:0rAXd9
q`+I5qE"I7rB'm=qE=O9q`k!D!1inVq4IDTq4dVYpn[__pS[ebql0Upr2]aqpoF1ks/l.!riZ1$pTF:p
qlp+(rNPb^iq2j7iV*'>r:K^Up[n4Op[\:Q!;#sU!:ft;r%.[qqCVUtoe6.qr%\((oJ?D%q_e7/qD\@4
!&sd7q`4L6p,i.6qE=O9q`k!D!1inVq4IDTq4dVYpn[__pS[ebq5O:mri6!upoF1kriQ(!rN?+$pTF:p
qQKt'rNPb^f_#.7iV*$=rU^*`p@\1Pp[e.Mrpg$[p[\54odp(or@Rq"oe6.qr%\((oJ?D%q_e7/qD\+-
q`4L6p,i.6qE=gAq*+[?r'17Qpn%;RpS%DWpS7MZq53napo+"fqlB[qq5XLrpoOFrr2fk"rN-('poaCq
os!oVeF`Y3k4\QBrq-6ap@\4Qp@J%Ls7-*[q"">5odoqkr%7t&p+Q7rr%\((oJ?D%q_e7/qD\+-q`4L6
p,i.6qE=O9s$-HHr'17Qpn%;RpS%DWpS7MZq53napo+"fqQ'UqpoF1krN6"!r3$%$s0)7$pojLt!3uO-
n+5'$nb2GFp\"RYrq?*Zp[n1Np[S=SrU]jUr%%FkqCVUtp+HD!qCqh%q_Ie"r&":.q_n:0p,Mq0qE"=3
q`O^<p-/@<r'17Qpn%;RpS%DWpS7MZq53napo+"fq5aOqpoF1kr2oq!!3Z7&s/l:(qQBUsq69n(s01t`
eF_qtq"FIT!;-6`p\":Qp@J(M!:g$Zq==G6odoqkr%@XqqCqq(r\=:*oJ?D%q_e7/qD\+-q`4L6p,i.6
qE=O9q`k!D!1inV!2'+[pS%DWpS7MZq53napo+"fpo=CppoF1kqlTk!qQ9h#riZ=*ql]^tq69k'!3kq`
eF_Sjp\"IXp\":Qp@J(Mr:BdUJ,~>

%%EndBinary
grestore
np
88.2959 130.12 mo
53.8125 110.274 li
53.8125 87.8589 li
54.6006 87.3898 li
112.624 88.9053 li
135.424 102.076 li
88.2959 130.12 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 397.788 ]ct
[83.04 0 0 44.16 53.28 266.748 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 173 
/H 92 
/M[173 0 0 -92 0 92 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 173 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 173 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 173 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
mg-i<d0faXj9tYir+,S6q.BP;o4If2o4\&7ph9V?r+Yh=qe>h?k%j^-nSS,?qT/6J!6FiRq8`6Lo#:OH
pVl^An\b.=hSK0-p;68(`!P3+n-\4ap'gk0pgs85qe,P5q.K;4r+H%CqIoY<oP4;<phJr,pMBA:qJQ,M
o>^mQa6gqA`q.1H`qRIC`:Ch?_WJ]2_=GJ3#fI&4$KVWU$hb#,AGBa3B)605B)-*6B`)QBBD?08C%H*<
C%uH*C\MZ8D>J/FaSj0Sa8a6Ia8![G`VRUK`U^t<_tV%=_=,52_X@cK$1\GW$KMTg%/aZ2Abfs6BD,s6
B)lT7B`;Z>B_Z<4CAqrBC?B=+D"2B=DZ@fRaS!UQaR$tB`q77G`q[OC`:Ch?_Z%C4_=GJ3#fI&J$I9(?
$hb#,AGBa3B)$$9B)Q?;BCKU7BD?08C%5s<C%uH3CB/2HC\MZ:D?"JLD?.fQaS*[QaR.%B`q@=G`q[OC
`:CeG_YD"-_=GJ3#g3PN$-N\:$hb#,AGBa3B)QB>BD?*7BCBL6BD?08C%,j;C%uH3C]A5IC\MZED=h]A
DZ@iQaS3aQaR.%B`qICH`qRIB`;RUI_tV%._=GJ>#g<ST$HrkA$f2<iAb]j;BCKO6B_c<0B^][)C?B=+
D#S;KD#\ABD>A)GDuRlQaS<gQaR.%B`qRIH`qRIJ`;.@B_tV%/_=GIp$2FqW$L%rB%/j`;Ab]m+BE)ZA
BCBO/B`MoDC%,m"C\MZDD>\5=D>A)GDu%QMao09\b43UJaR[CM`W4*Na7dOJ`U(PC_th48_XbY0$-EVT
$gS2J%-nB#B(0I-B`;`CB^][1CB&)>CADZ-D"hfFDXqZ?DZ+MPDu+JKb4j$WaT'EQanNmIa8X*YaR[CG
`qRIG`:q4F_s5,0`:XGa$MOr!$dfC9%J+6.B`DfBC&Vl=C%lB8C\qlAC\_fCD=q`@D=VTCD>.oJDu+DC
EVIWMaoBH]b4<[JaR[CO`r='Ma7mUK`;mmE`:q18_XbXm$MFkp$dfC3%J495BDH68C&Mf=C%lB8C\qlA
C\_fBD>%fAD=MNCD>.rDDt7oAb4j!XaSj9PanEgIa8a0YaRR=I`r=!P`U1V<_sG82`;0i8$hF_p$i17`
%+,OK%f?k;BDuQDC&2N=C%?$;B`MrFC@5m4C]J>JD")9AD"qlCDY\5GDuX_LDt.iDEqRWMb4j*Mb4`sO
aSj6SaS3dMa7mU@`TY82`U=33$M4`($dfC1%IO`&&,6\5C&VlEC%#g3C]A5JC[Q$6D?"MED>.rCDZFbT
DtIuDDuahNEUe)GF7dZNb4a$Lb4j$PaSj3\amI1Ca7mU@`Tb>3`TIX,$ePm8%IXet&+'o*CAhr?CA2N=
D#S;BD"ql?DYn;HDYJ)KE;=JMDte5GEURrDF8C"MbPB<RbOWgMaoBHYaSX*HaS*[K`pLb1`:Cn<$iUOc
%+YmP%e:.n&,[":CA_l?CA2N=D#J5BD"ql>DZ"AIDZ=YNDtS)IDte5GEURrDF8C"Qc1fH^bPoc\bjrsT
bP00YaoBQXb4EaFaS<gG`p:V7`r-;E$ePm>%IO_l&+'nn&GBo=CADZ>D"DNCD"hfADY.lFDY\55E;OYR
EUIlCF7OGHc1fE^bPoc[bjEUJb5]T_bP00MammIIa7719`U_%.%/gXj%I"AX&*+;q&H$>?D#\;HD!l0;
DZ=SJDXVNAE;a_DE;=JRE;jkTEUIlAF6[l?c1oK_bPf]ZbjEUJao]].bQ#c[b4<[FaS3aF`pLb9`pX?5
%G_K]%bM<O&G?\/&c?G@D#\;HD!l0:D?+PJDXVN@E;jeEDuanJEUIlAF6[lIcgoBZc1fNWc10$Vbl#ZY
bkK<Ob4j$JaRdIC`q%4D$igag%IakZ&*FMt&F^;0')ZSAD#eD@D>8#FDZF\CDtn;JEW:"WEr9qOEVOPS
F8BqVFRaG8FS^1[cgoB[blH)acM,T]bjipUbP'0SbOWgMammIDa7I=AaSu_,%IO__&)%Tn&FU4s')ZVA
DY\/LDu";GDu"AHDZFeQE;4GMEr'hTEVFMKF7jYPF80kTFo6@OG5?F]cgoB\c2Z,acMl)bc0W[RbP'0R
bOWgMan!ODa7RCKaS<j9%Iak_&)\$!&FU4f')ZV@DYe5LDu+AHDtn;HDuXhRE;aeSEV"5MEVFMKF7aSP
F80kSFo?FPG5?F\cgoB]c2Q#hcM5]Zc0W[SbOs*QbOWgMan!ODa83gR`q%4>%IXe_&)Ilt&FU4f')!"1
DY\5LE;OSCE;+APEWC.WEURrFF8p:TF7=;KFo?FWFmjMLGPZR]d.kr`ci)5]chG`Uc2Z#ecM,TRbjrsO
b4j$PaRR@BancJ9%c%ZO&FU4d''g5/DYS/GE;X_IE;=JREoqE;F8BtYF7+/GFoQX\FmaGKGPQL[H2Z+i
d.,H[d.5NWcLT3[bl,i]c19*KbP00TaoBKHaR[IG%c%ZN&FU4q'(usu'DrRBDYS/GE;OYIE;=M8ErC(W
F8BtYF7+/GFoHR\FmaGKGPQL[H2>nYchl)cchYo]cLT6XcM,TSbjimNb4j$BaSj6SancM.&)@fc&a'f*
'&4/j'`;nEE:S#JE;4GKEqaYMErU4WF80kQFn^"QFnp4[GO]kNGPQLSH2c7ddJ2)gdeM5[d.5NWcM,TS
bk'$SbkTBTb4`sRan!U=&)@fb&a'f*'&F;j'_W:>E:@lDErL(REpn&LFSU"XFo$4LFT?U[Fng.QGPcRY
GP?@XH1H:[deM2idJ;/gdeM5[d.5NWcM,TSbk0*TbkK<TaoKTRan!U=&)n/i&aL))'&F;i'_)q0EVXYN
F8p:[FS'VSF8'eOFoHRTFnp4WGQ)dTGPl^`GPHFWH1?4WHiMOndeD/cd/MJfdIGTSchG`Zc19*ObPBBX
bQ#cZb43UEb5)Y*&G-Rr')rU$'D*!q(&Sj=EVXYMEr^7ZF9$CTF8'eOFo?LTFnp4VGQ2jUGPcX`G5upa
GkZLTHN/<fHi)7cdJM;hdeD/[d.,HVcM,TSbkB6Xbl,c[bP00Lan!UC&H*44&G6Y"'(cgt'D*!q(%rF@
EVOSMF8^4SFT$:VFSBqLG5ZRYG56@WGQ;sWGkZL`HMVpZHMi*bHhr-ieG%GddeD5bdeD/Ud.bl\cM,T^
bkoWYc19*QbP00MbPDe?&HEC2&ag;*'(ck4'_i@2']Kkn(B/CTEqj\UFRXDLFoHLYFmaGMGQ)d\GPQLX
H2)X[H1uXaHhi!`HMMp`I/89jeG%Gede;/adeD/Ud.kr\cMu/bc1oNVc19*QbP96NbMj-%')*%,'B9ef
(#p)-(]ACTEqj_EFS^.[FSU(IG5HL_G5-:WGkQFYGklXZHMr3]HMMp`I/89ieG%Gfde2)`deD/Vd.bl[
cM,TZbk96\bk0-RbPB<ObO6&''(6M)'_2st(%rF=(\SX<(]5-JFSKqQFSBqWG5QL`FmjMKGPZRaGQ)mb
GjfnXHMMj^HLcF]HM`*gHhi'fIJnTjIf.afeGdqmeb@Sfe+_;XdJ)#]chPfbc2Q&[cLT6Sbl>lWc1M\/
'(ck.'_2t!(%`:%(\&@?F9$IZFSU(ZG56=VGPQF^GklRYGkcR_HLuLWHMW!gHLH4UI/eWjHiSTkII_ja
eaq;je+hJfeG%Gddd>HVd.blbcMPoec2GuZcLT6SbQ,iWc2&%:'(?S.'_E+!(%<"'(ZZG2F9$I[F9$FY
Fn^(SGPQF]GkuXZGkcR^HM)RXHMMmfHLH4UI/\QjI//3]If%[de,[tlebIYfe+_;XdJ)#fchYo]c2c,e
ch#HPc1fHQc/KB0'DiL.'^6A$(?lXq)#P9OFoHO`G5?@\GPlXPGPQL^H2DjTH2DpeH22d\Hh`!aHhi'h
I/&-gIf"Q`IenQjeah5`ebIYfe+_;XdJ)#^chG`^ch#HPc1oNRc1M_;'DiL4']Tr%(?-/((]YHH)"\^E
)>kENG5-:[Gk6.SGklX_HLlFWHMW!gHKKSTIJnQmI/\TkIJA9hJ+S3cJ,4]ff(dehf(.AbeG.Mkde2&Z
dJ)#dcN)Aed.5NVcM>`UcLhhC'E8d-'^6A+(?65')#>-D)#kKK)>5!HG5-:ZGk?4TGklX^HLuLXHMMmf
HL-%VI/eWlI/SNkIJA9gJ+\9dJ,4]ef(mkhf(.Abe,[tne+(lWdJ)#eci;Ded.5NVcMGfVcLMYJ'Bp5'
(&Sj?(%`:+([i43)>G*8)Y81MGlN!^GkcRUHMr*hHhi!_Hh`!dIJeKgI/&-YIe&!eIK4opJ,+WkJb%Cg
eb%G`eb@Sfe+(lWdJ)#fci2>dd.5NWcMGfVcM\FU'BBl#($QLn(\S^8)>Y62)Z1QPGPHFZGlW*aH2r6[
HM;ddI/83bI.MdcI.r'aIeeHnJGaohJ+nKnJbsunJbjulf_="gf(.AceG@YheG[kje+V5`dJ_MadIPZY
cN)8hd.YfM'_W:<($QLu(\AR))<i(;)uCTP*;k'VH22d\Hh_p_HhVpeIJ\EjIe/!bIfFijIe\ElJGOfl
J,b)rJG4WoK)C2jK([djfCIM`eb@Sje,RqneFV/_deD/eddkfVd.blad.blT'`/XA($QLo(\S^1)>"gI
)tt9I)uCTE*;k'VH22d[Hhi!`HhVpdIJeKjIe8'bIK4fjIK4lnJ+eEhJ,Y#rJG4WnK)L6#KCa]ef_F(g
f(.AgeG[npe+_A_e+V5bdJVG_dIPZZchl)ach.tP(%rC,(?lY-(uuS,)Yk?O)ZLcM)s\LAH16.SHiJKi
Hhi'`II_jdIJA9eJ+nHnJan9bJc12uJbOcjKDU8sKCdajfC@GeebdnkeG[hreb@Sae+V5cdJMA^dIPZ[
chc#aci4^W'_W:+(?65')!Mq3)Yb9B)sJ@?*V4UQHhVp`I/nZ`IJA9fJ,aupJ,XrnJG+QiJGFcaK("?k
K`$K!L$mXgf_O.pfD*qgeb[kkeah5ae,IeqeFqAcdd>H^d/25cdJ=UB(?lY))!Mq1)Yb9B)sJ@9*W-uM
HMMp^I-,kPIf4cpIfOrmJ,+WfJbjomJbO`rKDC*!K^aWmK`-Q"L$dRjf_sInfD!kgebRejeah5ae,Rkq
eFqAdddYZ_d/_PadJ=UB(?lY/)!Mq1)Z:WB)sJ@9*VLQPHMDj_I.r'aIeeEdIfFooJ,OoqJ,FlrJFA'b
JcLAtK(jokK_^8rK_^<%LAQ\qg&'Isf^dYgf(IShf(RYbeG%Dldf%\ie+_;gdGiR<(?lY.)"&:8)Z(KB
)tY-I*W-oL*U=dEHh`!aII;OaJ,4ToJH(/rJ,"QbJc:2qJbOccKC4ElL&-JuL&$K'L\uo*g?RDdg%*eh
fDO4pfBh)_ebmqkebR_peG%G_deqSgde+CK(\ejH(\JX0)>"j3)tk9J*Uk*6*rI,XHh`!aII;RaJ,=]n
JGXikJFnElJcC8rJbOckK)gT$KC4EkL&6Q!L&$K&L])thgA9M%g%*eifDO4ofBh)_ec!ttf([_heG%G`
df%Ype+hAf(A8R/)!Mq1)X/4<*;U]F*VLQO+8R&P+8d8ZI.2RYIe\EgJGaurJG+QjJbaltJbaolKD:,r
L%^2pL&?]'L&$JrL]3%mgAK\!g%*eifDX8#f_="bf(RYneGn+oeb@Sfe,.Side_GgdeXaQ([i4*)>+p4
)u(EO*9eL;*q(3J+T<Pa+S1$YJ,aulJ,"QiJbt&tJbXfkK(susK`-PkK^XWiLA-H'M"6>tM"KEjg@s:k
f_="sf)OCsfBq/_ec4.uf([_heG[kne,RkqeG@YieG@Yj([2e+)>+p3)u(EQ*:Fp?*pFd?+SR#Z+S1$X
IfOrlJ,"QjJH18tK(X]iK(surK`6VlK^XWiLA-K'M"?DuM#Z2rg@X.ig@s:sf_O4pf_="ef)=4nf)F7p
eb@Sje+hGie*._6)>+p9)uUcQ*9eL9*q19D+RpWQIJA<fJG=ZqJGaukJbaotJc:<!K(sunK_pJrK_U8s
L&d#(LA6PrM#<&*M#W;-M<imeg[X"lg&'Fsg%X.nfC@Gjf)XCmf([_heGReieGReg)"edB)Z:QH)XeXB
*;UZ>*VLQB+8-iA+oEP^J,"QiJc12tK(somK(josK_pE"L&H\pK`Hf$L&cr&LA?W$M#N1tM#N8/M#`G0
M>E+qg@F"ggA'@uf_=(nf_="mf)+%rfC@GdebIYldf@qmeG[kh)"ed8)X\RB)tY->*V:E;+8d8G+nd,X
JG4WkJbO`rKDC,pKD1&iL&Qc#L&$JkL\Zc%M=uc*M><#(MZ8V3MY`7sh##q%h!NkjgABY!g@s;#f_O1p
fCmkjfCRSgeb[kmebU-V)=JL8)tt<K*9eL9*q19D+R('I,5*8[J,k,hJbOcrKDL2qKD1&hL&Zi$L&$Jk
L\Zc$M#`A,M"cc%MZ/P3MY`7sh"ok$h!NkkgA9S!g@j4of_O.lf`0RufCRShebRemebU0J)Xn^=*:+^E
*W-uC+7p]F+nQuK,P-K^K(josK`$K'KDC0#L@9ilL&cr,L\li%L\ci+L\cl%M"cboMYW2/N;\\8NVe\#
h"fe#h!NklgA0Lug@j4of_X5!f_=%mfCIMhebI_me`e"@)tY-@*V^ZP*pFdE+R('A,4HiT,lE5gK)('!
K_^;rL&$E%LA?PuLA6Q&M#<&(M"$9$M"uo%MYi>2MY`;2MZA_,Mu\k7N9f9oh=o^lg\TY"g\9Fqg%j;#
f_a:lf_="gf)+"mf)+"d)Y>!G*;gcJ*;plZ*?H9r*V:EA+8-iF+nd,K,PED\JbaltK)(&nK_L2sK`6`&
L%pDtL\uu,L\ZbpM#`A-M>)o(MuS\1N;nh+N;nn8N9f<thtQ"%h<ittg[j4ogAot&gA'>$f_jIog%X.n
fDO4ofDO4m)YG'<*;^cQ*Uk-B+9!D_+7p]F+nQuI,PEDV-3&SrK(suoK^OQiLAco)LA6Q!M#3&&M"cc$
MYi>3MYW21Mti8+NVJJ.NV\\$h>?+(hY5j_h"KLtg@s:tg@Eqkf_="rec=@sfDX:s)YP-=)uq#Q*Ub'A
+86lX+8[2F+o3DI,Prb_-28eaKCFQgL%pDuL\uu+L\Q\qM>rD2MYr>*MYN,-MunrsMuAY4N96,qNr"h&
h>6%'hY5jog]610h"BIsg\9Fsg%sFog%O(mfDaA$f_="sf(C!R*;gfS*U+XB+6apF+o!8[+oEPK,Prb]
-2f.g-Mf%d-N&McK_L2qLA?W%M#E)/M>;tsM#`A1MZ&D+MZ/P2Mtr>1NVe\&N<#"8NVSV2O6b]ri:l.&
hYZ.*h>6"&h=B@qg]#q,h"TRng@s:sf_O4sf_QQ_*;CNH*UY!B+7:9F+n$WC,PWPa,l/h]-3,@c-N&Mk
K_^>rLA6Q"M"QW$M"li%MYrD3MZ8Y5N;eb1N:`,-N;/D,Nr+n;Nqnb4OR(fri:l.,hYZ1&h>,q%h=B@q
g]-",h"TRng@s:tf_F.sf_lf]*:t9@*q^WC+SHuH,5`\T,l/e`-1<2S-iAYmL&$JuL]E5*M!p3#MY`2/
Mu/D,Mtr>-NW4t:Nq88-Nr=t4Nq\V2O8t@?Oo:C<OmCori:l.&hY,e#hYl:-h=B@qgAot+h"TRngA'@u
f_=(sf_$6W*VLQN*qUQD+Sm8G,5WVR,k`PP-N#7g-i>CjK_U8sL@0itMXZK%MYi8/Mu8J-Mtr>,N<"q9
Nqn\4NV\\7NVJP.O84n8OoCI=OmCs"iqMF*i:Gh-hVd>li:c('hY,e"h#-"!h"'4ogAK_"gA2f_*W$oN
*q^WD+T!>N,4m,L,kNDO-Mo1\./\eoLA?Z!M>;u-MYi8)MYN,-N;\\7NV\V&N<#";Nr=t5Nqnb9Nqnb:
O8"b3Oo(=:OmCs!iqMF+i;;F,hu)F+htZ(%h>#e&h=B@lg\BM"g\BM!*;gfW*pOgD+7C?F+n$WP,O$KM
-1iP_-M/\U./\hhM"cc$MZ/P3MYE&(N;/D3Nq88)Nr+n:NrP4<O8"b7Oo1==P4Xn5OoUXBPQ-g3i:Z+(
iVh^3i:Gk'i:l.'hY,e$h##pth"'4qgA9S"gA`2k*Uk-C+7:9L+mpQJ,OQiT-1WD]-MAhZ./bRp./#+f
L@C#nM>2u,MuAM5N;/>+N;/D3NrG%3NVAJ0O8k7?OSb+5OSk7>OSb46Onk1<PQ-g3i:Q%/iVDI,i:Pq'
i:l.'hY,e%h"ojsh"'4rgABY)g\TY#*Uk-H+7LEG+mpQO,OZoO-2f1j-Mf+e-N#7`..A\`.f>%rM"uo%
MYN,*N;nn5N;nq3NVne7Nr4n7O8b16O8+h9Oo1=<P5UO5P5^U>P51==PQ6p5ir.p3j7;4(iVML)iV2:(
htZ(.h>Z=*hY5jrh#6".g[j2#g[uW\+7C?L+n[&I,Prbd-28b^-2f1e-LN8Z../PX.f:gpM"li&MYE&(
N;&>-N;nn<Nr+h2NqeY8OSY%;Ont17On+\7Onb+8PQ-gFPl-a@Pkp[9iqh[*j7D:(iVVR)iV2:)htPt-
h>Q7)hY5k)gu@,^*r@&J+S?oS,4HiL,lT+i,l8na-2T%X-h\tV.Jt[h/,Y8!MYW1uN;8G5NqeY5O8P%5
O8+h4Oo:I6Onk1?PPLCAPkpU<Pl6mGPQ7$GQ26gFipYmsj7D:(iV_X)iV2:)htQ"*htGq,h>5spg]61%
h"i)i+7:9F+o<JP,P38N-2JtX-i,7\.J,+[/,Y8!MYW1uN;8J-Nr4t:NW>1:O8Y1<OSP%:P4Oh3P5^[A
P5^^CPP:=>Q2[$JQMZsDQL!Q&j8S*0iqD@0huMd-iV2:)htZ(*htQ"%h<s(uh>c:(h";c^+S?oT,4?cL
,k!&V-LW>^./bR_.J,+Z/,UsrMXZPuN;/D.Nq\V0O9(K*qN1`?nr`g4rK.)Dq3(Q;pQYWAr06r@q3M&I
oTnh's5`S.n`0H)p>bl+pYkl)rnmb7pYbf'pYPf'qVD2.o\K?cn0%QNr$(PRp*B&Pr$Lt^r?qLkmO@iZ
qCDIp!%[aor%7i(pl"s,pPo!0!06l9!0R&<p6#35rf[/@q3(K9s-3ADq3:W=pm(oHn<X'?r0I2Go],`,
lK%KqqVq2.p>Yl+p>Gu.ro*V0pYYr+qqh#%rnd>(mi_6Gr$(PRr$:\Vp*T_cpa>b`q^M@kq^MFmoIKVd
p+?3"pl"s,pPn^(!frJ+q2k93qiLc>r/pf<pQPT@qigi?pQbN>s-N8ArKmJK!1<YMs5WM,l/_EqqVq/-
p>Yl+p>>r.rSdM/s53Y0pYPW"rSI8(ocX,ToHNuRoH`oPqBl.gs!Rdoq'Z"ep*oV`p+,P^r%7Upr/:?/
q2P-0r/gl=p6#35plY$.s-3DEpQY04s-NPIop>N@q3UuGs-WhSr0Zg2mH40)pZ253mH"'&p>Z#/r8RY6
pYkl)pYYo*pYYo*qB5JTq]bJRq]tVVq^2.dq^;@ks!RFeq^Lt`q^_+dp+>tjr/CE1q2bK9nrW[0rK@&?
plbE9pltfDqipi?pm1Z@q3LfBpm;&Jrg<VNq3h)Jlf@EppZ;/1r8[2*pZ)&.s5O"9!9<k6p>Pc(pYYr+
!9!V/rSI2jq]bJRq]u%bq^21d!%.UjoI'>\oI9J`oIKD^qCV1hr%Iu,pl,97qN('+q2tT<r/pc;plkK;
rg!DGpQbN>p6YWApm;#JnX0-?qO6a2lfRs'pZ2;5!9NV/qW%S8p>Z)1s5Wn6p>Pc(pYYu,s5<Y/rndJp
p*0,Rp*BM]s!I7_q^:h\q^Lt`q^_+dq^q7hq_.k$rJgQ2q2b93plYB8mZ[[9qNUc?pm1]?pm1`BrL!JK
pmCfDqjRPQq3q/LlfR<lpu_A5qW@A1o&TW,qW.M5ro<_3pu2&,q;M2.ocj&Rod'D\mj@oZngOGbr$h%`
r%%1dr%7Onp+Q+nr/LK4q2k?5rf[/Aq31Q;pm(iEns0$:s-NPIpm:fDm[<g<qO7JRrLEhUqOHm6jQH=#
q;qG7o&]H'qW%S9r8dV4pYtr+qV_/-qr%;pn0@cTr$CbXr$V4epaH"gmje2bp+5hfp+Gtjp+ZD!r/LK4
q2kW=q2tH8q31Q;pm(fDo9K-;rg3JIpm:fDpR)#Mq3guG!1WhSr1*bUqOHm6jQH:"qW7M7o&]N)s5a(;
puM20pYtr+qr%5-r8@#gq]u"an0[uZr@%:dqC2+fr[[stqCD7joI]bhoIonlp+cK+q2bT<q2tE7plkN<
mZm^9rK[/Dq3UlD!13JJq3guGqO@MRpRCcEs-rkTlfR6jpZDA7pu_,.!9Eb4r8[P4pZ)#-pYl&.!93e4
r8@5mod'A[n0[uZn0n,^q^V@ks!mjqq^h1fq_%e"!&4(!q_7q&qD/"(s,d5AplYB8mZ[I2pQbN>pm:lF
rg3GJpR1fFqj[VSq4%,J!1NYOq4.>Qs.'([rLN9;kNVa)pZMJ<pZM)/pZ;A7!9X%;o&TQ*pu;22pu;,p
p*BM]od0Ydp*]M]odT_ep+,bdp+>nhq_.Clq_@q&rA+:,o9&j3pQPB:q3LH8pmCoGs-WVN!1WbPo:#fN
S!s)@pmh8Qr1*\VrgikVrLa(\lf[EppZVD8rTO:FpZM)/puVJ8s5s(;o&TQ*q;V82q;V5qr$;.cq'Ph_
q^:h\q^MClmjn8dmk+DhqCh=lqD&"*nhU,!o9&j3pQPB:q3LcA!1<SKpmClF!1<SNs-rhQrgW/Apmh5P
rLEbVs./tWr1F"\lf[BopZMV?qWI_=pZM,0pZ;D8roWt:o&TQ*qVq>2qVq>sr$D=hnL"/]q^Cn^q^V"a
r%.Ilp+H4qmkF\ps"X@*!&OO.p+uV'r/pc;q31Q;pm1`BpR(fFs-WSLn='BHq3q)Jq4.>QrLEYRpR_DW
qk!bZrL`qZlfmNrqs*q?s60IIpZ_G9o&ol3puhG7p>tl+!9<k8qr@W#rZqCfod9>Zq^D(cp+#\bq^h1f
q_%Rqp+ZM#r%[h!s"jU/r%n4,r&+D8plkN<pQkT@q3^W=!1<PLpmV#Jq4.JSpmh/Nqk!bW!2'(YpRh8S
r1X+_s.]Fblfm9kpZV\ArTa1B!9s7Ao&oo4pZM>6p>tN!r8[W"n0[uZr?qXomOA&`odfYcr%7n#r[mt!
p+Q%lq_@e"oJ?D%p,2c2plkN<pQkT@q3^W=!1<PLpmV#Jpm_>Rpmh>Sr13\Urgj(]qO[GRq4RVYs.K@c
rLrQAh<Oe"!pJq7rp'7BpZV22r9!b:pZD22kiD^&mj@oZqC(h^qC:tbqCMLqp+Gtjp+Z=tp+l7rq_\"(
s#0j6r0-o?q3LH8q3^oEpmV)LrgNVOq4.2M!1s.\rLEq\qO[GRrh0.\r1X%]nt?&VrM':blfm3iq!%\@
pZ_G9o&ou6!9j1?pZD22o]-#6p>l55od0Ydr$V+bp*okgqCDLqqCDFoqCV1hqCh_"!&=F+oJ-4ur%n@0
rA4:,p,2P%r0-o?q3LcApmClFpR:lHqOISTq4.MUrLWtYpR_/Ps.K7]rLrtYr1En\r1NkZq4de^s.\iE
kNr*4pZqeC!:9FFpZhM;o]Z/9pZVA7pZD;5q<%P8s!IIeq^;7hmj\,`qCD%dqCVCnq_.Rqs"XL,q_@q&
s"jU0q)&(,qDA(,nM^</pltT?pQtZBq3guGpm_)L!1WkV!hGmPrLWtYpR_/Prh01]r1WkXrL`t\rLa.b
qP!_ZqkF.clg"'-n*Kf7rp'OMp?VM=p?D86q<@Y;pZM;5qW7V:roX+>qBl+fq^D(cp+#qiodobfqC_e$
r@\"$q_7InrA+C.qD7UtqDIt)q`"F4r06uBq3UiCpmLrHqOIPSqORYVrLNkWpn%DUrgs._n=TZPrL`t\
rLiqZpS.\_qkEn]qP<HBrTrS2pZqkErp9CFpZhJ:p?;;9pZVA7pZ;J;r8m\8r8mT!q^D(cr$q@iodotl
q_%=jq_7^us"XF,oJ?1tq_e4.s#9^2q`"F4r0I,Eq3^oEpmV#KpRV>Uqk!PQpn%ATs.94_qOdPUq4[YZ
rh9@eqP*_ZnYH#Xo'H5>g$S\'q!IhBpZqP<r9<e;pZ_Y?qrme;r93n<odKJ^qC;CnmO\8fq_%Lop+Z@u
s"aL,q_J(*mPOi!q_n(*p,Mt1r0I,Eq3^oEpmV#K!1inUpn%8Opn%>S!1s.^qk*YVq4[VYs.TFeqkEh[
q4n"eqP<tarTs">f^8V'p[._ApZqS=r9<b:s69@DpZVD8qrmh<J,~>

%%EndBinary
grestore
np
219.325 115.081 mo
185.733 95.6847 li
185.733 95.6836 li
219.325 115.081 li
.192157 .215686 .239216 rgb
f
185.733 140.328 mo
185.733 129.478 li
205.6 118.007 li
185.733 106.536 li
185.733 95.6836 li
219.325 115.081 li
220.727 115.887 221.428 116.947 221.428 118.006 cv
221.428 119.066 220.727 120.126 219.325 120.933 cv
219.325 120.933 li
185.733 140.328 li
.266667 .294118 .333333 rgb
f
185.733 129.478 mo
185.733 128.801 li
204.496 117.969 li
185.733 107.138 li
185.733 106.536 li
205.6 118.007 li
185.733 129.478 li
level3{
gsave
clp
[-175.162 0 0 175.162 205.6 107.933 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.301961 .733333 .968627 ]
/C1 [.52549 .882353 1 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-175.162 0 0 175.162 205.6 107.933 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~9MJ5U9hnGY:/=Y]:JXe`:f("d;,L1g;GpCk;c?Un<)cgr<E3%!<E<.$<``@(='&L+=BJ^/=]nm2>$>*6
>?b<9>[1N=?!U`A?!^iD?=.&H?XI2K?smDO@:<SR@U`eV@q0"YA7T4]AS#FaAS,OdAnPahB4kmkBP;*o
Bk_9rC2.L!CMR^$Ci!p(D/F-,D/O6/DJsH3Df9T6E,]f:EH,u=EcQ2AF)uDDFEDVHF`hhLF`qqOG'A.S
GB\:VG^+LZH$O[]H?smaH[C*dI!g<hI=6NlI=?WoIXcisIt*!!J:N3%JUrB(JqAT,K7ef/KS5#3KnY57
~>
<~]">Sd]=Y\f]Y(ni]Y(qk]tM+m]tV4p^:q=r^V@Ou^V@S"^qdb$^qmk'_83t(_SX1,_SX4._o'C0_o0L3
`5KU4`Pog8`Pog9`l?$<`lH-?a2c6@aN2HDaN2HEaiVZHaiV]Jb0%lLbKJ)PbKJ)Qbfn;Tbfn>Vc-=MX
c-FV[cHa_]cd0q`cd0tbd*U.dd*^7gdF$@idaHRldaHUne'ldpe'umseC<!te^`4#e^`7%f%/F'f%8O*
f@SX+f\"j/f\"j0g"G'3g"P06g=k97gY:K;gY:K<gt^]?gt^`Ah;-oChVR,GhVR,Hhr!>Khr!AMi8EPO
~>
<~p@n=Up\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\=OYq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"aa]q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>0saqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYU0eqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqu$Bir;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;HTmrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVlfqrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
185.733 128.801 mo
185.733 107.138 li
204.496 117.969 li
185.733 128.801 li
level3{
gsave
clp
[-172.951 0 0 172.951 204.496 107.931 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.52549 .882353 1 ]
/C1 [.301961 .733333 .968627 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-172.951 0 0 172.951 204.496 107.931 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~KnY57KnP,4KS+o0K7ec-JqAQ)JUrB&J:N0"It)rtIXZ`pI=6NlI=-EiI!^3eH[C'bH?sj^H$O[[G^+IW
GB\7TG'8%PF`hhLF`__IFE;MEF)uABEcQ/>EH,u;E,]c7Df9Q4DJj?0D/F-,D/=$)Chmg%CMR["C2.Hs
Bk_9pBP;'lB4kjiAnGXeAS#FaARo=^A7K+Z@q/tW@U`bS@:<SP?smAL?XI/I?=$rE?!U`A?!LW>>[(E:
>?b97>$>'3=]nm0=BJ[,='&I)<`W7%<E3%!<E)ps<)Z^o;c?Rl;Gp@h;,L1e:f'ta:JXb^:/4PZ9he>V
~>
<~i8EPOi8EPNhr!>Khr!;IhVR,GhVI#Dh;-oBgt^]?gt^Z=gY:K;gY1B8g=k97g"G'3g"G$1f\"j/f[na,
f@SX+f%/F'f%/F&e^`4#e^W*ueC<!te'ldpe'ldodaHRldaHOjdF$@hd*U.dd*U.ccd0q`cd0n^cHa_\
c-=MXc-=MWbfn;Tbfn8RbKJ)PbK@uMb0%lKaiVZHaiVWFaN2HDaN)?Aa2c6@`l?$<`l?!:`Pog8`Pf^5
`5KU4_o'C0_o'C/_SX1,_SO()_83t(^qdb$^qdb#^V@Ou^V@Ls^:q=q]tM+m]tM+l]Y(ni]Y(kg]=Y\e
~>
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bq>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
151.786 76.0817 mo
148.884 74.4065 li
148.884 74.4062 li
151.786 76.0817 li
1 1 1 rgb
f
148.884 161.605 mo
148.884 161.605 li
168.95 150.018 li
148.884 161.605 li
175.969 90.0471 mo
148.884 74.4083 li
148.884 74.4062 li
151.786 76.0817 li
175.969 90.0469 li
.192157 .215686 .239216 rgb
f
148.884 161.605 mo
148.884 150.754 li
175.969 135.115 li
175.969 137.198 li
174.919 137.804 li
173.504 138.623 173.504 139.951 174.919 140.771 cv
175.232 140.951 175.589 141.092 175.969 141.192 cv
175.969 145.965 li
168.95 150.018 li
148.884 161.604 li
175.969 100.899 mo
148.884 85.2606 li
148.884 74.4062 li
175.969 90.0471 li
175.969 100.899 li
.266667 .294118 .333333 rgb
f
148.884 150.754 mo
148.884 150.076 li
175.237 134.864 li
175.969 134.441 li
175.969 135.115 li
148.884 150.754 li
175.969 101.501 mo
159.467 91.9746 li
158.167 91.2207 li
148.884 85.8613 li
148.884 85.2606 li
175.969 100.899 li
175.969 101.501 li
level3{
gsave
clp
[-175.162 0 0 175.162 205.6 107.933 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-175.162 0 0 175.162 205.6 107.933 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
148.884 150.076 mo
148.884 136.075 li
175.969 120.437 li
175.969 134.441 li
175.237 134.864 li
148.884 150.076 li
148.884 117.36 mo
148.884 85.8613 li
158.167 91.2207 li
159.467 91.9746 li
175.969 101.501 li
175.969 110.088 li
170.004 106.645 li
169.65 106.44 169.187 106.338 168.724 106.338 cv
168.261 106.338 167.798 106.44 167.444 106.645 cv
148.884 117.36 li
level3{
gsave
clp
[-172.951 0 0 172.951 204.496 107.931 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-172.951 0 0 172.951 204.496 107.931 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
175.969 141.192 mo
175.589 141.092 175.232 140.951 174.919 140.771 cv
173.504 139.951 173.504 138.623 174.919 137.804 cv
175.969 137.198 li
175.969 137.333 li
175.036 137.872 li
173.684 138.652 173.687 139.922 175.037 140.703 cv
175.317 140.864 175.632 140.992 175.969 141.086 cv
175.969 141.192 li
.172549 .172549 .172549 rgb
f
175.969 141.086 mo
175.632 140.992 175.317 140.864 175.037 140.703 cv
173.687 139.922 173.684 138.652 175.036 137.872 cv
175.969 137.333 li
175.969 137.6 li
175.268 138.004 li
174.043 138.712 174.043 139.862 175.269 140.568 cv
175.482 140.691 175.718 140.793 175.969 140.873 cv
175.969 141.086 li
.486274 .486274 .486274 rgb
f
175.969 140.873 mo
175.718 140.793 175.482 140.691 175.269 140.568 cv
174.043 139.862 174.043 138.712 175.268 138.004 cv
175.969 137.6 li
175.969 140.873 li
.235294 .243137 .247059 rgb
f
148.884 136.075 mo
148.884 129.518 li
149.247 129.727 li
149.83 130.065 150.558 130.233 151.43 130.233 cv
151.582 130.233 151.738 130.228 151.899 130.218 cv
152.981 130.149 153.956 129.864 154.82 129.364 cv
155.677 128.87 156.171 128.309 156.305 127.683 cv
156.437 127.057 156.156 126.543 155.458 126.14 cv
148.884 122.346 li
148.884 117.36 li
167.444 106.645 li
167.798 106.44 168.261 106.338 168.724 106.338 cv
169.187 106.338 169.65 106.44 170.004 106.645 cv
175.969 110.088 li
175.969 120.437 li
148.884 136.075 li
151.489 119.139 mo
149.331 120.386 li
158.003 122.362 li
162.359 124.877 li
164.32 123.745 li
159.963 121.23 li
156.551 116.218 li
154.382 117.469 li
156.675 120.456 li
151.489 119.139 li
151.937 128.792 mo
151.621 128.792 151.358 128.731 151.148 128.611 cv
148.884 127.304 li
148.884 124.704 li
153.4 127.312 li
153.648 127.454 153.751 127.639 153.707 127.866 cv
153.664 128.091 153.487 128.295 153.174 128.474 cv
152.865 128.654 152.511 128.757 152.115 128.786 cv
152.054 128.79 151.994 128.792 151.937 128.792 cv
.878431 .0509804 .0509804 rgb
f
151.43 130.233 mo
150.558 130.233 149.83 130.065 149.247 129.727 cv
148.884 129.518 li
148.884 127.304 li
151.148 128.611 li
151.358 128.731 151.621 128.792 151.937 128.792 cv
151.994 128.792 152.054 128.79 152.115 128.786 cv
152.511 128.757 152.865 128.654 153.174 128.474 cv
153.487 128.295 153.664 128.091 153.707 127.866 cv
153.751 127.639 153.648 127.454 153.4 127.312 cv
148.884 124.704 li
148.884 122.346 li
155.458 126.14 li
156.156 126.543 156.437 127.057 156.305 127.683 cv
156.171 128.309 155.677 128.87 154.82 129.364 cv
153.956 129.864 152.981 130.149 151.899 130.218 cv
151.738 130.228 151.582 130.233 151.43 130.233 cv
1 1 1 rgb
f
162.359 124.877 mo
158.003 122.362 li
149.331 120.386 li
151.489 119.139 li
156.675 120.456 li
154.382 117.469 li
156.551 116.218 li
159.963 121.23 li
164.32 123.745 li
162.359 124.877 li
f
125.261 40.4155 mo
117.249 35.7935 li
98.9658 25.2383 li
53.8125 51.3091 li
72.127 61.8877 li
80.1045 66.4976 li
99.9546 77.9595 li
145.088 51.8901 li
145.11 51.8779 li
125.261 40.4155 li
cp
1 .866667 .658824 rgb
f
98.9658 25.9375 mo
55.0337 51.3091 li
79.5791 65.4805 li
88.77 70.7788 li
99.959 77.0566 li
109.147 71.939 li
143.891 51.8779 li
98.9658 25.9375 li
cp
.976471 .788235 .541176 rgb
f
99.9546 77.9492 mo
99.9546 122.851 li
80.147 111.503 li
72.127 106.914 li
53.8125 96.4209 li
53.8125 51.3091 li
72.127 61.8877 li
80.147 66.5068 li
99.9546 77.9492 li
cp
.737255 .486275 .27451 rgb
f
99.959 77.9575 mo
99.959 122.848 li
145.09 96.9482 li
145.09 51.8901 li
99.959 77.9575 li
cp
.866667 .658824 .4 rgb
f
124.497 75.5742 mo
124.256 75.7153 li
124.256 71.5195 li
124.497 71.3813 li
124.497 75.5742 li
cp
.309804 .180392 .0862745 rgb
f
125.363 71.8013 mo
125.186 72.0952 li
124.376 71.5576 li
123.568 73.0313 li
123.39 72.9414 li
124.376 71.1484 li
125.363 71.8013 li
cp
f
126.907 74.1831 mo
126.667 74.3232 li
126.667 70.1289 li
126.907 69.9897 li
126.907 74.1831 li
cp
f
127.772 70.4092 mo
127.597 70.7017 li
126.789 70.165 li
125.979 71.6367 li
125.802 71.5498 li
126.789 69.7559 li
127.772 70.4092 li
cp
f
127.834 73.7896 mo
123.333 76.3872 li
123.21 76.3154 li
123.333 76.1094 li
127.834 73.5112 li
127.953 73.582 li
127.834 73.7896 li
cp
f
123.368 70.7017 mo
123.037 70.895 122.767 71.3599 122.766 71.7437 cv
122.766 76.8535 li
122.766 77.2383 123.037 77.3926 123.371 77.2021 cv
127.795 74.6484 li
128.127 74.4541 128.396 73.9878 128.396 73.604 cv
128.398 68.4956 li
128.396 68.1113 128.127 67.9551 127.795 68.1455 cv
123.368 70.7017 li
cp
127.795 74.9248 mo
123.371 77.4819 li
122.903 77.749 122.525 77.5317 122.525 76.9937 cv
122.525 71.8853 li
122.525 71.3462 122.903 70.6899 123.371 70.4209 cv
127.795 67.8662 li
128.261 67.5991 128.639 67.8159 128.639 68.354 cv
128.639 73.4668 li
128.639 74.0039 128.261 74.6582 127.795 74.9248 cv
cp
f
132.199 71.6792 mo
132.08 71.6094 li
132.08 67.9521 li
132.199 67.7432 li
132.321 67.8125 li
132.321 71.4722 li
132.199 71.6792 li
cp
f
129.986 66.8662 mo
129.655 67.0581 129.384 67.5273 129.382 67.9097 cv
129.382 73.02 li
129.382 73.4048 129.655 73.5605 129.99 73.3657 cv
134.414 70.8145 li
134.745 70.6216 135.013 70.1548 135.013 69.77 cv
135.015 64.6592 li
135.013 64.2754 134.745 64.1196 134.414 64.311 cv
129.986 66.8662 li
cp
134.414 71.0923 mo
129.99 73.6475 li
129.521 73.916 129.142 73.6973 129.142 73.1602 cv
129.142 68.0503 li
129.142 67.5127 129.521 66.8584 129.99 66.5864 cv
134.414 64.0303 li
134.877 63.7627 135.255 63.9819 135.255 64.5205 cv
135.255 69.6313 li
135.255 70.1699 134.877 70.8242 134.414 71.0923 cv
cp
f
134.025 67.9897 mo
133.853 67.3164 133.101 67.1641 132.199 67.6851 cv
131.295 68.208 130.544 69.2261 130.371 70.1016 cv
134.025 67.9897 li
cp
f
131.563 67.5908 mo
131.442 67.52 li
131.442 66.6289 li
131.563 66.4229 li
131.683 66.4897 li
131.683 67.3804 li
131.563 67.5908 li
cp
f
132.199 67.2217 mo
132.08 67.1533 li
132.08 66.2603 li
132.199 66.0527 li
132.32 66.1226 li
132.32 67.0137 li
132.199 67.2217 li
cp
f
132.834 66.856 mo
132.715 66.7866 li
132.715 65.8936 li
132.834 65.6841 li
132.955 65.7529 li
132.955 66.6479 li
132.834 66.856 li
cp
f
136.547 63.0923 mo
136.215 63.2832 135.946 63.752 135.946 64.1392 cv
135.946 69.2466 li
135.946 69.6313 136.215 69.7861 136.547 69.5947 cv
140.973 67.0415 li
141.305 66.8501 141.575 66.3799 141.574 65.9941 cv
141.575 60.8853 li
141.575 60.502 141.305 60.3438 140.973 60.5356 cv
136.547 63.0923 li
cp
140.973 67.3184 mo
136.547 69.8726 li
136.081 70.1416 135.701 69.9214 135.704 69.3848 cv
135.701 64.2754 li
135.701 63.7378 136.081 63.0811 136.547 62.8135 cv
140.973 60.2588 li
141.437 59.9902 141.817 60.2095 141.817 60.7437 cv
141.817 65.856 li
141.817 66.3906 141.437 67.0483 140.973 67.3184 cv
cp
f
138.759 67.2026 mo
138.638 67.1328 li
138.638 63.4756 li
138.759 63.2642 li
138.88 63.3359 li
138.881 66.9951 li
138.759 67.2026 li
cp
f
139.309 66.8853 mo
138.209 67.5176 li
138.088 67.4512 li
138.209 67.2412 li
139.309 66.6064 li
139.429 66.6763 li
139.309 66.8853 li
cp
f
139.926 62.2554 mo
139.926 63.9658 li
139.928 64.4277 139.601 64.9878 139.203 65.2188 cv
138.317 65.7285 li
137.917 65.9604 137.594 65.772 137.594 65.3105 cv
137.594 63.604 li
138.033 63.3491 li
138.033 65.1787 li
138.153 65.2505 li
138.273 65.0386 li
138.273 63.2095 li
139.926 62.2554 li
cp
f
80.147 57.2134 mo
80.147 111.503 li
72.127 106.914 li
72.127 61.8447 li
80.147 57.2134 li
cp
.607843 .454902 .317647 rgb
f
125.261 40.4155 mo
80.147 66.4663 li
80.1045 66.4976 li
72.127 61.8877 li
72.127 61.8447 li
80.147 57.2134 li
117.249 35.7935 li
125.261 40.4155 li
cp
.792157 .686275 .560784 rgb
f
75.8081 55.7954 mo
75.6411 55.4292 li
77.5313 55.1426 li
77.6978 55.5098 li
75.8081 55.7954 li
cp
77.6035 53.981 mo
75.1533 54.3516 li
74.9644 53.9365 li
77.4155 53.5659 li
77.6035 53.981 li
cp
73.9102 54.0967 mo
74.6304 53.9878 li
76.1626 57.3662 li
75.4429 57.4756 li
73.9102 54.0967 li
cp
1 0 0 rgb
f
80.6968 55.3252 mo
81.4331 55.2134 li
82.9868 56.335 li
82.2354 56.4492 li
80.6968 55.3252 li
cp
79.2451 53.7373 mo
79.0542 53.3179 li
80.7432 53.062 li
81.7798 53.4155 li
82.2241 54.397 li
81.6377 54.9761 li
79.9233 55.2334 li
79.7568 54.8677 li
81.1299 54.6606 li
81.438 54.356 li
81.1445 53.709 li
80.6162 53.5308 li
79.2451 53.7373 li
cp
78 53.478 mo
78.7202 53.3687 li
80.2529 56.748 li
79.5327 56.8574 li
78 53.478 li
cp
f
85.0029 56.0303 mo
84.8145 55.6147 li
87.2729 55.2437 li
87.4614 55.6577 li
85.0029 56.0303 li
cp
84.2798 54.436 mo
84.1133 54.0698 li
85.7773 53.8179 li
85.9424 54.1851 li
84.2798 54.436 li
cp
86.0996 52.6953 mo
83.6572 53.0654 li
83.4697 52.6509 li
85.9116 52.2808 li
86.0996 52.6953 li
cp
82.4087 52.8105 mo
83.1353 52.6997 li
84.6694 56.0806 li
83.9409 56.1904 li
82.4087 52.8105 li
cp
f
89.3013 55.3799 mo
89.1138 54.9648 li
91.5723 54.5933 li
91.7612 55.0078 li
89.3013 55.3799 li
cp
88.5791 53.7866 mo
88.4111 53.4204 li
90.0762 53.167 li
90.2432 53.5337 li
88.5791 53.7866 li
cp
90.3989 52.0454 mo
87.9561 52.4155 li
87.769 52.0005 li
90.2104 51.6309 li
90.3989 52.0454 li
cp
86.7061 52.1602 mo
87.4331 52.0508 li
88.9668 55.4312 li
88.2397 55.541 li
86.7061 52.1602 li
cp
f
96.2988 52.6616 mo
96.1216 52.269 li
97.1245 52.1172 li
97.9653 52.3936 li
98.4482 53.4609 li
97.8076 54.0938 li
97.0049 54.2148 li
96.8159 53.8003 li
97.3174 53.7246 li
97.6431 53.3965 li
97.3247 52.6963 li
96.9424 52.564 li
96.2988 52.6616 li
cp
97.3013 51.0693 mo
97.5181 51.5474 li
96.7998 51.6553 li
96.6665 51.3604 li
96.1279 51.1787 li
95.6597 51.2505 li
95.4707 50.8345 li
96.2646 50.7144 li
97.3013 51.0693 li
cp
95.9448 53.9316 mo
96.481 53.8506 li
96.6694 54.2661 li
95.8325 54.3921 li
94.7368 54.0215 li
94.4546 53.4043 li
95.1743 53.2939 li
95.376 53.7393 li
95.9448 53.9316 li
cp
94.2578 51.0186 mo
95.1367 50.8867 li
95.3247 51.3008 li
94.7642 51.3862 li
94.4487 51.6973 li
94.7207 52.2949 li
95.1172 52.4204 li
95.7866 52.3193 li
95.9653 52.7114 li
94.936 52.8672 li
94.0835 52.5825 li
93.647 51.6216 li
94.2578 51.0186 li
cp
f
103.21 53.2764 mo
102.482 53.3867 li
100.95 50.0073 li
101.678 49.8975 li
103.21 53.2764 li
cp
99.3745 51.7773 mo
101.265 51.4917 li
101.419 51.8286 li
99.5283 52.1157 li
100.257 53.7227 li
99.5386 53.832 li
98.0068 50.4517 li
98.7236 50.3428 li
99.3745 51.7773 li
cp
f
104.949 53.0142 mo
104.222 53.1235 li
102.69 49.7437 li
103.416 49.6343 li
104.949 53.0142 li
cp
f
105.679 49.7349 mo
105.491 49.3203 li
107.178 49.064 li
108.319 49.4487 li
108.8 50.5073 li
108.132 51.1655 li
106.442 51.4209 li
106.271 51.0391 li
107.667 50.8286 li
108.019 50.4795 li
107.677 49.7275 li
107.075 49.5239 li
105.679 49.7349 li
cp
104.428 49.481 mo
105.156 49.3716 li
106.688 52.751 li
105.962 52.8604 li
104.428 49.481 li
cp
f
110.054 49.0732 mo
109.865 48.6587 li
111.555 48.4028 li
112.694 48.7876 li
113.173 49.8447 li
112.507 50.5034 li
110.817 50.7593 li
110.645 50.3779 li
112.042 50.1655 li
112.393 49.8193 li
112.051 49.0664 li
111.45 48.8628 li
110.054 49.0732 li
cp
108.803 48.8193 mo
109.529 48.709 li
111.063 52.0884 li
110.336 52.1987 li
108.803 48.8193 li
cp
f
115.514 51.4165 mo
114.786 51.5264 li
113.252 48.147 li
113.98 48.0366 li
115.514 51.4165 li
cp
f
120.321 50.6885 mo
119.686 50.7856 li
118.153 47.4058 li
118.789 47.3091 li
120.321 50.6885 li
cp
115.984 47.7856 mo
118.803 49.6284 li
119.208 50.522 li
116.397 48.6968 li
115.984 47.7856 li
cp
114.991 47.8838 mo
115.626 47.7871 li
117.161 51.167 li
116.524 51.2632 li
114.991 47.8838 li
cp
f
123.274 50.2422 mo
123.084 49.8271 li
123.487 49.7661 li
123.943 49.3164 li
123.615 48.5918 li
122.595 48.7456 li
122.461 48.4512 li
124.2 48.1885 li
125.014 49.979 li
124.319 50.0835 li
124.147 49.7031 li
123.658 50.1841 li
123.274 50.2422 li
cp
123.969 47.6763 mo
123.249 47.7856 li
123.061 47.3691 li
122.532 47.1865 li
121.929 47.2773 li
121.741 46.8628 li
122.652 46.7251 li
123.696 47.0771 li
123.969 47.6763 li
cp
120.635 47.0298 mo
121.406 46.9131 li
121.596 47.3271 li
121.101 47.4033 li
120.705 47.793 li
121.575 49.71 li
122.283 49.9492 li
122.751 49.877 li
122.939 50.293 li
122.219 50.4023 li
120.922 49.9639 li
119.915 47.7417 li
120.635 47.0298 li
cp
f
72.7993 59.5269 mo
129.06 51.0181 li
126.124 44.5493 li
69.8652 53.0576 li
72.7993 59.5269 li
cp
129.674 51.2261 mo
72.4419 59.8823 li
69.249 52.8481 li
126.484 44.1934 li
129.674 51.2261 li
cp
f
328.391 161.74 mo
327.544 162.227 li
327.544 161.252 li
328.391 160.767 li
328.391 161.74 li
cp
.309804 .180392 .0862745 rgb
f
361.603 112.832 mo
357.233 110.305 li
343.188 102.194 li
330.12 109.723 li
327.961 110.97 li
327.743 111.104 li
325.758 112.248 li
311.537 120.444 li
324.369 127.864 li
325.659 128.609 li
325.885 128.743 li
327.965 129.943 li
330.037 131.145 li
343.868 139.138 li
358.002 130.98 li
360.076 129.782 li
360.294 129.648 li
362.381 128.446 li
375.498 120.88 li
375.512 120.863 li
361.603 112.832 li
cp
1 .866667 .658824 rgb
f
343.876 139.127 mo
343.865 171.305 li
330.04 163.383 li
329.985 163.35 li
327.544 161.953 li
326.722 161.484 li
325.657 160.875 li
324.366 160.137 li
311.537 152.779 li
311.547 120.447 li
325.665 128.607 li
326.734 129.225 li
327.553 129.701 li
330.049 131.141 li
343.876 139.127 li
cp
.737255 .486275 .27451 rgb
f
362.368 128.445 mo
361.235 129.103 li
360.416 129.578 li
360.249 129.676 li
360.037 129.8 li
357.99 130.976 li
343.876 139.127 li
343.865 171.305 li
357.979 163.21 li
360.403 161.823 li
361.226 161.345 li
362.359 160.696 li
375.499 153.167 li
375.507 120.875 li
362.368 128.445 li
cp
.866667 .658824 .4 rgb
f
346.619 164.469 mo
346.402 164.599 li
346.403 160.831 li
346.619 160.703 li
346.619 164.469 li
cp
.309804 .180392 .0862745 rgb
f
347.392 161.086 mo
347.238 161.346 li
346.512 160.862 li
345.788 162.187 li
345.625 162.107 li
346.512 160.499 li
347.392 161.086 li
cp
f
348.784 163.221 mo
348.567 163.35 li
348.568 159.581 li
348.785 159.457 li
348.784 163.221 li
cp
f
349.561 159.835 mo
349.4 160.1 li
348.679 159.614 li
347.95 160.937 li
347.789 160.858 li
348.679 159.248 li
349.561 159.835 li
cp
f
349.615 162.869 mo
345.571 165.202 li
345.466 165.137 li
345.57 164.95 li
349.615 162.621 li
349.721 162.684 li
349.615 162.869 li
cp
f
345.611 160.096 mo
345.311 160.269 345.066 160.688 345.065 161.035 cv
345.064 165.619 li
345.064 165.965 345.308 166.104 345.609 165.934 cv
349.581 163.639 li
349.876 163.467 350.121 163.047 350.116 162.702 cv
350.121 158.119 li
350.125 157.771 349.877 157.63 349.583 157.803 cv
345.611 160.096 li
cp
349.581 163.889 mo
345.609 166.182 li
345.188 166.424 344.846 166.229 344.846 165.743 cv
344.847 161.158 li
344.847 160.675 345.189 160.086 345.611 159.847 cv
349.583 157.553 li
349.998 157.314 350.335 157.508 350.335 157.992 cv
350.335 162.579 li
350.334 163.061 349.997 163.647 349.581 163.889 cv
cp
f
352.51 156.003 mo
352.2 156.178 351.955 156.609 351.955 156.964 cv
351.952 161.684 li
351.955 162.034 352.2 162.181 352.51 162.005 cv
356.597 159.646 li
356.899 159.47 357.154 159.038 357.154 158.683 cv
357.154 153.964 li
357.154 153.609 356.901 153.463 356.597 153.644 cv
352.51 156.003 li
cp
356.594 159.901 mo
352.509 162.26 li
352.08 162.508 351.731 162.306 351.731 161.811 cv
351.733 157.094 li
351.733 156.597 352.082 155.991 352.51 155.742 cv
356.598 153.386 li
357.026 153.14 357.372 153.34 357.372 153.835 cv
357.371 158.553 li
357.37 159.049 357.024 159.653 356.594 159.901 cv
cp
f
354.552 159.797 mo
354.433 159.729 li
354.434 156.354 li
354.554 156.161 li
354.661 156.223 li
354.66 159.604 li
354.552 159.797 li
cp
f
355.055 159.503 mo
354.043 160.086 li
353.929 160.025 li
354.043 159.832 li
355.055 159.247 li
355.167 159.312 li
355.055 159.503 li
cp
f
355.627 155.229 mo
355.627 156.809 li
355.632 157.231 355.329 157.754 354.96 157.964 cv
354.141 158.432 li
353.775 158.649 353.477 158.475 353.477 158.05 cv
353.477 156.472 li
353.881 156.238 li
353.883 157.929 li
353.99 157.992 li
354.104 157.797 li
354.104 156.106 li
355.627 155.229 li
cp
f
343.183 102.684 mo
312.394 120.454 li
343.867 138.503 li
374.654 120.867 li
343.183 102.684 li
cp
.976471 .788235 .541176 rgb
f
375.5 121.203 mo
375.5 121.452 li
343.868 139.703 li
343.868 139.45 li
375.5 121.203 li
cp
.737255 .486275 .27451 rgb
f
360.292 129.652 mo
360.077 129.782 li
327.743 111.104 li
327.96 110.975 li
360.292 129.652 li
cp
f
360.249 129.682 mo
360.247 130.202 li
360.033 130.201 li
360.032 129.803 li
360.249 129.682 li
cp
f
362.375 128.423 mo
362.363 160.699 li
357.985 163.21 li
357.993 130.952 li
362.375 128.423 li
cp
.607843 .454902 .317647 rgb
f
362.381 128.446 mo
360.294 129.648 li
360.076 129.782 li
358.002 130.98 li
325.758 112.248 li
327.743 111.104 li
327.961 110.97 li
330.12 109.723 li
362.381 128.446 li
cp
.792157 .686275 .560784 rgb
f
330.048 131.118 mo
330.038 163.384 li
329.981 163.351 li
325.65 160.875 li
325.662 128.585 li
330.048 131.118 li
cp
.607843 .454902 .317647 rgb
f
361.602 112.83 mo
330.036 131.148 li
327.965 129.939 li
327.743 129.808 li
325.888 128.74 li
325.657 128.608 li
352.186 113.228 li
354.183 112.071 li
357.233 110.307 li
358.933 111.284 li
360.04 111.933 li
361.602 112.83 li
cp
.792157 .686275 .560784 rgb
f
373.793 133.424 mo
364.654 138.697 li
364.655 130.841 li
373.795 125.57 li
373.793 133.424 li
cp
.898039 .878431 .862745 rgb
f
372.922 127.925 mo
365.522 132.196 li
365.522 131.315 li
372.922 127.045 li
372.922 127.925 li
cp
.309804 .180392 .0862745 rgb
f
372.922 129.504 mo
365.522 133.775 li
365.522 133.386 li
372.922 129.12 li
372.922 129.504 li
cp
.698039 .682353 .670588 rgb
f
372.922 130.539 mo
365.521 134.808 li
365.521 134.421 li
372.922 130.15 li
372.922 130.539 li
cp
f
372.922 131.647 mo
365.521 135.918 li
365.521 135.53 li
372.922 131.26 li
372.922 131.647 li
cp
f
372.922 132.683 mo
365.521 136.952 li
365.521 136.563 li
372.921 132.293 li
372.922 132.683 li
cp
f
360.04 111.933 mo
352.186 113.228 li
343.571 114.656 li
343.436 113.849 li
354.183 112.071 li
358.933 111.284 li
360.04 111.933 li
cp
.309804 .180392 .0862745 rgb
f
343.334 112.986 mo
344.7 115.35 li
342.935 116.367 li
341.571 114.006 li
343.334 112.986 li
cp
.576471 .596078 .6 rgb
f
342.735 112.215 mo
342.706 112.355 342.68 112.512 342.682 112.682 cv
342.685 112.983 342.739 113.304 342.833 113.618 cv
342.838 113.626 li
342.936 113.614 343.04 113.651 343.157 113.716 cv
343.583 113.964 343.925 114.554 343.932 115.042 cv
343.925 115.18 343.907 115.296 343.85 115.375 cv
344.073 115.618 344.316 115.826 344.582 115.976 cv
344.728 116.063 344.875 116.12 345.013 116.163 cv
345.364 116.276 345.682 116.251 345.929 116.111 cv
346.101 116.01 346.239 115.854 346.336 115.659 cv
346.44 115.446 346.488 115.181 346.492 114.875 cv
346.492 113.66 345.637 112.18 344.585 111.573 cv
344.32 111.424 344.072 111.34 343.835 111.325 cv
343.616 111.309 343.413 111.35 343.242 111.448 cv
342.992 111.592 342.814 111.859 342.735 112.215 cv
cp
f
341.819 112.269 mo
343.242 111.448 li
343.413 111.35 343.616 111.309 343.835 111.325 cv
346.336 115.659 li
346.239 115.854 346.101 116.01 345.929 116.111 cv
344.506 116.929 li
343.704 115.535 li
343.85 115.375 li
343.907 115.296 343.925 115.18 343.932 115.042 cv
343.925 114.554 343.583 113.964 343.157 113.716 cv
343.04 113.651 342.936 113.614 342.838 113.626 cv
342.833 113.618 li
342.624 113.665 li
341.819 112.269 li
cp
f
343.931 115.042 mo
343.923 115.184 343.907 115.296 343.85 115.379 cv
343.701 115.534 li
343.571 115.607 343.374 115.601 343.158 115.477 cv
342.969 115.338 li
342.772 115.166 342.6 114.912 342.501 114.647 cv
342.435 114.482 342.394 114.311 342.394 114.154 cv
342.403 113.917 342.486 113.745 342.625 113.663 cv
342.831 113.623 li
342.837 113.628 li
342.936 113.611 343.042 113.653 343.158 113.718 cv
343.348 113.859 li
343.436 113.777 li
343.996 114.376 li
343.825 114.541 li
343.889 114.706 343.931 114.879 343.931 115.042 cv
cp
343.159 112.396 mo
343.018 112.314 342.88 112.247 342.732 112.216 cv
342.387 112.1 342.068 112.125 341.819 112.272 cv
341.474 112.461 341.26 112.897 341.26 113.505 cv
341.26 114.088 341.458 114.738 341.778 115.313 cv
341.917 115.56 342.073 115.791 342.247 116.002 cv
342.526 116.332 342.83 116.611 343.158 116.8 cv
343.684 117.104 344.16 117.129 344.505 116.931 cv
344.758 116.784 344.931 116.521 345.013 116.16 cv
345.047 116.021 345.073 115.865 345.064 115.7 cv
345.063 114.483 344.208 113.004 343.159 112.396 cv
cp
.819608 .819608 .819608 rgb
f
327.553 129.701 mo
327.544 162.227 li
326.722 161.74 li
326.734 129.225 li
327.553 129.701 li
cp
.309804 .180392 .0862745 rgb
f
343.996 114.376 mo
343.825 114.541 li
343.717 114.277 343.551 114.031 343.348 113.859 cv
343.436 113.777 li
343.996 114.376 li
cp
.819608 .819608 .819608 rgb
f
343.825 114.541 mo
342.969 115.338 li
342.247 116.002 li
327.553 129.701 li
326.734 129.218 li
341.778 115.313 li
342.501 114.647 li
343.348 113.859 li
343.551 114.031 343.717 114.277 343.825 114.541 cv
cp
.309804 .180392 .0862745 rgb
f
343.708 114.313 mo
343.764 114.401 343.816 114.509 343.841 114.605 cv
343.833 114.6 li
343.619 114.409 li
343.708 114.313 li
cp
f
394.969 55.1021 mo
345.451 112.317 li
345.573 112.462 345.698 112.619 345.804 112.775 cv
394.97 55.9688 li
394.969 55.1021 li
cp
f
343.443 114.791 mo
293.407 54.6895 li
293.849 54.3188 li
343.825 114.541 li
343.443 114.791 li
cp
f
343.353 114.679 mo
325.195 71.9277 li
325.722 71.7031 li
343.825 114.541 li
343.353 114.679 li
cp
f
343.708 114.313 mo
343.764 114.401 343.816 114.509 343.841 114.605 cv
343.833 114.6 li
343.57 114.475 li
343.676 114.254 li
343.708 114.313 li
cp
f
364.933 70.8921 mo
345.311 112.16 li
345.17 112.012 345.015 111.872 344.859 111.756 cv
364.415 70.6479 li
364.933 70.8921 li
cp
f
383.149 12.6953 mo
362.025 -1.80811 327.769 -1.81836 306.639 12.6729 cv
285.506 27.1626 285.5 50.666 306.623 65.1665 cv
327.746 79.6675 362.001 79.6787 383.135 65.1875 cv
404.263 50.6987 404.271 27.1963 383.149 12.6953 cv
cp
.635294 .0588235 .0588235 rgb
f
401.195 34.1362 mo
399.7 25.8306 394.309 17.79 385.022 11.4097 cv
380.894 8.5791 376.284 6.27197 371.382 4.49561 cv
365.623 2.40674 359.442 1.04395 353.141 .410156 cv
350.395 .137207 347.633 0 344.867 0 cv
344.553 -.000488281 344.247 0 343.934 .012207 cv
341.608 .0327148 339.276 .153809 336.962 .37793 cv
334.794 .588379 332.632 .879395 330.501 1.26758 cv
330.354 1.29492 li
328.012 1.71533 325.709 2.23828 323.448 2.87012 cv
323.434 2.87012 li
316.634 4.77246 310.275 7.60596 304.764 11.3857 cv
302.812 12.7251 301.03 14.1387 299.423 15.6138 cv
311.43 8.78857 326.57 5.88281 341.245 6.88721 cv
341.511 6.7915 341.784 6.70361 342.071 6.62793 cv
342.227 6.59521 li
342.511 6.51318 342.809 6.45996 343.111 6.4126 cv
343.376 6.37109 343.646 6.33105 343.926 6.30957 cv
344.076 6.29688 344.231 6.28223 344.381 6.27588 cv
344.708 6.26904 345.035 6.27051 345.362 6.28223 cv
345.558 6.28955 345.748 6.30322 345.945 6.31738 cv
346.127 6.3374 346.313 6.35889 346.49 6.38525 cv
346.536 6.39209 li
346.695 6.41309 346.849 6.43359 347.006 6.46826 cv
347.124 6.4873 li
347.266 6.51563 347.408 6.54834 347.542 6.58447 cv
347.667 6.61035 li
348.387 6.80127 349.058 7.06641 349.647 7.40674 cv
349.998 7.61182 350.312 7.83447 350.57 8.07275 cv
351.805 9.19531 351.943 10.6104 350.984 11.8008 cv
350.658 12.1953 350.208 12.5693 349.642 12.8955 cv
348.535 13.5337 347.127 13.9072 345.679 13.9951 cv
345.135 14.0371 344.583 14.0293 344.032 13.9878 cv
343.127 13.9268 342.241 13.75 341.441 13.4712 cv
340.98 13.3145 340.544 13.1235 340.144 12.8926 cv
339.899 12.7495 339.673 12.5996 339.47 12.4434 cv
336.273 12.8154 329.371 13.7734 323.678 15.9067 cv
320.195 17.2046 315.549 19.1768 309.727 23.1738 cv
296.863 31.9961 291.461 44.0059 293.538 55.5059 cv
296.25 59.4653 299.991 63.1743 304.757 66.4448 cv
305.824 67.1807 306.918 67.874 308.048 68.5337 cv
313.847 71.9429 320.417 74.4209 327.333 75.9526 cv
345.353 79.978 365.728 77.6367 381.021 68.9497 cv
382.387 68.1738 383.72 67.3477 384.999 66.4688 cv
397.871 57.6455 403.274 45.6348 401.195 34.1362 cv
cp
.835294 .933333 .980392 rgb
f
304.764 11.3857 mo
302.812 12.7251 301.03 14.1387 299.423 15.6138 cv
301.102 14.6611 302.848 13.792 304.637 12.9907 cv
305.5 11.8423 306.445 10.7378 307.45 9.67041 cv
306.536 10.2212 305.636 10.7886 304.764 11.3857 cv
cp
f
303.511 41.4521 mo
305.553 42.1338 308.272 44.1729 310.993 42.814 cv
313.034 41.4551 315.074 40.7764 315.754 38.0562 cv
317.114 42.1353 318.471 50.2974 324.591 48.9385 cv
325.953 48.939 327.994 46.2202 328.673 44.1787 cv
330.711 52.3413 340.912 55.0635 349.075 53.7065 cv
353.155 52.3472 358.596 50.9897 359.957 46.9097 cv
361.32 43.5098 364.04 40.7896 364.041 37.3892 cv
364.041 38.749 364.72 40.7891 366.079 40.1104 cv
367.441 40.1104 366.08 37.3896 366.762 36.0303 cv
373.561 40.1128 385.8 42.8354 389.204 33.9951 cv
390.566 29.916 391.248 24.4756 387.849 20.3931 cv
386.49 19.0337 385.811 16.9937 384.45 15.6318 cv
385.811 16.312 386.49 14.2734 386.49 13.5923 cv
386.731 13.3862 386.946 13.1733 387.145 12.958 cv
386.459 12.4336 385.757 11.9131 385.022 11.4097 cv
380.894 8.5791 376.284 6.27197 371.382 4.49561 cv
365.623 2.40674 359.442 1.04395 353.141 .410156 cv
350.395 .137207 347.633 0 344.867 0 cv
344.553 -.000488281 344.247 0 343.934 .012207 cv
341.608 .0327148 339.276 .153809 336.962 .37793 cv
334.794 .588379 332.632 .879395 330.501 1.26758 cv
330.354 1.29492 li
328.012 1.71533 325.709 2.23828 323.448 2.87012 cv
323.434 2.87012 li
317.711 4.47021 312.305 6.74121 307.45 9.67041 cv
306.445 10.7378 305.5 11.8423 304.637 12.9907 cv
315.658 8.06299 328.622 6.02344 341.245 6.88721 cv
341.511 6.7915 341.784 6.70361 342.071 6.62793 cv
342.227 6.59521 li
342.511 6.51318 342.809 6.45996 343.111 6.4126 cv
343.376 6.37109 343.646 6.33105 343.926 6.30957 cv
344.076 6.29688 344.231 6.28223 344.381 6.27588 cv
344.708 6.26904 345.035 6.27051 345.362 6.28223 cv
345.558 6.28955 345.748 6.30322 345.945 6.31738 cv
346.127 6.3374 346.313 6.35889 346.49 6.38525 cv
346.536 6.39209 li
346.695 6.41309 346.849 6.43359 347.006 6.46826 cv
347.124 6.4873 li
347.266 6.51563 347.408 6.54834 347.542 6.58447 cv
347.667 6.61035 li
348.387 6.80127 349.058 7.06641 349.647 7.40674 cv
349.998 7.61182 350.312 7.83447 350.57 8.07275 cv
351.805 9.19531 351.943 10.6104 350.984 11.8008 cv
350.658 12.1953 350.208 12.5693 349.642 12.8955 cv
348.535 13.5337 347.127 13.9072 345.679 13.9951 cv
345.135 14.0371 344.583 14.0293 344.032 13.9878 cv
343.127 13.9268 342.241 13.75 341.441 13.4712 cv
340.98 13.3145 340.544 13.1235 340.144 12.8926 cv
339.899 12.7495 339.673 12.5996 339.47 12.4434 cv
336.273 12.8154 329.371 13.7734 323.678 15.9067 cv
320.195 17.2046 315.549 19.1768 309.727 23.1738 cv
307.577 24.6479 305.638 26.2139 303.907 27.8511 cv
304.004 27.8511 304.094 27.8511 304.196 27.8501 cv
300.115 30.5703 297.392 38.0508 303.511 41.4521 cv
cp
.917647 .960784 .976471 rgb
f
339.47 12.4434 mo
335.692 12.8931 331.97 13.771 328.069 14.7842 cv
321.537 16.4766 315.305 19.3452 309.727 23.1738 cv
296.863 31.9961 291.461 44.0059 293.538 55.5059 cv
284.734 42.6899 286.704 27.2612 299.423 15.6138 cv
311.43 8.78857 326.57 5.88281 341.245 6.88721 cv
340.857 7.03809 340.485 7.20605 340.145 7.40381 cv
337.768 8.77734 337.538 10.9189 339.47 12.4434 cv
cp
.8 .054902 .054902 rgb
f
350.263 12.4468 mo
354.04 12.897 357.762 13.7783 361.665 14.7939 cv
368.191 16.4902 374.422 19.3623 380 23.1924 cv
392.855 32.0239 398.253 44.0361 396.168 55.5356 cv
404.98 42.7256 403.018 27.2939 390.303 15.6411 cv
378.302 8.80908 363.165 5.89453 348.489 6.88916 cv
348.875 7.03906 349.251 7.20898 349.59 7.40674 cv
351.964 8.78125 352.195 10.9238 350.263 12.4468 cv
cp
f
327.333 75.9526 mo
320.417 74.4209 313.847 71.9429 308.048 68.5337 cv
307.218 62.8359 307.404 55.7754 309.932 47.5356 cv
314.587 32.3296 329.471 17.8066 341.441 13.4712 cv
342.241 13.75 343.127 13.9268 344.032 13.9878 cv
335.646 21.8203 323.996 67.9268 327.333 75.9526 cv
cp
f
362.319 75.9629 mo
369.235 74.4341 375.805 71.9609 381.607 68.5557 cv
382.439 62.8584 382.257 55.7969 379.737 47.5552 cv
375.089 32.3472 360.213 17.8154 348.247 13.4727 cv
347.44 13.7515 346.556 13.9277 345.653 13.9883 cv
354.039 21.8257 365.66 67.939 362.319 75.9629 cv
cp
f
371.382 4.49561 mo
362.453 3.16016 352.509 4.26514 347.748 6.63037 cv
347.667 6.61035 li
347.542 6.58447 li
347.408 6.54297 347.266 6.51563 347.124 6.4873 cv
347.006 6.46826 li
346.912 6.44678 346.809 6.42676 346.708 6.41309 cv
346.536 6.39209 li
346.49 6.38525 li
346.313 6.35156 346.127 6.33008 345.945 6.31738 cv
345.774 6.29688 345.606 6.28223 345.436 6.27588 cv
345.458 5.23633 349.026 2.2583 353.141 .410156 cv
359.442 1.04395 365.623 2.40674 371.382 4.49561 cv
cp
f
343.926 6.30957 mo
343.646 6.33105 343.376 6.37109 343.111 6.4126 cv
342.809 6.45996 342.511 6.51318 342.227 6.59521 cv
338.294 4.7583 330.495 2.18457 323.448 2.87012 cv
325.709 2.23828 328.012 1.71533 330.354 1.29492 cv
330.501 1.26758 li
332.632 .879395 334.794 .588379 336.962 .37793 cv
339.383 1.76611 343.22 4.36572 343.926 6.30957 cv
cp
f
340.145 7.40381 mo
340.485 7.20605 340.857 7.03809 341.245 6.88721 cv
326.57 5.88281 311.43 8.78857 299.423 15.6138 cv
298.558 16.4072 297.749 17.2183 296.983 18.0435 cv
295.236 22.1733 295.726 26.3105 300.794 28.5298 cv
301.4 28.8311 302.02 29.0034 302.649 29.0859 cv
304.683 27.0005 307.041 25.0156 309.727 23.1738 cv
315.305 19.3452 321.537 16.4766 328.069 14.7842 cv
331.97 13.771 335.692 12.8931 339.47 12.4434 cv
337.538 10.9189 337.768 8.77734 340.145 7.40381 cv
cp
.898039 .0901961 .0901961 rgb
f
396.008 23.7969 mo
395.611 22.6064 394.982 21.188 394.26 19.8042 cv
393.081 18.3745 391.766 16.9805 390.303 15.6411 cv
378.302 8.80908 363.165 5.89453 348.489 6.88916 cv
348.875 7.03906 349.251 7.20898 349.59 7.40674 cv
351.964 8.78125 352.195 10.9238 350.263 12.4468 cv
354.04 12.897 357.762 13.7783 361.665 14.7939 cv
368.191 16.4902 374.422 19.3623 380 23.1924 cv
384.447 26.249 388 29.6851 390.662 33.3467 cv
395.635 33.0664 397.251 28.1548 396.008 23.7969 cv
cp
f
344.032 13.9878 mo
343.127 13.9268 342.241 13.75 341.441 13.4712 cv
330.84 17.3101 317.959 29.1421 311.916 42.3608 cv
311.284 43.7515 312.757 46.9307 313.485 48.0625 cv
314.673 49.915 316.553 51.4551 318.721 51.9658 cv
321.108 52.5273 323.493 51.7207 325.517 50.4585 cv
326.966 49.5527 330.731 47.0356 331.182 45.2939 cv
334.732 31.6519 339.798 17.9424 344.032 13.9878 cv
cp
f
348.247 13.4727 mo
347.44 13.7515 346.556 13.9277 345.653 13.9883 cv
350.238 18.2764 355.791 34.0083 359.338 48.6997 cv
362.283 51.5562 365.889 53.7734 370.158 52.3535 cv
375.654 50.3906 376.842 45.7075 376.868 40.5317 cv
370.525 28.0654 358.348 17.1392 348.247 13.4727 cv
cp
f
353.141 .410156 mo
349.026 2.2583 345.458 5.23633 345.436 6.27588 cv
345.606 6.28223 345.774 6.29688 345.945 6.31738 cv
346.127 6.33008 346.313 6.35156 346.49 6.38525 cv
346.536 6.39209 li
346.708 6.41309 li
346.809 6.42676 346.912 6.44678 347.006 6.46826 cv
347.124 6.4873 li
347.266 6.51563 347.408 6.54297 347.542 6.58447 cv
347.667 6.61035 li
347.748 6.63037 li
352.509 4.26514 362.453 3.16016 371.382 4.49561 cv
365.623 2.40674 359.442 1.04395 353.141 .410156 cv
cp
f
343.926 6.30957 mo
343.646 6.33105 343.376 6.37109 343.111 6.4126 cv
342.809 6.45996 342.511 6.51318 342.227 6.59521 cv
338.294 4.7583 330.495 2.18457 323.448 2.87012 cv
325.709 2.23828 328.012 1.71533 330.354 1.29492 cv
330.501 1.26758 li
332.632 .879395 334.794 .588379 336.962 .37793 cv
339.383 1.76611 343.22 4.36572 343.926 6.30957 cv
cp
f
73.9346 397.788 mo
0 355.101 li
50.8838 325.723 li
124.817 368.408 li
73.9346 397.788 li
.909804 .909804 .909804 rgb
f
93.6309 235.423 mo
65.2803 251.782 li
60.5869 254.497 li
60.1157 254.776 li
55.7988 257.271 li
24.9375 275.08 li
52.8052 291.176 li
64.9399 298.193 li
95.1465 315.632 li
125.823 297.914 li
130.333 295.309 li
130.796 295.027 li
135.337 292.408 li
163.798 275.969 li
163.828 275.938 li
93.6309 235.423 li
cp
1 .866667 .658824 rgb
f
95.1382 315.613 mo
95.1382 385.484 li
65.0005 368.224 li
52.7939 361.238 li
24.9375 345.276 li
24.9375 275.089 li
95.1382 315.613 li
cp
.737255 .486275 .27451 rgb
f
135.322 292.417 mo
130.706 295.089 li
130.237 295.355 li
125.798 297.927 li
95.1382 315.618 li
95.1382 385.479 li
125.798 367.893 li
135.322 362.419 li
163.803 346.082 li
163.803 275.969 li
135.322 292.417 li
cp
.866667 .658824 .4 rgb
f
101.13 370.638 mo
100.657 370.916 li
100.657 362.735 li
101.13 362.465 li
101.13 370.638 li
cp
.309804 .180392 .0862745 rgb
f
102.806 363.289 mo
102.475 363.858 li
100.892 362.811 li
99.3208 365.681 li
98.9751 365.506 li
100.892 362.011 li
102.806 363.289 li
cp
f
105.828 367.926 mo
105.359 368.202 li
105.359 360.027 li
105.828 359.755 li
105.828 367.926 li
cp
f
107.517 360.579 mo
107.161 361.146 li
105.599 360.098 li
104.017 362.963 li
103.669 362.794 li
105.599 359.3 li
107.517 360.579 li
cp
f
107.635 367.16 mo
98.854 372.227 li
98.7295 372.298 98.6235 372.242 98.6235 372.087 cv
98.6235 371.94 98.7295 371.755 98.854 371.686 cv
107.635 366.618 li
107.758 366.539 107.865 366.603 107.865 366.755 cv
107.865 366.904 107.758 367.082 107.635 367.16 cv
cp
f
98.9341 361.14 mo
98.2866 361.517 97.7583 362.424 97.7583 363.18 cv
97.7583 373.131 li
97.7583 373.882 98.2866 374.186 98.9341 373.815 cv
107.56 368.834 li
108.201 368.462 108.734 367.548 108.723 366.799 cv
108.734 356.842 li
108.734 356.096 108.201 355.786 107.56 356.159 cv
98.9341 361.14 li
cp
107.56 369.374 mo
98.9341 374.354 li
98.0225 374.885 97.2832 374.455 97.2832 373.404 cv
97.2832 363.451 li
97.2832 362.401 98.0225 361.119 98.9341 360.599 cv
107.56 355.615 li
108.463 355.094 109.197 355.52 109.197 356.569 cv
109.197 366.529 li
109.197 367.575 108.463 368.853 107.56 369.374 cv
cp
f
113.465 352.765 mo
112.791 353.146 112.258 354.087 112.258 354.859 cv
112.258 365.102 li
112.258 365.868 112.791 366.183 113.465 365.802 cv
122.336 360.678 li
122.997 360.296 123.544 359.358 123.544 358.581 cv
123.544 348.342 li
123.544 347.576 122.997 347.257 122.336 347.646 cv
113.465 352.765 li
cp
122.336 361.231 mo
113.465 366.356 li
112.531 366.898 111.775 366.453 111.775 365.382 cv
111.775 355.139 li
111.775 354.063 112.531 352.746 113.465 352.205 cv
122.336 347.089 li
123.266 346.552 124.019 346.991 124.019 348.062 cv
124.019 358.307 li
124.019 359.383 123.266 360.695 122.336 361.231 cv
cp
f
117.899 361.009 mo
117.758 361.081 117.644 361.019 117.644 360.862 cv
117.644 353.535 li
117.644 353.38 117.758 353.188 117.899 353.109 cv
118.027 353.035 118.135 353.101 118.135 353.251 cv
118.135 360.591 li
118.135 360.742 118.027 360.928 117.899 361.009 cv
cp
f
118.988 360.371 mo
116.796 361.639 li
116.666 361.717 116.551 361.653 116.551 361.499 cv
116.551 361.349 116.658 361.157 116.796 361.081 cv
118.988 359.81 li
119.125 359.734 119.232 359.801 119.232 359.95 cv
119.232 360.102 119.125 360.288 118.988 360.371 cv
cp
f
120.233 351.087 mo
120.233 354.518 li
120.24 355.434 119.583 356.568 118.783 357.027 cv
117.013 358.048 li
116.214 358.514 115.566 358.135 115.566 357.21 cv
115.566 353.785 li
116.44 353.281 li
116.44 356.945 li
116.44 357.099 116.551 357.167 116.679 357.087 cv
116.812 357.013 116.931 356.822 116.931 356.668 cv
116.931 353.001 li
120.233 351.087 li
cp
f
93.6309 236.486 mo
26.7993 275.09 li
95.1382 314.258 li
161.972 275.959 li
93.6309 236.486 li
cp
.976471 .788235 .541176 rgb
f
163.808 276.676 mo
163.808 277.223 li
95.1426 316.864 li
95.1426 316.324 li
163.808 276.676 li
cp
.737255 .486275 .27451 rgb
f
130.791 295.035 mo
130.324 295.313 li
60.1157 254.782 li
60.5811 254.499 li
130.791 295.035 li
cp
f
130.704 295.1 mo
130.704 296.227 li
130.23 296.227 li
130.23 295.363 li
130.704 295.1 li
cp
f
125.38 275.352 mo
125.925 275.352 li
125.925 276.72 li
125.38 276.72 li
125.38 275.352 li
cp
.215686 .227451 .247059 rgb
f
26.3032 266.147 mo
25.3262 266.147 li
25.3262 267.366 li
26.3032 267.366 li
26.3032 266.147 li
cp
f
124.504 274.738 mo
126.396 275.834 126.398 277.607 124.504 278.701 cv
87.1548 300.267 li
85.2583 301.359 82.1851 301.359 80.2876 300.267 cv
26.7476 269.351 li
24.8491 268.26 24.8491 266.484 26.7476 265.39 cv
64.0981 243.828 li
65.9907 242.733 69.0654 242.733 70.9604 243.828 cv
124.504 274.738 li
cp
f
124.504 273.545 mo
126.396 274.642 126.398 276.418 124.504 277.515 cv
87.1548 299.078 li
85.2583 300.171 82.1851 300.171 80.2876 299.078 cv
26.7476 268.162 li
24.8491 267.07 24.8491 265.295 26.7476 264.198 cv
64.0981 242.632 li
65.9907 241.541 69.0654 241.541 70.9604 242.632 cv
124.504 273.545 li
cp
.0784314 .0862745 .101961 rgb
f
60.1777 250.31 mo
61.3774 251.003 61.3774 252.128 60.1777 252.823 cv
44.3857 261.936 li
43.187 262.63 41.2349 262.63 40.0337 261.936 cv
38.8311 261.241 38.8311 260.116 40.0337 259.422 cv
55.8223 250.31 li
57.0234 249.615 58.9727 249.615 60.1777 250.31 cv
cp
.25098 .243137 .247059 rgb
f
58.8481 251.468 mo
59.3281 251.747 59.3281 252.2 58.8481 252.476 cv
58.3667 252.753 57.5894 252.753 57.1055 252.476 cv
56.626 252.2 56.626 251.747 57.1055 251.468 cv
57.5894 251.191 58.3667 251.191 58.8481 251.468 cv
cp
.298039 .298039 .298039 rgb
f
58.6802 251.563 mo
59.0708 251.792 59.0708 252.154 58.6802 252.377 cv
58.293 252.604 57.6636 252.604 57.272 252.377 cv
56.8809 252.154 56.8809 251.792 57.272 251.563 cv
57.6636 251.342 58.293 251.342 58.6802 251.563 cv
cp
.356863 .352941 .356863 rgb
f
58.3501 251.759 mo
58.5557 251.876 58.5557 252.07 58.3501 252.189 cv
58.1431 252.309 57.8105 252.309 57.6035 252.189 cv
57.3979 252.07 57.3979 251.876 57.6035 251.759 cv
57.8105 251.637 58.1431 251.637 58.3501 251.759 cv
cp
.0784314 .0862745 .101961 rgb
f
43.6689 260.234 mo
44.1504 260.512 44.1504 260.96 43.6689 261.239 cv
43.187 261.514 42.4053 261.514 41.9238 261.239 cv
41.4458 260.96 41.4458 260.512 41.9238 260.234 cv
42.4053 259.955 43.187 259.955 43.6689 260.234 cv
cp
.298039 .298039 .298039 rgb
f
43.5005 260.33 mo
43.8896 260.557 43.8896 260.924 43.5005 261.146 cv
43.1123 261.368 42.4795 261.368 42.0928 261.146 cv
41.7031 260.924 41.7031 260.557 42.0928 260.33 cv
42.4795 260.108 43.1123 260.108 43.5005 260.33 cv
cp
.356863 .352941 .356863 rgb
f
43.1709 260.521 mo
43.373 260.64 43.373 260.834 43.1709 260.953 cv
42.9653 261.072 42.6289 261.072 42.4224 260.953 cv
42.2168 260.834 42.2168 260.64 42.4224 260.521 cv
42.6289 260.403 42.9653 260.403 43.1709 260.521 cv
cp
.0784314 .0862745 .101961 rgb
f
58.8623 248.951 mo
59.1855 249.138 59.1855 249.436 58.8623 249.621 cv
38.8457 261.178 li
38.5244 261.363 38.0039 261.363 37.6846 261.178 cv
37.3633 260.994 37.3633 260.693 37.6846 260.511 cv
57.7007 248.951 li
58.021 248.763 58.5444 248.763 58.8623 248.951 cv
cp
.356863 .352941 .356863 rgb
f
58.8589 248.859 mo
59.1035 248.859 li
59.1035 249.289 li
58.8589 249.289 li
58.8589 248.859 li
cp
f
37.6973 260.434 mo
37.4424 260.434 li
37.4424 260.795 li
37.6973 260.795 li
37.6973 260.434 li
cp
f
120.665 275.065 mo
83.4287 296.563 li
32.1592 266.961 li
32.1592 266.706 li
69.3945 245.463 li
120.665 274.81 li
120.665 275.065 li
cp
.792157 .823529 .854902 rgb
f
120.665 274.81 mo
83.4287 296.308 li
32.1592 266.706 li
69.3945 245.21 li
120.665 274.81 li
cp
1 1 1 rgb
f
78.8374 256.45 mo
53.0024 271.369 li
52.4253 271.04 li
78.2671 256.122 li
78.8374 256.45 li
cp
.588235 .588235 .588235 rgb
f
84.6025 259.943 mo
58.7656 274.861 li
58.1934 274.53 li
84.0317 259.612 li
84.6025 259.943 li
cp
f
90.3721 263.433 mo
64.5342 278.354 li
63.9604 278.021 li
89.8022 263.104 li
90.3721 263.433 li
cp
f
96.1357 266.923 mo
70.2998 281.844 li
69.7261 281.512 li
95.5654 266.594 li
96.1357 266.923 li
cp
f
74.1753 253.507 mo
48.8062 268.159 li
45.4795 266.24 li
70.854 251.591 li
74.1753 253.507 li
cp
.886275 .886275 .886275 rgb
f
38.0273 262.984 mo
38.0376 262.984 li
40.21 262.984 60.3311 251.489 62.1094 249.3 cv
61.769 249.115 61.082 248.821 60.2002 248.821 cv
59.4331 248.821 58.6729 249.049 57.9385 249.479 cv
39.5327 260.089 li
37.7051 261.142 37.4463 261.865 37.4565 262.2 cv
37.4692 262.645 37.9336 262.931 38.0273 262.984 cv
cp
38.0376 263.775 mo
37.8931 263.775 37.769 263.746 37.666 263.688 cv
37.6479 263.679 36.6953 263.196 36.666 262.236 cv
36.6348 261.306 37.4424 260.376 39.1377 259.399 cv
57.5356 248.796 li
58.3916 248.291 59.291 248.031 60.2002 248.031 cv
61.7129 248.031 62.7324 248.743 62.7734 248.77 cv
62.9526 248.874 63.0439 249.105 62.9824 249.346 cv
62.4746 251.233 40.7944 263.775 38.0376 263.775 cv
cp
.517647 .517647 .517647 rgb
f
58.8623 248.554 mo
59.1855 248.738 59.1855 249.042 58.8623 249.223 cv
38.8457 260.781 li
38.5244 260.969 38.0039 260.969 37.6846 260.781 cv
37.3633 260.6 37.3633 260.296 37.6846 260.114 cv
57.7007 248.554 li
58.021 248.369 58.5444 248.365 58.8623 248.554 cv
cp
.631373 .647059 .658824 rgb
f
92.5713 276.919 mo
105.796 278.508 li
96.0557 265.587 li
99.5747 274.915 li
92.5713 276.919 li
cp
.0666667 .678431 0 rgb
f
94.9629 249.477 mo
93.3452 248.775 li
93.1973 248.906 li
93.1489 249.134 li
94.644 250.16 li
94.9629 249.477 li
cp
.137255 .12549 .113725 rgb
f
94.9629 249.477 mo
93.5703 248.868 li
93.3281 249.257 li
94.644 250.16 li
94.9629 249.477 li
cp
.792157 .823529 .854902 rgb
f
99.9473 252.786 mo
98.5498 253.926 li
94.2686 250.339 li
94.3965 249.579 li
94.9897 249.096 li
100.236 251.003 li
99.9473 252.786 li
cp
.517647 .517647 .517647 rgb
f
99.6904 253.163 mo
100.438 251.646 li
100.188 251.5 96.2896 250.035 94.7842 249.262 cv
94.4502 249.538 li
95.4146 250.212 98.8667 252.778 99.6904 253.163 cv
cp
.631373 .647059 .658824 rgb
f
130.054 268.213 mo
128.358 271.14 li
98.6294 253.976 li
98.4136 253.849 98.2725 253.583 98.2725 253.196 cv
98.2725 252.729 98.4771 252.207 98.7837 251.769 cv
98.98 251.504 99.2139 251.279 99.4692 251.129 cv
99.5728 251.088 li
99.8608 250.94 100.116 250.94 100.313 251.043 cv
130.054 268.213 li
cp
.0784314 .0862745 .101961 rgb
f
130.397 268.991 mo
130.397 268.232 129.864 267.919 129.205 268.298 cv
128.548 268.682 128.012 269.605 128.012 270.367 cv
128.012 271.129 128.547 271.435 129.205 271.057 cv
129.864 270.675 130.397 269.75 130.397 268.991 cv
cp
f
134.848 270.237 mo
134.538 270.779 li
133.389 272.763 li
132.663 274.02 li
119.342 266.658 li
119.342 266.658 118.895 266.155 118.895 265.654 cv
118.895 265.295 118.988 264.907 119.149 264.537 cv
119.426 263.884 119.897 263.297 120.439 262.989 cv
120.556 262.93 120.665 262.873 120.783 262.843 cv
121.067 262.747 121.327 262.767 121.529 262.884 cv
134.848 270.237 li
cp
f
134.538 270.779 mo
133.389 272.763 li
119.149 264.537 li
119.426 263.884 119.897 263.297 120.439 262.989 cv
120.556 262.93 120.665 262.873 120.783 262.843 cv
134.538 270.779 li
cp
.215686 .227451 .247059 rgb
f
125.664 266.146 mo
124.809 266.806 li
98.7837 251.769 li
98.98 251.504 99.2139 251.279 99.4692 251.129 cv
99.5728 251.088 li
125.664 266.146 li
cp
f
135.298 271.242 mo
135.298 270.258 134.607 269.859 133.757 270.351 cv
132.905 270.84 132.215 272.04 132.214 273.016 cv
132.214 274.003 132.903 274.399 133.757 273.91 cv
134.607 273.424 135.298 272.226 135.298 271.242 cv
cp
.0784314 .0862745 .101961 rgb
f
134.831 271.511 mo
134.831 270.826 134.351 270.547 133.757 270.892 cv
133.166 271.231 132.683 272.065 132.683 272.751 cv
132.683 273.432 133.162 273.714 133.757 273.369 cv
134.351 273.029 134.831 272.197 134.831 271.511 cv
cp
.792157 .823529 .854902 rgb
f
130.896 272.895 mo
130.896 273.149 130.717 273.254 130.494 273.125 cv
117.669 265.727 li
117.448 265.594 117.267 265.279 117.267 265.023 cv
117.267 264.768 117.448 264.666 117.669 264.796 cv
130.494 272.197 li
130.717 272.326 130.896 272.637 130.896 272.895 cv
cp
.690196 .72549 .756863 rgb
f
130.397 273.401 mo
130.805 273.124 li
130.601 272.493 li
130.054 272.872 li
130.397 273.401 li
cp
f
116.94 265.079 mo
117.357 264.793 li
117.725 265.079 li
117.192 265.516 li
116.94 265.079 li
cp
f
130.493 273.165 mo
130.493 273.425 130.312 273.529 130.086 273.399 cv
117.263 265.998 li
117.044 265.867 116.863 265.557 116.863 265.3 cv
116.863 265.045 117.044 264.936 117.263 265.069 cv
130.086 272.471 li
130.312 272.601 130.493 272.91 130.493 273.165 cv
cp
.792157 .823529 .854902 rgb
f
292.757 394.88 mo
209.849 347.012 li
266.908 314.068 li
349.814 361.936 li
292.757 394.88 li
.909804 .909804 .909804 rgb
f
353.747 261.825 mo
342.145 255.13 li
315.663 239.839 li
250.264 277.604 li
276.788 292.926 li
288.345 299.6 li
317.098 316.202 li
382.47 278.442 li
382.499 278.424 li
353.747 261.825 li
cp
1 .866667 .658824 rgb
f
315.669 240.855 mo
252.039 277.61 li
259.709 282.003 li
262.751 283.747 li
273.69 290.017 li
307.708 309.513 li
317.097 314.896 li
327.148 309.14 li
335.944 304.09 li
380.728 278.431 li
315.669 240.855 li
cp
.866667 .658824 .4 rgb
f
315.669 240.855 mo
315.669 307.132 li
323.579 311.243 li
348.177 297.118 li
360.505 290.044 li
363.416 288.376 li
370.967 284.038 li
371.442 283.762 li
374.353 282.094 li
380.728 278.431 li
315.669 240.855 li
cp
.666667 .407843 .219608 rgb
f
317.098 316.187 mo
317.098 381.221 li
288.406 364.789 li
276.788 358.14 li
250.264 342.941 li
250.264 277.604 li
276.788 292.926 li
288.406 299.612 li
317.098 316.187 li
cp
.737255 .486275 .27451 rgb
f
317.103 316.196 mo
317.103 381.219 li
382.472 343.71 li
382.472 278.442 li
317.103 316.196 li
cp
.866667 .658824 .4 rgb
f
314.598 240.3 mo
289.86 211.079 li
225.524 247.281 li
225.524 248.752 li
250.264 277.604 li
251.612 277.736 li
314.617 241.396 li
314.598 240.3 li
cp
.737255 .486275 .27451 rgb
f
225.524 247.311 mo
251.612 277.736 li
315.663 240.828 li
315.642 239.734 li
290.79 210.095 li
225.524 247.311 li
cp
.929412 .784314 .576471 rgb
f
348.492 211.939 mo
316.713 240.927 li
380.73 278.626 li
382.555 278.406 li
413.915 249.4 li
413.434 248.349 li
349.446 211.365 li
348.492 211.939 li
cp
.737255 .486275 .27451 rgb
f
380.73 278.626 mo
413.434 248.349 li
348.415 210.729 li
347.462 211.302 li
315.38 240.616 li
380.73 278.626 li
cp
.929412 .784314 .576471 rgb
f
325.854 366.384 mo
325.39 366.653 li
325.39 358.645 li
325.854 358.379 li
325.854 366.384 li
cp
.309804 .180392 .0862745 rgb
f
327.495 359.185 mo
327.169 359.742 li
325.622 358.716 li
324.081 361.529 li
323.742 361.355 li
325.622 357.935 li
327.495 359.185 li
cp
f
330.456 363.726 mo
329.996 363.998 li
329.996 355.99 li
330.456 355.721 li
330.456 363.726 li
cp
f
332.109 356.527 mo
331.763 357.089 li
330.231 356.059 li
328.68 358.868 li
328.337 358.701 li
330.231 355.279 li
332.109 356.527 li
cp
f
332.223 362.974 mo
323.627 367.935 li
323.501 368.009 323.401 367.95 323.401 367.799 cv
323.401 367.659 323.501 367.476 323.627 367.404 cv
332.223 362.444 li
332.342 362.37 332.445 362.431 332.445 362.58 cv
332.445 362.722 332.342 362.903 332.223 362.974 cv
cp
f
323.705 357.084 mo
323.071 357.45 322.551 358.342 322.551 359.075 cv
322.551 368.822 li
322.551 369.56 323.071 369.856 323.705 369.489 cv
332.148 364.612 li
332.778 364.247 333.299 363.356 333.288 362.623 cv
333.299 352.876 li
333.299 352.141 332.778 351.842 332.148 352.206 cv
323.705 357.084 li
cp
332.148 365.144 mo
323.705 370.021 li
322.813 370.537 322.086 370.116 322.086 369.091 cv
322.086 359.343 li
322.086 358.316 322.813 357.063 323.705 356.551 cv
332.148 351.676 li
333.029 351.164 333.752 351.579 333.752 352.607 cv
333.752 362.36 li
333.752 363.383 333.029 364.633 332.148 365.144 cv
cp
f
337.197 349.259 mo
336.555 349.618 336.048 350.514 336.048 351.248 cv
336.048 361 li
336.048 361.729 336.555 362.028 337.197 361.664 cv
345.643 356.789 li
346.271 356.423 346.793 355.529 346.793 354.792 cv
346.793 345.041 li
346.793 344.31 346.271 344.009 345.643 344.378 cv
337.197 349.259 li
cp
345.643 357.315 mo
337.197 362.19 li
336.31 362.706 335.59 362.286 335.59 361.263 cv
335.59 351.514 li
335.59 350.487 336.31 349.237 337.197 348.722 cv
345.643 343.853 li
346.53 343.335 347.245 343.754 347.245 344.773 cv
347.245 354.529 li
347.245 355.554 346.53 356.805 345.643 357.315 cv
cp
f
341.418 357.1 mo
341.286 357.172 341.178 357.114 341.178 356.964 cv
341.178 349.988 li
341.178 349.839 341.286 349.659 341.418 349.586 cv
341.54 349.514 341.642 349.573 341.642 349.718 cv
341.642 356.704 li
341.642 356.849 341.54 357.023 341.418 357.1 cv
cp
f
342.458 356.497 mo
340.37 357.7 li
340.244 357.778 340.135 357.716 340.135 357.57 cv
340.135 357.426 340.238 357.247 340.37 357.172 cv
342.458 355.962 li
342.585 355.887 342.69 355.95 342.69 356.098 cv
342.69 356.243 342.585 356.415 342.458 356.497 cv
cp
f
343.639 347.66 mo
343.639 350.92 li
343.648 351.799 343.025 352.876 342.262 353.313 cv
340.571 354.283 li
339.812 354.727 339.198 354.367 339.198 353.487 cv
339.198 350.227 li
340.033 349.748 li
340.033 353.237 li
340.033 353.382 340.135 353.445 340.259 353.369 cv
340.384 353.3 340.497 353.117 340.497 352.971 cv
340.497 349.478 li
343.639 347.66 li
cp
f
315.663 306.675 mo
309.284 310.363 li
317.193 314.896 li
323.573 311.239 li
315.663 306.675 li
cp
.776471 .545098 .317647 rgb
f
217.168 267.703 mo
251.714 277.835 li
317.103 314.896 li
317.087 316.115 li
282.222 307.504 li
217.168 268.867 li
217.168 267.703 li
cp
.866667 .658824 .4 rgb
f
251.844 277.604 mo
217.168 267.703 li
282.227 306.315 li
317.103 314.896 li
251.844 277.604 li
cp
.929412 .784314 .576471 rgb
f
381.596 279.478 mo
317.103 314.896 li
317.118 316.248 li
349.898 324.249 li
414.982 287.164 li
414.982 286.066 li
381.596 279.478 li
cp
.737255 .486275 .27451 rgb
f
349.814 310.367 mo
325.253 310.367 li
325.253 286.809 li
349.814 286.809 li
349.814 310.367 li
cp
.0862745 .117647 .14902 rgb
f
380.73 278.424 mo
317.103 314.896 li
349.898 323.14 li
414.982 286.066 li
382.499 278.424 li
380.73 278.424 li
cp
.929412 .784314 .576471 rgb
f
366.537 282.007 mo
319.153 309.364 li
271.77 282.008 li
319.152 254.649 li
366.537 282.007 li
cp
.14902 .172549 .2 rgb
f
371.442 283.762 mo
370.967 284.038 li
363.416 288.376 li
360.505 290.044 li
315.669 264.16 li
304.705 257.825 li
315.616 251.529 li
315.669 251.556 li
371.442 283.762 li
cp
.835294 .933333 .980392 rgb
f
326.527 257.826 mo
307.601 268.872 li
301.048 265.092 li
296.689 267.611 li
296.689 259.107 li
315.616 251.53 li
326.527 257.826 li
cp
f
370.967 284.038 mo
363.416 288.376 li
348.177 297.118 li
348.073 297.131 li
348.073 292.674 li
343.985 290.321 li
343.985 286.975 li
362.912 279.396 li
370.967 284.038 li
cp
f
374.353 282.094 mo
363.416 288.376 li
315.669 260.813 li
304.705 254.478 li
315.616 248.182 li
315.669 248.209 li
374.353 282.094 li
cp
.917647 .960784 .976471 rgb
f
326.527 254.478 mo
307.601 265.404 li
296.689 259.107 li
315.616 248.182 li
326.527 254.478 li
cp
f
373.822 282.345 mo
354.896 293.27 li
343.984 286.974 li
362.911 276.049 li
373.822 282.345 li
cp
f
290.128 277.055 mo
290.128 280.534 li
283.875 284.145 li
273.69 290.017 li
262.751 283.747 li
272.963 277.849 li
279.218 274.238 li
290.128 277.055 li
cp
.835294 .933333 .980392 rgb
f
327.148 309.14 mo
317.097 314.896 li
307.708 309.513 li
273.69 290.017 li
262.751 283.747 li
259.709 282.003 li
269.934 276.104 li
269.988 276.129 li
272.963 277.849 li
283.875 284.145 li
317.758 303.706 li
327.148 309.14 li
cp
.917647 .960784 .976471 rgb
f
290.134 277.081 mo
271.208 288.007 li
260.296 281.71 li
279.223 270.785 li
290.134 277.081 li
cp
f
335.944 304.09 mo
327.148 309.14 li
317.097 314.896 li
307.708 309.513 li
317.758 303.706 li
326.514 298.652 li
335.944 304.09 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (AKSANA) ()
%%Title: (1701.i207.029.F.m008.c5.gadget delivery.eps)
%%CreationDate: 1/25/2017 9:44 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB3Q=sdcgYBcf>$Z%bP/ST';(@fL?I*Ku&:\^k4HF)'peXfDFP*mC0+,-RfP;GSQ7?F1cOmVaKRGY3oFqaY\@(Ej]nTC&YN:
%BTBB40Wl8(Tks#ZSNg.U?;s_5:1'c\_[UGGUf8!K0m#S?fG6Z5@[:olA%?3N=8*Whj*%ciFZS2fXkE,Y.G8'G6TK6Ai>5Ski72Se
%5F"pe/R?7Ml$`09:p#"sB"RJS'e?*n:d:k5hfRd*kQ&@2gcjW!"6e8#G%#"02bj$W0,#?=TIId#*+fWTZF\Z]IOUS_Y2PT1n:S`j
%Ts5bJ6rP-bV9eG)'CW6\l*fDc[Ft=A^SUZV1#Z'7jbb-fML[SZXMU#jcE"Ig>$%dn$!Y6tm[>?25AD@;6Vgi=O@C<lI`/u$nS6ro
%;oAWhbm(rAGGaS]+iZN+cJ]U61pBru0]?Xk+4(2r5fbEL''XH!eQXo?lOd2PAu875;uA$>&&0hqQ5XX%0M;e.1j)oRXi]HfL@K^n
%]g&uj(S4k)g6+,;mI"]]DkOkEiZqM153^V1p7"OZ$`L?:`WboDRq8c-9+)gpe6HIGaNE^bg#C4m?[?!cok(=]\DL1(ec5#:Y?l=#
%H-!ah*9='[29qY/Bqh(jkDIQ$Ukr]&`A&C*3"DTZZQhm0]>Wn&Btn#<R:BXfUNZ=9g=YtY,WU:V>qLhjc5\uY=GEY3dBD&Jb#C69
%`P0tOZ7p](\J+clLob%^$NfsB]3`B^TuPBaLCqp3;hq81`I+GND:XhE*W0OSfY7IX<bl$a?c.B?DpUqV-.bh@o2eY2T\@2An,2]J
%r8sLkf6ZrH?G"m+m5HN>4+F?/bKUDjH0^a,br/D4X;kMnLOZBSX!ID]=kbMo+7S`l:!0THeg>JElYLp*p_BBsJ&6[cptm@CKCjbA
%$9JgGI,h,+CUPE-#8"@A<o1CS<g(ahCMq%,/+c3UGHpuXIW5C"@IG?j;7F>M/O0q36uDdT(t0VudtFDUh-S\p/KDOYK?$_kD@)D1
%Xju>O+Ha&]aRX&E?+id^j^YcH"a7^tPWQ],`BX6=+Fm%p4T/9pB\'2SHI-(7&q!J7]<9b'*&YYkgV(mtEn5'X6@=Xpnu%RNg0O6m
%bR>+@*]=#r34k_o?/V^*[bJBnQA5&sjS*&T&^Mf`U(Um_fSK'iK#%Y`R&+eM-H_[UTL24_LTt\ks)blL/'q01D7<gD-HIBo[o.'n
%1/L_meZK_:X''A7PGt'Y\Ldqob<i"9fWTQ1Fs^ro2E1+&@47O5eB[Egh/X7Se<[E:VU9AK?pH=j#Y[!q1_^@AROOZqSNf<oq.&U5
%+"I9;<*_@\;mfUqj_@uDW];r?WLB^KR\?/-_)N@bdTT,`BmHhr<2MCiFCm4bg!!lpV-/Oa=cVV4r4r`OW\[r4%GfOM<Rr0RX_7:-
%T$n(%C1meRf@quQYj&UT(u.Y$)>N:NP;`gq\D&>dFji$=dkYbRg]l4^\X>?3B%G1oH*^nXQ=b[a%ShRh=dEnb(:V^m`lc.G&"eHU
%g+[4[#.G'*_Qr]m@rj^@T?Nijm&ZbaoC+1gWhVSY"@mZD1>pbdNpYaHm\HD4PD)fXaht$l!B"-BYZS&LQo9^kEJm2^gq!"]a$4;5
%A9\kR3V_Z\!C(9U%B)o%MUI$21b:QpMb.,4Pr&mN&)j,hI'W7`_'biZ4JiMN_OWo_KiGY&5Q>dfCA<;B&cW7*9,oVa7a<sNDj109
%Oq[nKJKt4/!QfmY5U*_,JIb@B(B0eU:I37+5UGW5O@i^G@5NT20KG">rtaYi+,<;o7g3LW*Zad1B##Y_&HC)'I'W=X3%ON+r&[^S
%(*ApC5@9!YkhcNZq;_Lo8&IP@8\V5#J+2?S^+oG%-GRB@^]:-:HjGqn)/0VProO1Is#^'_UNS3`cD\dVs5:LR$T;f:OYOaVBQ=j?
%,Q&]7WC3[OTo^qg$J@`MA;h=pJmGSfB#,nZ"]itM084d;T?Cm=)3@5rdVjb=1%Rk@ca17g(bFb=\QgbVbCHtj*/K*ic<3.@FI8Y0
%3=RB5aQBh>Cc7a`RHC/2CsYmgf#[,ZQIULpKhO[ob@ECHOF*R=13U[[R%O]W%*N<%Q,GltWZV[a+Uop<!G,\jg+YdG0Mj,HW0TOo
%R4KbV1oMH#e;sh@aT1G@5Y\4Q!L-Upe5lir%!Q*>T\(elE!E7%#"h\!$_RK@TF*KJM)_G()\f+T$<+DO-r8ACJ1Afp9$Mm,je-.$
%:pq]!>of05B#,J3!iY-!W9"G$1_+9S#*j%WlIJ7TCV]$8;!Btb$gKka)Ue_@Dh6n,^]6&B"KGeTo3`?>?lm`Wf3s]4Yq9=Q$3d/&
%SnNi-aqDZK7(%,&BNKsQ2LR-NU.LS+Lmgk17Pof0oI.5`5kN;7NH7L#Ui_?iSL058U,p`Y-JDZlJ)gT^\3ME:!6-43d./Gj3LV:;
%.K3lBPG(d@3!DMVI;Ja^`&/l]%XrNX,ig(;>_F1BeHOs14RlC2p^0#36emqR%cbK=aCdF$RRR,Y*-^QVi&]p\STp2-s(PAL#^#3c
%(N[NU=lRO3nKi3&-gl)46]jmtF6=(l<&7"?OA[78_G<)\ai$C-a@FSjP[9<S;>SuY3r:!Tp+[a5h>]a$+X]\Q+o&"p-b>+]r(esC
%!8Xud:F>X(a$)WVEFL"Onc>7Q/dlsLrtr#%*r3%m7uMbF)kfduq\_GT/*E<YH$j?6<.Lh1MOIF;mV!qrYtQK"3%7[m[Y6E>6&o\V
%#/r<=9W4AZ!d4Wl_CWh)^[<N!J_@uIIIpHKKOI+);jgnS,PsZD@_\9>pPW1h?VG4c=0r-&_&OoZ/4i96Wa1BB5YETa5lJ\:0W8AU
%^M36h;$m,7==E/m<U:)/E$f=M$p'Hra9%.JOL>kZQorH.RQLZD)D(G-FQqQX97Q4knN+c:$[a38nV^)kMV.2;_*W<5W%]&8$jdR7
%quNfP(Bb$q&gE,3+X;Vl^o[^PLG\(f&Mp4+F!U#Sd\7Xn<7J#Sl!')<Y=&.G:$OQ.)EX#&%s0g.'QcG>/['f@2ou-RA.^fSL^Ya-
%*3#?6#(boXqE@%88]O#_^/%-)6]]na*M)Zra?P=R_Z2Mr6HE0(>9^8B1-j!):1A+.J\8u;`_E'N%?[q=0Jdk*VU..u,ar]`L-]n1
%0,g^4i<q[pbT9S)s7#i6X(R0fR/nla,sarV(A[eEo&'nmF7"n"ZP7ibZ*tU7;^"Z*+$Yc]bK(eZqpS)c@%WbO(&AruMr0;W:L;$F
%rQgC)A[U;f]^)i:Fi:JNNF$)LY8O"FM49$L*Sb*(VG\!=R^g0e6\OE*Fu16*W=S**]q;@#8sJls)Wb%BR:#J?/8<82A7UE@bcgfp
%'e>GQEJ!OL1r#1i3>TcA:k%Ml/=/hL<(-&:$%O(N4CorpVFipdJ.u+i]X5nBjg6]X?q'FM+`3aRGNpRa4mpW*XgaD1IhgqAK@(]-
%HjSgp*t:LuPa0X:>"1c+lsl,''[_p_kN$17S<8qn,@_XZ$:Qb^+%=@43\M]o5A$U&ASc`L5"=dt;IXVQoU,'Q]DYc5>3d?GpHPlN
%I89N$lp9:PRonTuC:TOBRA"u'ROWbKICiRZf"/@IrZq9ACr*mC*u83@b8u)X<D0i[mC%L=ph<r8rMs7?^lOt&\(e&loX\@A:"b&O
%l#thKDc=6If#hj55qSJpA04cUn0@q_rIrpOpi0;>=]:o^6C3\TGa"b;XXDm$251C,;/1YLMqQ>>&q2-/_QW2U!Veam,6"[0]2o:S
%,2:B9@]mB/j]+7UCA`h8>#'DD4C)`.\`_]-79.M;(5.[E[?r;+B1**G-EjC8\r4^T&hGZdH6_*@AkaXrHgQ_tc"iQVak.2$9ghY$
%q,A-ZBV'CJh9m_-&Qqkag0k^u&n8mb:JLec<-.WI0&2IgBR;si5h74#TWe=$(<7c*XO4'jQ+HD06kkP;T%9?,]I#;4m<*`_,kf&m
%Qr)IpR^4nicBFNhG;`$,7-6TQo2?e><i8VpA@(C*h/9QiJ1+jTBlVg?Ze$gTH_Ps;J`Rr\rg;ebbdu;')l#5ZHl[%gnj90@*@`[6
%+>1EC(?DPjT"pP[=&HDmU"i<m@2[54g1'1tPV\W!h#Bhl=)#;)mab]%X.<fU2]';8Jh5*8`c;BMc8(\i`cB7)DAgVLA%DX0=Dj<S
%5W"gD&[NP))2f3T-!JMT`H)pcVcPsnEm)]lDgR+S*oe8L.4N>D!'?UaA+"H^3U^UGmUf!(j@#J5CL%aahC)#Sa'SA/gZrs]DBgr`
%FgLHo-XaE(&sHOkU<QE<L*RPD4@PI'9KZonHSm==Nn59r%<F)d8$o_8Pk#ah/9i5L6rsotGr7X#M:n;([3W:KfkstUQ_4tcdq`%?
%P':)MP:\36I&RbXeM?WWQD<:b\bVTg?oelg!eu=rpM+S-gMCuCDBm9'"s98eqUFR6bl?4.2S9t\0RRD+"--)S<>2$=eh\%_S71i,
%'q6c-1B(%QN5):Y@iRG.NG^IR.UqH4:#f31C/Og:F6W<Jgm137902Z._$s=$2q\k3D9C(,b]C*rN`jg2#op?g4TR:AdBm"+JSD_;
%[EdDC[+Sd'W$G,S%E;('rRXX5eFaO+PhW?aYNfFQabK@k=iNnb/AHb4T6]0nX*3_kfVNTc=3.!kgNo&WmnMk[RKPeGg6WjiE\>%r
%jFXh-o_>Pp=B>7Q>4QK@r_mHd8kN\XEMdHn,+h`5R=QQSCpR9fZp!mH"<2L,EuU$VDF7&C3;JN"ZLj;f`,@UeP*`6E!g\P!1Dcn;
%/AW7eAkt;k4`7e?o!eFac$&C[hc5lUJXF8-A?!R\?B$Ogo(l'NY\&#09BGgg7<XSc9=bDgSRB3DIcPh_V_ijhJBr3MliJ5e:W-DB
%0'`mo\j(a-4K#+S'3&;ah<Fos,gjfj(nLkgR2<ask8+hkW\]NI\"q%XVL1")&St2dadE%dMMhUR2*]eE_.%#*X5bJAmUl18D)AoZ
%WE5i26mp[S*-c!tlUrVXpq6G!"s98=[E2E1XdWJbn:fkWDJLk!:>LWl&o=u#7AStY)+@PiJZi8Dlf85uf-Cj*hf,GMilmnG"?Emc
%Yu.uXNT)d;>S[hP+-'84Z`W*td:1\',KXBB\\.AU6#p@^UcuV((B'\m9#>&59!q\m<j>Sm*^SO%H$>HRj-Im=DY7WTs!V\EX]76I
%N?h.HQ$W,[Qu26CU*>Spk5('XeY3p\HimB3bc,87XeiP85M]ZQQ3.Jtla@J,7aZ6[9<(u2St"XL5fp-n%\$%)\Kag]fIBtVc$C!c
%8'Rp=NWaO+gIr7W25ds="S,GcErD;;26CF8nD^07g)p5-c%!$jNjkWqADoGHogIABj*/aU!A8!=FI&1?1D-:F(9%oma^XBYIBfkA
%RAKgt,0lX"=^UYjPQcMM@$3Upk,oJrZq.SQ8JX*8VJ"1i;%gC)F&Iq%&6:0@AB]KS8njE&;3EJB=c9Se7JSU<c*A*r`aYJF"Xo:3
%MipUUcFg,^Ufs!.MjYBBHJWF7'%(1>V.3A<;+caGMiqU*o-3k:\P"`>2)U5(Glt0'9j5j:j`u\4]U"eL^WS(gLCh4C(=Sei6JZ"9
%hET?6SM969S0==kqirGe\%Ls<l5,cbQA`#GW`X1_bKNkfh*eGL9>-Vk"\ZP;e8%^j2A^ZkhZh0M?!Ak(bsS3X[G"NZrGQJZV6dU,
%cIu0s/[a=4ZrW+Q#b=b"Is]aCOoP[cG"["]2?9(QFE91BQXZ0Z"\URRMG]=F9N<e\'_$rJT-UGqMmT%@2[7F`\GDOn40H-/c>WM8
%i)CK!I()oR,dk=3F6"Voo6,CP[8HWIe]-ehDoTr2>+XKn-+Y-?dWSee>M`#Z]U*5U0?pUMWRJ_RBdPKI^@%gh_K0d;)9O5&kuM^h
%R1?&-D4@M^B#<H*!rq/4n*o4Opd+^=a$QX>J_]>+QW\Bh(@.N?s$<;>Sbh,00,gIP,5u,rq-P]5T2J(^@!aL4q.nQhfo<J$B)ds?
%ZefG?+ETd3NRCc*;P-Z^&S1jjc(u1HO:AfC<C.?F"u_oR9U]>uUXg;eK/VJ"(pu"4>D"Y!pHQJ4OsmBs.I&Cl?0ttK]l"J54'1#'
%AkI;CXCU;rB!,t2Dn:=9+cPJEDFE9A[W>@UZomT^h#Eq[rSLhnP&Io240*+?\c9:ss./#HQM\G?rSRX&8W3CNP3)]3SF$9=pP:oH
%9\iJ-8M9abB/F*Rj8#>/T'p^GGIcm`@oJh\[8%BAKcY"m/LLAVeS<>n-SMT&]tEVsK?Y$8]U</Mr=;TH"%qMO<%F5?a3-@[i.<kM
%W.ojNVWK`];!#B6"[^/'>T%HDj190[/Zn)t"Yr],=1%0=`0M:HAVP#IX'0,VQ5R".HqB6a+^:&[`?oWPk<DZfig&oS[c]NV_+XF/
%_0/g3S(g0.c'm8?DL:L4B%q0]gt,lpc__jr:4dSbqffI)l]-:X@Z2-%QIFh[/&?8=)Z2*or[cK@b%[;LPp4p+C6PXJVW:.<;3Yg4
%0%h;1d3<4(QH=oM:-Nc'?4$Q*p2<#Q0Vof7"C*<UIY3U9i$1$0<cYYE^KM0ShIqK!,Kn$K1@_YD]\II+bJ_RZna`;*Bpj3K-=3R?
%G`c\UOa*!k(s9TE'/)-]JM%Th2bCYU:OaojS^5M*OA9B&1Y3M?KtD$X7S/H):U)J)8_W'n17G(PRd\EHP$E#]l^(<k\`@.Dfu.^.
%@<pPE<,KcrH2Y^@<t*BgIB6G\a)6$1^3s]8B@sH4\oD!3`&&FQEHr5H$ld7J$@(_#iXI-k\Zq.;)jhE,#,W?dFa<l4o(JnoZ"\Oa
%r:J,`2ud-sUum0gP+ooVQ(QuPXlZP[R;iPqr]#7V(IaW[Bq8An`F%)(XX%[Qn?u>31u%"Eo@g6JWH>d*8jh>`-WJ4Z-M'a7`rF!p
%i1Ehi0nY$[UWfIH/:/8./R3t;WL59#3AcT=0h%ERfclS=*E2Sj1db!ALd.s%6q)[4h:*48-X"ZYQ`M;]BK3-UKR&O<A]r7Z`Z.GL
%ehW:@7kr9Dk:rJ1aC?Ju__R9-Z]X[gao!oTZ-6_%)J,4[N+F&?:@]5=Tlo0Z[8kEFC_>[59%tq?h:eoA2+\[lG]"^7K'oPBUs^hr
%o1\C$L=:%J>8id%M?TO&m]9SbFQtj:H<Q5*;[MlC\SsW:U$_gBH&Y^b!26Up[+:Q(%\H4oIKWRC1D.U#NMe+$$1`4[F3@IE`@PqP
%%Lh@fU7p[;6d(CBQFHIE?.*!6cBH?JW3i&e,asd_9lD<ahKRId-?7_.dp'eC>aCVm@D14'P,=TD\]M6F^FShqen\XbC4PXG9F<E-
%m3dbGl<+Y0J)d@QdnJ<Km#]gS;4>;kY0;=)=-=lRHEigJ8B"nl(,Jb*?D33>+*BreE^O9O2AE`dgp24[:0@!Z]XkVPp]RE`F-h_R
%nQNT*SRj?2>HqEg/mCeddufr-1q/G+QI4JCR[[V?Qb[6=7WXJ!bq3=KfRh.b$1<e?dr6qUb*M#A17VR'F3AN?):&1VLNAs=!X*Ve
%(,>+uS[h97?)#<^;b6YcfdpL=h'<2C):'m$4L\uW?q:hB/2(P$rfN+l#O(@32/mVdYJg!\biQMNF*On,'Gn5<b3O4'aI#^X\d%T&
%GSTc"7EmDiD^tn=Cq6BWpX`H?lt<6nX-P#(/_a!Xmh3?SH#D[kiHjWTN!dXNF"'NcQeb?X=c6r_kMY/V$gesVkW6oR@d1=TIp\f*
%Ra[Fha:X69See+"H'RT<HVM3cHukfUN%V:5JSD5>!S-8S2RCX4]nJU@CtJ^*ZrWNd?Dc1e=58t*PUYY;QN?Hf>"7N'\B^(>9)`;R
%"i'7hdhBfoqffI)9=+d9[%%n?XT[5`Gr>@u_K:!tmBi0I->3a1o)(-7.9@g2;bXV/\FDX.6;!n!:&J7BF,TJ\/3SWRp'bj2,29Zu
%%MCbUrk`U3D%Afc[Ikh"P5]:hJ$k^Smm[Zn+'CWn9;gu43^l]6kgh,%.V3k-SYCg2iSX-QnMBSir5LeZfr*-.SQ2'GA9S*mG<P6V
%PpeAkd0tAsf;%'<et>`U%8#b;W\u$/#%P*nO@3/U:Jk-&m:uBqmNm11_-C-a74[.fStM['qcKnBO59*B&9;J)B@sH4\oCE<PaBC0
%2L&qM*+rRYcb*Pr@3iLmNUq'-k:qV%I+dGZ3^(5J(X<OSId8QIOs:b3%\L^dX8#$=8@6GSbV%tghBlRc1WM]6S6nrhGG2VOpDV80
%%bDCpIYN7Y+Hol"?^"$Ihf'V^CZ^W-*^&6r;j'&Z>(Ve+*0-5jfiAcEjW,r<'d(3j7,0V1B^Y?1fNa)&1,]g@hD9XS`p_)+9k?=T
%s3Z,EBhJCF?S\m*[<4EIe.tr*k$XAU[h<XWB+&u(n9c#agl+-I00rd)G9>/-592%LK%#DE-:N"E:bRtP6=,"Gn_/\3H]%W[=efrf
%]gtKG\]@N$,scF@(Ap()qD$QIb1`Z<CQqTV;N34?PGN(a<>M.Mp6KMQD)TiY?^YK&=r]jP%NYp?CV,R$--;VjAru0l0(j3?2f7]j
%c5WAVR>]"==OhLVl"0-i(j2e</R>D/,Fj8+YKIR%hc""[Rq?WWQQWE+pGMV+h^A^_6R%nST^u70`\I*PG78=\GfI@s2PRtAq;YK@
%+$[Z^Ds;H>'X+P)!2I2C2#hC=^Q;Z#5J]`nOLHmIVH5I$@]%Uh]iFZU7]LK^J,/arpj)<Pj95HSfh?N^E$&#EXW,K90;`7DV?:1A
%Y1aY?d<(kG-@TBlBlWuY)I.Q[`bt^;T(g"h?O-)f42Chp1fZP85(-:nnf@Mq"DJ)cQXPJF^5ViH,+9a.,"nJcZX^K,Fh=5Ih!kQN
%L25#;%@k%?>7@EGC#%)Z$;5BnY\Z>MeP@R>6)WJ7N$]YX=7Q9.6tlLR4+A6:L*:L.*SjmFJ,XX_FD2!0/R8V;R>dOlp0q^D@>Z]H
%<WlcsW<n+>36W61ATb3DrDG1HQ&E5N`1-r6o/.@Zc8'3qiG?&9d21QB$scPi)[,F*,!+b:rUX_&rtZ^0VnbFart"W!QVY#^lf1[[
%(]jGN-:L?GDbP0U\PG'XLI)@UK75r]<PN4uYcId?<@!">;'X.RkF/5R*MSRagBFscS3QNE.+n=@QrsPW`+BMTH*da,`dnTqYI_9@
%;+?t2Q1M8XIcYtM@A@oCdqs<;-e`iZN'C!pRtKC9ir>Nq<&Gfn9nK3FZZPS/]X!?*i]#\\M$73b)u*I=ajm?:(3nuklb9+D,Zn`e
%q/%n+^IQFKDeeAr)(MYR-qYa&8LQ`E7_$!,f_V"@/R[>d@!GphWRpAmlSG45IOg=oF^0$Ed>!5m-KinY6>fOG(K(._o3!VAmSs1U
%!WJYm:#;jL98fRb2(.L)6[<_3\[?EV:IajldFjunF&K$;3>:"%Z/V*^nS:VFAS=Pj3uXa$X@06(VMTsZ&t]*nFDaHRmH>4MQgD].
%1m?"]Kr;[N:d1:ZF54njRU'khMI*-+e?3+Q:7BUA"s99OT7W<(a:m&"LhFW)!*_Aqo;I"A[g_-E/PLp!lcIp8bEPRBSr9s&OQm3j
%VWN0c',8$eOl#+_T/Bj#+&2dU]it$EXds^=?EN6h;"d,3C`\"L5`0^-Dr5TYjff7=H$-T;h(ObY<jUQ<cE1)p=j^5L,.H@-VL2Ap
%6)A1q*F^>.YG?O$VK1[>\mE#F\(BMSH=,,8+*G_K"%)lsYH(p:S%[DJ[ae-Zk&rlkHqt*b#?u8GjgMh1d](fE[BKcke4SAhMqdeS
%[uJGI@G#<4RfDdJEATRqgYIdbgFb#8CB8r`$nU_c7LFe$KiFVmp9O&hloVIl432qSVQ$&[Rqg>29PbZ=_o0RR*&L;Y1F8Oe\]1`*
%puursA,)"Eo!n(0]_5,s3V378.f"+mlX!P+eaBUA)5ZI]"qs=_?:u^I8\8:2kY(krPt7K71BSN2M'%&7X+1A1&X3q>fV]PE$"E2h
%OeZ6l"ai;g+Z3Bmi;AIMj0IiSHHL66(%ALLi_rd@9!Et,NO/H0.s1m!+S.3+"Wfp4oU/UZg&b/[K_cLHiY&-=RIEbja*@3Rf5>$V
%\C82*OOfHhZO.K5\D99n\>ALt$Sbk![d1*"(%gIe?hN]&]lkbYOU)8KF^/aKgc.@V[,[/'FM'.N*5ke9qN`.op*u?m?XpZ15BO*B
%=EiocRa1ZN&H-r5fB5[VjH3!6A)NI2J7=MH3:Z:a7eru[q_^X381Rg)^js>VjVsoq9pdBS8u\e'&_D/O^X0%3I!1_gJRAA03l*:R
%k'3q/\,+S."4_UU[NtlS2md%(g6,$c2'._<i_J%'=*rnL@:"IsYJ$Rod*KTMYb3SR8.?FjeiMOE%'b@N%lKCcncenamnhsC]2Pag
%4J`G>BS%6"9fq0So@iL=l.Cm#FrT8;!qt+9)]B<b.b,A6mWHiEmACZ3T3cA2_m&`2Yfl#/HF"U&*jF?rZX*:I6`?Y?H.D9$J+nq0
%&QDM/C@qIpcV:#A]lLM^O/TWCCG@ur'X6i^FDi-,kQ'Q3e%#>&8k0Id4_@QZAYh.D)6(iYm?,?dkt(0]R[o0)N2g6",P:ks[mKOq
%qXna-m8:XDm'BL`j3nqi#$Xm?N9E&@C..+(\;@[6JK3&c+a.CWrTKZfL`uVdK]1RIn'-bi$d9s-AXE@*%CF%3gfeP]Zd*^$FTHQu
%mZXXLG&<>QG/qKL[O3m8%g\`P!Cl9kkIXDH=cNGT,ZQ8K,qOL)BO:$a.SV4`n?f.;gLu>]?)]a'6'-5$M5W1G`K`nO<N`a`Q0+aW
%d,2"T]BJn!$.1Z5:9$3?^\'IpW8[s#[qU)R/m>%?X`44]MOd&2D4k=497)ra)V$\20D'l`Vm3EK^AZZ!HfM>aXh69TM$D0WUufu&
%qO.Sn)K#1L.i%du_a(?-=hEMYaca\,XQeh3dh*#iJ&$9a\Fgij:tX&"9gSH3*u/Xn)qU`-=uKT]k+ic`ETF#5j^']8g%Sl!Ad/IN
%"pNCGH0!PA-T.ss)PqGt+rX$7e/>Vn")Zj`,7+%a1_X)BA*?pmVs9s_ZMGnjRSr!f(LXg>;jN]pX/GEHN^']r5M6<)5mON8ZVh6[
%>;gjCctm$r0ojGU-P>X.lG(@'rCG+DpM-GZ^Sl>ADJPV1%$B8eqK;')IF)T&OqKcH5I)?`^@&G53s4l*XYJ[\YN(0a9HJ+"i6Y#S
%hb\]Q&bF'\6pp,\6ZouJ<*Ai^FsTE&n:%XQC_u(-0l:-+A=QgJq(,_2M7j7F%9j<B_6*EA^;`W_>b?E%&.Tp-1lQ;ofR.59=;H?F
%pHYco*?64VQ^*4U]?Spf)2b<YaS99-.2p6OE>>tj4NFaJnOq!3_>^l5YSTJFf6`-[PkoAX]%(>UM9_R\JrrX\osYl>%G6WfK+jJ9
%g$;Tj)oE;I6X@>4RJ3??$q>BuW542>fFa!TU-C]T%[CerW"'p"`4+Y9NfM!d2@Y&]$S#*re$r[Y2;;+A(,NeY^m5^S%'H&d^\`%1
%rQWFTSY2k!^mD%j*%2d%76'"?`t+Ze62$t\M%+r0=D=\_Wg/$mi>0h>eEDkQASBSqem_D&LfFMmC2PO&3b6-J$QpBGfrq)]*A!j(
%bJ;V$W9]7IN+iY>hlV&h&P=d!Uu;IdNra6m/fJ5B-T*B]S)\ltC4h(T'r&61mFm]VnqlC9K':'gGK(4KmQ=1M0X93bkdi)uNnTm(
%?;G)Y$!Kjch;lT'R1,9(&`hN<RC-_`Sb?8;nPj"[=#%T%JE,p%?L?B\=1g4VO7#PpI*u?U/Yg$YgdYFa;2j=q&5O#qCQiXoVeG+$
%i2QKR,!0l+_8Kgi7_A13aJ96_lDOSaX[ha7Cb*!V_]o)?F+s57/hFtYQcH?b/d9u6qlAcS26a4OI?+t9IgTh*\(-qsOsWH9hFo?@
%,:5ZmKD\r*[UN[qYo,:2D8GU]+cLbPp&=SH^p>PIQk[$s.1e6`dPk4BS&04P*TbTtYG'ld"VAjo-qMT?HHrE;C2_)Yi/d,Co)dPh
%<sU^-;p(R>FUWbD`,i2DIl2RFWs4VC)[]!kp^9e`FF*1P)bRL]Sl6hl[%Y:N5mIj$^X?t.7jUs1;PqZ<C9DgL(N)M@NG;Iu4f*7H
%V(8)*INq@s?J(Y_=cN`7"EBgWXFq7eG*H=n)UD`d7W>TX(!q$$?#<;V=(3F;R@r"q4q^F@OQ6NY5Og?:;/7MM7OB#q9Q#;;ehHqp
%O$R^NO11*te$F5**hDg\q%k!^\-(:F*fFh:C6%=$&GoO.'94("Yh<]UY1h,]7,38M7#CD`<ZIR$]@j(MB["PN7>/;E64gG?95L;'
%^%$q$*ujdtg94SAiq*MC_EdMu'Q2ug(m;q#,KQ*d2Td`ZIY7sXcNs!6Z(`s0[2GfQ8B6.;GLIAQT1S63g,XQSA[PAV[(u2:PLUl4
%+L`2$l!PH-Cck.B@ng,n2GB8-Y@6LEG\,JDp)ejoK]NS#@ZC=A892+9%?aUVIDN]k;Uf%RklkAfB=!#W>_U0P,r]W<J=hg_pE@Tr
%i%ZI=Z5Gs)"F;7$Tu_rB/\8^0^lu8GP!Y-kI\D0&0sK(OKH3n6isieW*IMHoA:Jt7b3<<Y=&RS@=Ch8i1X?$g<uT2\OiGWc=`>Y\
%hM`=-P;:UDMC$91$q^Bq7L9K.^YKam1Pi+gRXh`KeoSbC@nSYuED7N-'2%:+%chfHZ`@F2U>]-gj&0N<CAf\]UmN:?!!erHE>Hgo
%N0aZP;njH6on#qc(W[B:7e[&=0d-o7'q8Xd`)4hqqN'/1hMb_fa)<N'h_DAr^iJ2P.Pq`l2&c[gIQ3grqOqa%1qUNkQoPFbbB0Mr
%MXgW.iMZ@>G>B;t]C.ZgoS5r+RGIRCrG(Z(EVH,FG@U;C[d'_N&$.]Co%*cAh)B],%ZTXU`QsSTGMBfo?-'?>B14V8ql8AlIEu2:
%W"4'\^SW(@mVK6k]:G;T#n4/P?+eqc>9.fAQS2Y]GBXJa1g>D)XHZAS*aK87<@iWM!UX-#A]t(_f?JaDOtf.<DPZUC@OJj=g:^[>
%B&2njElN`URI@ORmpMMf76S-tg=l_!=7!E"5CH;!AQ*M;NuDlEojr@1]'s9TX-9Qek;H@eL"3kW"bn1J'u#5^aAoseZST#FgAA!E
%k,OoaZ9N(YN-ou>.qusE]0"=\]b;F&Uc[85QX?6OmGX,]IX1s2B%-ST+FUhH^EFrohC\J0)#er+]p(1<Y?/&3`qf='H:<=nSp@a6
%D1+A?kY35doc?>EHZ9""]2WgSnQU-!?R]<<Tf)M"CU^>T^26lb*gAIgQ042dgZtJYl/LsF+1Qj/h<fhF*JUi-hgX6Q2bK.rlVA&#
%T@ih_:TLr&Uf5[imF&_WI_DQ]?']L9S[X,0qiPO+e(+"i2>b;q,&;s0=#W(N9[,c(M`#l1Y3]cpGOE5hDf?@C]u]SjZL0r`Zd#]>
%4)`<7[b/Rt0@]Hs`X49]RJ$>=P3%o#c?e;3<'AE0Y?@?X6/RudWqPQR@IAuao<<1XrF6e%Z1*OPe-e-b@FU3^qZd"/rE3Q!IbT.7
%Ijs)a2tGioDsRS\#7c3dY!79!hdF"XQVV0_n"/r`QbU<39%48]%/h2X9RdmmPrT,In0OTV[efV!>BpFhbe':u3M@D/N9>rgdJ@0A
%TB3ejk:086rlD_>UB_\&im$e[(V0-Ml*IEg2gtUsFI57%3jM$)rpo#34B2<IJ,en]0>N`YhAE_N]afC1C8pn7T4f=8\]SX#9IPUD
%h6logpUB#d.UgXW9`A:$J"&1L*u&nQmAi1cf&=7(6m]mT[On01j,N_*PCMu?Apii?eGH0W`5SleR-jRE^"#HPVIe6ZEsr!$;lcXf
%B@]LmGPeIg07A#jm1!O2O.$[1qp^,Q^5K3Oe7h-FeT=$UH7.JuX?LI&AZr2!O800+kAed_[l7:TpuurU'7l8G*Q>_aq12!t\$Pn4
%J0OkGQ.u=V]2B"BW]I%Bl7^UV?SdIkCurH0[?h]k6FL/!5ald#*VM6Glfl$cF/rMmqD%U$m/GJJ8\d#6&+:pUGJ3"P=KcpFg$!0^
%lWnRN^A[Fkn84r4f=H1Bq>.PiWXgK3qjh=F>O>BA;Os;LNnN.br>4G([_8euFcbjO2.X#1oqr$:&,]9X5D)_[iRa@Sj1Xl+\Xl"`
%G*%&KIC`Sn*E4)nYgR0>c-+qPBDZQin%=)[_sFJ*q9K(2>5=0?.opn.D7p1kpNXDorSsS9!XVKD'l*U(Vaj2&PtrKu:MR#Pd<;_L
%(SD*W)>;2&j&Gm:LXQG9'@H#mKCdnTqr(D\pu>&+R?5H"F-ZBmY;)5[;CJ'=h7]P:J-'V5+Bmnrhlf3O@"[d4jbZ,!(sM8O1V[p1
%H4#IUr=26nrIacU:G&,d9qQ=i2R:lulS:*\/iG`5]mTWbZ`oWPfB?:>c/mu?BRb38]99-6W%"OoVbg3,kBZa*Z2<*ND=_8tNV[\'
%Sqk)')>0h,:5a#q+.dNJpAPrFgtaAP]>WH:+qMemY'fg%l=JOrniM5'j2^eRs0t8p_8K]]XTGkVIKJE@k<ou"9Z(PGHustm.bYID
%;pY.2&Xe+;`5-RV-`83OKX6;;`%X"c=t+TNs'3a;$CL1>ej[L7j8E)CP9(^O\3noB@AqB":X:8H+*<QeT[fOpnCOR['Utief3KJ\
%40Kl"&1IMPk`t&Kf6"Nk(q%B1pBJS"UP)`D5R_g[cc6hq<OVr"bXYYA,GJK=:Vem+4udY#&n3^!60#";65EaWpu\bQrYk__%Pru*
%-Lo*r]>a!F6@Kg5>T.3"^')^f)*UM6X2`.HnOa3&=`pbV0_CHlMML8C5p,X]7%^:ZIsMkL(&NV\"`4="Lgf;=($NOf`@M$-_aHtg
%*Zma0LpF$c%?Zbkg]60PR"hjErg@/-=J'shTRQZtON5Q25@R)kD'>L5&SUeolcB)q9>ZC=[=WM8CpmZ&3rc?U6cd`9oL\08,rhDJ
%>CH2iIJ3AGUTge5f.bG*b2,-</*<iHnQ:+@=*=r6h6Y/6gZn=bp&*S=07;N_q&n[,6p-2&0IkcdL7u+C3&P*/f-A,$`Z_"#RB[fa
%:Up+4A@Q2hIk2A`qXoICMA"oA>,UijL2iXeWh&&&W#3(3c[QeZ@5@"PqP8---@OV(YNOMq:KHMjedB$:V<,`;-Ym.8-:ZYfFS6r-
%Pg(23B-Y*mH42_DVP88M?YdR^Z+!AE:=Ak!K9P(Vqsh.(*Mgpr?hVr%hn;K$>0cN[b4T*(aD4G@Y\7U`P^cF3Tg`^DBJD]R+IBtV
%/[.1gIe1O*RB+!gS3EnnIfdp>s2YO[>\EdpNK9ApL.X-n1g15('c/5!nb;:C6LO`_o5+*3ojk[4?b$<kpTXp9H1oLk:WcD%h.Gk/
%8ItR&p*K&4)-ZaB=Fl8#3(P#Ob?]"g4Vo?Uet7?m#O^eQp1jOnp.=r1dk+.p33$G]au+-fWXqYCW,/2M3.=.=J5Q":Qt7ZQhNp>C
%RE;Cpj5Df1m\(U?^SkT!&V^P\fH;qLIdOhm_NN(-Kl?/#G])u&?%Jq;cW%>c*;9.(qX3)#^)0=[>2C@rgZr,+c2+$s>nh<qXdg3%
%8E$YYZ'sc@M1+3*GWe[5m)%@-O7*nUNSZV&_X!6.!]q>3SpYSF;Xkn$qKNfWo:c.U-3AK8<mn0YS\?]:f#mt&+jW(hWqLT(i`IeH
%]P*"]FFS=_ICr&'A?S2Sh-,<:GCJuOf9[251%d;CICKcIs)B>!hCZsoI*Gp&Vg$$#JqS]d<NaqQ?rcS/,5br<(Vub`aQU)r1mp3]
%\hD"(eEcejDquN7#\Wl!p<+!@+N1q()t3\QIC`MZ%^^N8B"N!LEhWXJiTY*<H,t4Fq>k`mo;bWI.*Z+OMM5KQ]$SK#-\("$/p=_]
%4A&&*C<Wd8gTL1/^SfE7\0#+3XdWGg]W8ql?>KhW\j+_rq6X>!=W,1;>0uoc(ZT1I$,p#-,pC<%ZHB9@_q]t)SPBmZa@oEh09Mq9
%CWEjM6I,MMet7Bcnp%C^"PJ;r^Vu!GB8YkRKMnVj1[C^#9:_;+GILn,^CG)2R<>^[aNA<CYi'-Z8$eY2npYr;8*M8ead)Vn)ks\a
%B=F4S.b3dqV^>SrQDkrh6aIPL7p[($URqGsd!a?aY<THF&JGq#+#9)Ri;O7"GO+(Gl?;:.`T?O=qa.Y?Tta$PcS$s_NE1F>j+I#V
%3fhp7fi272E5#NX)LgJeH**hcq&%]]U2_8`/GJ`%n6S)grO,`h"3^H:62k,+I*#C6EgRupD_quOBlc63.:5-=Xn?s:17NR"EXg`f
%hm5C??G0(*'mELrq<$W-G?/qBS%P(O5'c^1X8:AG!7fsi7bU8C*at\44orAH4pJLXo:*Vmp=5B+;;&8tFeJBgh;'1!94%Aqd]8^X
%/m=SjmD[fh#m2rXT6Bqda(Abfak-B<dk6OT/F4T8\N&hTS!dGcXT6gTJ$bea*IZSrDK0N4EO$V4#+F8klfR5iXf0?B\U<pWYfXr1
%SB=&[.V(^.3dm<8[7niUn#1'_7s0%Ak]Ml@(0*6p]L9@N:J:.@Jah_1djJe?56`"dIOA?JHJ$p,.]g/2F6id2p/UhRo>#4MI!]Al
%<(ij(qk]M:N:DpN#H7[qr`q3)lKc=P_=Jk#n[[#3%^I?j$J=aB[JfY^\rs\<s2D4O>,a&48_(ji=2GurhC;hFH105-g4PZ3AFc;h
%`KQ@b\6CTJk+"S^E*>69s6p_'\GeMgom=/9C!/f,mWJ+;RE)?^bgtaar[E8=p@)sYAY/>qr>&sB9CbPLW+>q#T1<kBMu/3Eq@!(Y
%]DIs9/EA_7bTP.Yk0'sWq6RHQ:G03J/Q7F9B%2r;cn;gF9<E%h2U2B5mAUS(eFW"^SS'P0-HagVlGFcnGa[kfh1L[ViSL%?:HoeZ
%'!511J$E<\;kIcklhslrT&cA<!OR$>BHIa=5mduXp%o:dI,n]X>FKX-<FP:4EB!jeK3""kqXimMEir[1)mLCoR+j)=rM/]%:`Be-
%h#)>,7RT/eq[i%:rDiH9Y/1]a\VnMY'jgghhC579NI-mWm:.&F!Se7AHBipL3VW++c4f0SZ.GnCKtLGh/Sq7ZmeKh1[gIlJm"tDB
%OFEM#<a'*QhlX!hW1r#9)IVaO#qFM*mcFG]/?7"*,jfF?N^"5$ea>F/^2[#[qfkJ\3;3kG`#2+-rXIrY\J+4/J%W?>!`8d<rp"EO
%mB6(uiCQ.J(KU:rBn#aNebqi&q!bYpdP=)6]^mb"ouooN'M@U1_7.e[U5csqI<n,ILB#$@h:YK(%3GdY4l!q#o4Ma%f*@#srcQps
%c+M0%FtUM%:=8q.V04a\&eRB\2a<6Bk-ULaCR)6"I;"ZOar"6q9K0/8*_/SuE?\'2*s@:-"X(n@J"dqdU_h4bVgG'1<qa6e^bjZV
%8E4Tmn-)p%pAt(;[+.`3['b7J9-%=*7%!_:[F$Nf?JD^"4#0hZdb(\LT&mE$95ioUSosNL]%1Pti]/N*Dqk`\r'=)9RdsLi;HS@X
%a.nkGQ@8`-55nAOT3elS,+rJt]us+JT(>,)5jc:!r<U=tZo9hc4+5/W[pL3tVb_YXfV!dMgU[9/[0(S';hlgQXMVHa'gC>%383*&
%,\6VQ>eE:kk.[VLnE,p4rhB3tF$dLFL[Vt<h/E2b1A1<q&Xse[>/Ve6rouY.],IXNkj'fEJ-0RU"&h2b6G@^B"5NGF=+QJ\Abs+=
%k^DDuYN9>S?3W_>#fn6a4#O"@3hT5Hq-)qXpZ()bIee+FGHeY^_#;c2Z1F3_\TRJ1o%f)uGQ"3GE-l_`?X"N4ge&*dID:`r[ul.<
%p`+*^WNJ[To0KR\mXNsFkn=GS2;kp-cF.&-^$$3FI:[Q^1d0K\rto=GVd:]Z%8c$f-<AX^:LG^0YN@;F>PG8fbO3irGqJ\75"tY8
%`[+HWo@Vpr\pfMu9'cG_dFT9t3!k>/2BG"rEp_]+-Y[4se&=?NE:ik[pUd!(p\/\]&&.t_GroC%KgZRd_)DJ?G,5A2jRX%#lf.,:
%d`:l\%aimd(PVJKQd*D8,O[1tUM#_%87gi%%EDkYG;l]F(iWu'n"Xst3Ic%7I[@Z'+'/7q=eN]\r=p/eTs>qHnjEthI_`)0m+&#)
%+,0@WDJSRBdqct0M3dg%j!VB8f"K?lY!+;f4*oc,J#r#"K9R]?3<e)#/YK4de';Rj*bJ.?8:q5E*IkHB^:ebhaS!ug^%iT%O@PeN
%66gma(A2JqF1o8n.G^<(/h]NDSbC@O@53SbN3^papG1l7!UFRmjfR<L7!6WVBD3^L-2QJo:R]7@f!?H6f?qAPd@>Kh;p90-akVS_
%=ZoIC'#)."J$(!DT)En]OLoc+SUf?UHa3>(]_.6uAfsPfYTFEIAeq"j3o;LD\(\#m49pZ*3@O6\5;G'n+Jm4eYBH&/G-!XCjX21V
%D`.qQg+#MBY>7&s#Bq\5F:Fsa9=*LSW2.O%'NU+b<aY#UA)t#6_iL.D>c%7-SJ"Xa'Al^ZB,o,FTC);LXfpuU+4m$E"gFf\;81Pl
%pXM9MTq?=Qj']K<^@?BIIl0M^BDH/3.?A]F/UMbCG_CG-:2J?E#;'^Eh>GZGJgDX3\M)JDpL@FbTdn\UE8M^k.#8&]YJE.]/3MWj
%.D2SaE>(`:miJ9F#OD-/kg6a*K7)omUJ,5*n(;[fY2=S^e3?GnDC:_ps'kG7J)0Ifca*7)7&FN$`1LkWl"8X"KX2?*kc<t8h<ck6
%13R1-9Zqjpr5(-@E*D"EiqEYWj1#ML=P\Nca1ToLiSe+J'p^nWmQT]M/aK'UBq9*iprN#M2`"74)J/XD^O4XfahGR6[k_-qHM>l5
%Pah?dV&q_j_.J<n^3M[7=G)^/ILh$]2]$h.DI(Z^s*Jo:3-N@3U)W3MNl,t'*8LqdfC4VAGQ%8uSMl)kcaM)npL_CUMA/%QL51gX
%D''f9D2NN8QX3+m(k/C3WVb.+m+&\t<m=;3?/ahiVLQm*qKcCf)u\=-=S:EmR'$Upr+gBQaXo^,`c\E49pM0\i/F%Q`,WP3Xl-6k
%U1YFSLNFJ\iDSP@AleC92)riBOk8Ab`OU5AP:#2\KR_`]d?p]U97.EeTuDpOJ#lO`79`]J%9aquES0C2Dt\7VAC:5n>)P8:kKs-$
%E/tl3oGlc'6nb!Ts6#q;H8pt-bC?Qmb&M60i<tBV]]N,)BS^YU;j(WG_nc!SWM[L3I"RPr_&rSHKf6@ghh%-goi4[E;Q=/EAQ(DX
%Pbi)S;?s.oVKBiM#dbG$)GZ1C)?I_cL&rUG6b&jP.92!YS!jh+MeP-hHo4p[L]E?1+ELF!;["k"Hmg]>G_N@O&A]V9F>IL-J3@SE
%VP'IsS>@3*B*`#sVVAZpJJ]iV;B7(STTq9Ka&F0deI8$YNbp579P#YI1Mn+51Ds#@)[Otm[a'Dq9Ij]=J:]2*V[Qjh5+>!B!<S[$
%,M(cbAdP8K.?tJh9J`NF>Z[XBQI:?P9(Ytk)b6YP1*^Aq^e(#URF61OV\q6!-=O`4*'c6[>1#/gV/\X&0iC'a,7eCAThjVBc(.)/
%ZFZpGIn./P3[Uc6A6H@@iB+;P#*-U?Mn)eVDon0TX4d,c/2bD&D8QAkN67P#V[p+3%La6V+;/+GObmdsPIqqaO2_3g%M13]*fW61
%>m8`3jGAD7nc[;4O[k'"ERmW%(t!GU-_he7`N:P2$o=_!9TN,mjsaNbXZ1H>?u&#=KK:9pV[bk'BQ<>4a:m'#KjmX,VPRE`(GNDl
%2Di<01non:ELS2+1#&?[S2"B_0FkT.Y:lY>BTD++_I,nU`#_Gkb_=fE[j6kT>8k<,S(n-Y<:)YA_lMg?h%3Cj3C=HFXrA-!+/DY1
%I1T(V#m[.o*C+<F+14DlW2>)K5UpI2U^Y_:cb_/j!Et5@-ItMZ[.Ie&eGC[$P95C1/E%JEXeW2SKO808!^-s*CiEQbW#[`)VIUPm
%D_Q)61]SYWW9]o:X#?ZjL3*dLbQZ^YeMdrM0r:sVqT%bV[MHO)DppXZGl'3F^s(o25;kA<GQTfKrjJf*.,83<_HDK#dtHSqgc$75
%",EnlEUi1OU%,@$VKA#^1ZLMC*3a\>`57qd8?4hgfbhL,*R?]e_=RF0Iof[Wl$`R5K!S(U>o17ES.Ke\cI&ufhkYH;NnJ@!`Od7T
%5\pLQ6C1'd7P*!Y'e*g96[*p$Y_9,&Ad(1]G-F6Dl*en`N*D$E&mu`R8-$W)\MlARcjQ"2/?Y_B?t3D6,AE6)7qK+/17JkCJtWG(
%_C`m@\q"OgKHs&C[$QdaGhWEmKL?FEQf/cJ[LFp7Wf9iZEm3]qK7RhN:eR4b1n,U#-3N#2#tk9ULKY2I?juYmPBidO"QN]."jcGk
%9EESYAKj`dA=rUI#rU8sCG'm>2O1qIYiEs;Ne>;?qd(Q1f+[b)kRI^lW#BppVTDhYHiZeg]e!-lJ`lPDThIG[!5Z-_dSHb%J4`>4
%"fd4p*$n'C#D?=h8(q@&E=OlS!Wekq%j:G1L@8L"d,4n89[g3l4'SAW5_#97UI??AWJ9@rVhsS%FdoBKkrf1E'*oWmZc&cY^<mDm
%0J^?Ql!L"BR?YfZ#3c;kL5NDRO^hT8@gR*!225HHhqE]eAide-UUQR&hS@NMBVK0tkU4jdW&gAP#l#]>M*ZrI,7fBXd:'EaF6&Mt
%ciNS;(8itZ"[[`Nofn.j]k0brO$^bfkW(FS:OtRAGC48.7e?7"&464/ki;)<o,O]"E2"@efM%+H!-b(Z9kI$@ftI^pY\4,I,7if#
%^urn\HBZ,g!H"Cn!bfJQ"^OEK5%+G20O!L?]Jml%g#+h_`P[D35k]uc6i]sR%O2N]DDn^jj?X"$feiSPPJA@C@71D)/-27*@"=1a
%!).q4kNFqDls$DV>MOl0f0#$`K2*]/nP..s(Ci"89`\e7(k@-@B>br)\S.*1`S)KrQC'KP/s^;)nVt`q"R1&n(^-6qM*)'RFb&e?
%AUtcDa,$M.cN#\!_4Vr>.LGoUemFUnfa?L9aW77/=;Jh9iBK>I"Nhi*Z3,)On+L+e*)B0l6j$c0Nq9Qma4=fY!Oe+F/tn:3q@alp
%'7Z$o*)q9ns""gI4^c5e.Hb)!!b(0E!&n'qn6)\P\0<*GNWK8\M*>[O**]@Y#!,3YM&0"=":@NCLNBkO&:>.rLVk=^An0$%@4b\C
%:E2\Di*n]8%,<'M)q55)>07E+#QbHZ!`njAg:GCO,V>D*Ue@OjrM1=CYg>>Y\,@doS1rPP-Ir/jU'J&IF@eIHYQQNeHmMr1KX@J`
%eULWJ&mQ2V+NjCL$,^.Q$:"k**R'1)5bRd(/sD>gH>jml8^\5n[O/[re$]E3*M9tWKRp,!qp.;e.Ch(NE($3?8SQmh;#na)!>-b(
%rjTgD1l"<uR(63p#&]T9WUrMtDD6t&9i.HM7go5pTcuM71_W\&!d[>@]kTW`YZMSj@)@b$_pD<4`>Z:)9.&dZOXgFboPS_T,<i/D
%!e^^&qAi%V7DTSIj%-]a1P#7TcHHR08Qi'*`VMoY)QG@q?qCDBl"/QQ\H/3R7=\>dfs[[@MKm]o":.&._B*46U>QX.;5J6tQ77%]
%QHXagTSnsG_GuHb3!=fOgEcEADH7Vl6XBK8.2C&Y-.X&Moh`cA@\'B);YgGG2.jbk!cuR2"(u#AaE/+&iW:CBQcQKMOarXa'bRBZ
%On"$ZT0'L*pRqOR9%LF9SKV'BqFr4+'nX42WJ!;3=mQ`aXJW1oa`/^9-j7,mTWX!Z[Q$h._:1oG`IoZgFmK]F4/o]3/&bLY0HW9.
%i6=il_*K_N\Er^6O<`8[s(lj,*eP0uj'LZ;7,f.[L_YTlN_"H3r4m2(5Df[^L6r>;VMk?_V0[eGR)%g<.J&fOAkT[b!q/-))+H[+
%`0;4^'8!`j)?OG:N:,lLCg4\K>BM>U#!0qj+H@Adj<0V7.gH`roHXZ[KQ7:tjXQX$S151,Mhu.=d+AW0D"4S/lVL#N%b@`9\nie#
%h#NW;PDSk+$BSh^.PT8\!i_C0=pA\;J:b+:;+&eX:Xi:aMkg@n+o#eg=;_HS3tl2C6@CC..b>76Ci2?*;.+P:Un/d.;#hUG#;oCQ
%[q%S?Fd#)!8XVgDJIs]VZ_j@^"=Vq*">P\R@;4C#1(?aVJY\3q"gLrWd]QuJFB!b2`@CVg1PWdRA=GJ?b?u(/nXjrW@V3\Si_cq]
%ZCRbBdsrR)'$%LM%6Pj7;;aH%5\Y"gN1D9=*nW!dd0X?V"kb/+J5bAN\W<A:*,%r>n/K;;9["P;::L>GbtOJI<4O;r<a;Gb"I@+B
%^dP<)9.]>98DSlR4-CV#mdm;*r'BCAM"?G+*E00^#ER.AM-uNGB)j^7ALiVJOJO3NBM]BC>GTULDq_QY@tX(+b\(!BIRtfr+fmH[
%ZhQV6FOQK7l3=!26ra$/RUE58ZR!MQGuPe$VD],q&t;EkQ2FiS5,0\iia%*h*L$:cnQI](,:E[2)DS6AKH.QHOe='Ag*+A*0hdj[
%D`M&&!KEfoKFkG[B'YJA(dk_U]U-P>/]h/2Vqb]+Cmm3$YS`qBK.gL&6&*]O.^s7:L'`0*,9bO"gLNn5Jj<Qf2@.F)/QW-23?`AB
%<s"/<htX2h3R\08BKDIg_JIA,@,B0`\E0b,h"nu$6c^#=`8JD'+(B<)?gLX&ES6B%'05^/P%"qOPn?Op[2J^]*/p^$-t]$[8;\U7
%72Up8>R4h.=r"ONJhWlk*RI\JP]9^/*Gp3KaO5/Z.4QZE.<\OuPQ97lK'33";'eOHoKo^j.J?*TP6IZ_@OPcL.U3=2NI-YbKUO7A
%?N?K@;$8J$M+.M2i5'-U@%g/XcWUNuq.*<h(rS75`+1"oF=m5=Q77+(n99.OjC_1h9@Q1p^^NooOq+>u2UiFq`^47r#UkFBA3p8'
%%NaWQ`8)2'$q6Qog;2]P:5Bi5/>m,4ZM\5qC#Xk$Va<Q1-maND<Jkc>qEPNFWQAg`QNS3c"j-2"kbiLi',RAZg0[0paFY_*QCnh9
%qcpE3$7EA@L+Q*$C^Y:F#fhp,<p&ciP7moZIW2i?i99C$)1q6TeIeQ:@#n!2bF)JB2Im8jTY1r_%q^<D,];+AN>+<bnLOYi/!\,`
%3G+k9?lCG./.0@l#/o`B>T/jWZ/S"XgdGFW/*rP#_EJckN\t]-9j>N.8LI65.U5F2)Oq9-\`;B/9m"20%oZ/$j'[9hnjRUGIkVR9
%,%?uhPmdeQ2At_&2#JIsQob;n*W@Hp*L$rk+7pgq3rG0r1H-4N?kmq5"Bri(,C6_$Bc(B?FAU=,^-jp&9DQTEEQhg;$4I$Ie=]*L
%0)-%MYdVW)Bpa@rj<ePI[pqs^RqX!23p)?"`R$:NN'S#2LSGBC#oWg;F@F6;'+ecKD+@q;Gb!HQV1>NG)+J27@<)S5)Mr"(N/RTf
%maWPbmD2:O9oaK+1)/[2JH2-Jp[TC7RRoQ=817Bh#4MVmqA>LS+P&eU+pBY&6E3MTNWu3oQ-,%0dQ5#B!:sn?D&tIfNNdOim3[?A
%AgM!dcu7QZk?+HGINHCSY\FNqMNJE0gc,g;Wn%a(_9?+=/e!(,"imDK*UGZipj,6Y7p[iX$#DXLG!TnpoY@J`m@XPaR:V6!fjJA,
%7["r9=PA>"'Go^O"J2'5W>!K/R"!/-NKGh@lC08]krpB-b[GJ/*'DB[)`*31a(-X>*>4BZ+IZCh17LR)U5DuBf6hM";gQa*a7VW-
%MEjNB\o_?>0k1bh<BM&]$8A*P6hs.kN"tn0W$OeI3l`ARjYeHS.D>(%8hZZgL<>uPkn!k42JIgoY^`1:1E"/^"+^hh%nf\,6S(pM
%>p;Z(5ESIt,JbWPOZicqh`u:!pcEf%ge.lpAn/1Z_nj-IL?!eH:e^7;+JZFpAl1!!(iJ,n#OVW5%?1dB>#]^%0"T\@'"]#)j7n5]
%7mGe(W5kPXW!5XC,)",C)<`JO<g6=o^4DnpgMp07/.k;+JB-^faC;Sm%Uh(d#ZdctGgJgb.:]?0ok#CX$&Thp!\/^6UgK2`6,S@)
%,UZSrYlH)ImUJY+69Z4b!JYp79Beg=gcs0ME$G$2IIKHmHijEtNJan^<oV1(NhPLq/saV15S*urm\n&7=E;B8<HJH+2^$c5'LSg,
%_fZjC!#43U6U83;Eej^HrdH1PdK([5b^Q5O2(7t[Y:/eE,JBalp"!3%f`t1<JuQO)@\jq%Ek,DORng1e)(FL@16]+Z"pBaJfZqrc
%f:;_7M#WlrWhq],KC>$5R6tt%_ebD8.$LZGdKg^-:t,Zu[)A!8JT\YH3[#4,,I_6Z4fH4B0+RAn#06os_m8A$/R.KbN'Fg!b7hB3
%G>;QFQD;X:G_:hk,Xep_dY:jaJR5:.>259p)71hNci]!H`M%>i:Sp==iUaM1IKo3qFeM$]:TtV(2G5XOi0&FDOhF.2a8?m.7/\Dh
%`8#)9AD3Ps(&OY+#S?IM!%q40j6AC"*mP>V:#"iA9-u'c\CcIJ'Hg/Tj\.-g%\aYD8N[nX3MU-g]`AbM?uur3g#Up(jMu1ol%m9B
%ZGHqL/Bd]XK\I/Na([c%ciVp];nT0j^+Vj"TM19aTcqI0CCJ-T+3u)EmCf]06E#VV/$;8F!<tJ;?QGPo.a2Qa13"pf,1N5:I421e
%[4nppi)Vf)QpNUWD_[%OQ<JCm!sQfC]o>9C?Wjg^>)[tSc8;[4@PA`mi6pC`<*nm"h/X#>2oq(V2%$cKktb0"QTuma`DNWR@a^%c
%U0snO%lK4"__Jr,_jEM\<Wc$F%$@ok5XF/QSP]ia8cjfBOf:*a*<h!"=<T:7a#k!$KbQrtW!XYbFp8%f)2:QDBrG9QGn+;%UouI1
%>8$TKIZLqW9g"OX7pTn$D/IEPJUh2LJB9-UldAMci3N*.r&q[m8-gskIoA$$C:GK1Ne%%eqe>"_&>I=;)[;'5DRe.r/$qg&fM&)Q
%R'_f<ClA+YPB+t]I3%.97hk6%nnBh10K,f2%)L%"oc,rl1=M4?.&P'%)OMX$Uo('D_P2Q!RLg-ga_]b4"-BP3h@2BME4[\+nnZ'.
%..Xpm'8A3"Q7YH17fWf0VM?r.IikC';=P:CR2[?0>80=A2]_r'Z'7PnrF.,W>G83[6#=T'PRN()j[f7i^rUH0K-*DR'\6\E`usMR
%q@/YP(pVI\3;:g8@Wi`B3lCSK<U)XIJlZ(UYeV/;g"(9fGlgMXUgK$#K2Q8i2ukBKL-'H2;Hi"C`\C$-YoV(ZTr%WDSrQ1N$=jkT
%&Vp`&#Dn"2?+9bR\VcCN8,^a8RY[hCKWjG4Jft,g;sl2/9ZfP1LS6B3If$8$N.Eg)5ok!/lN1`=`-JdNP_0%_\LAX*UV6+]q-_(s
%O^!Ju-5X8N^^MLMiMeROGgUK?J:oge[nOoMrUYiBN3HZ.]1cZ#EMoTbJ.Q^W3B8(gRh2;-X.`IB*a'1d4$I'TTG:FG`dtY3*U+Z:
%3)unq3=W?'QKbU+UqK2")IcCh7`Q&@[cPFNZk"d%+b;O7=6tRm9NhkX4"NrZ%:p(e6OOH8oJ*"Ege&_uR2%SWfShVu&#.a*-Ha3Z
%)r>5%_!a0$4)1L/DqC#;.,8j+HhX4jZ9[9WDk_?)6X<-Q3sK]!-;#)q!%-2_$RLA2Tc>k>L10Dj+>QFGN4a9I;*5F:;.`ZW('737
%(h--\Hq>Zu)1g.HR@L>]>2mA-+&Fqr@K0<Xj!`k;-mK^6FW6MW"B;q!KnK8pU7(F;+^!c6"XQY>&Bpa-cQWL$qCL&ZXMC1t(bQ"I
%2DKpW\2TL]_Q!^]Al>tVMB:Pne"g^+Y^B^p/1R2+C0Gj"TME$HeMJ[l9nG'U$0oJb*5f78U7JK_Mg[ij7@uITJa8[<\!:nZ!)_-%
%B)O0B9T%P"OmZ-/(+?*9!iK=J>JgnVY)436"JUT6I0d1_?Aj4s92sdOrS+h^Wsg+'C71jGpAH#eHPDEn7Hl)^7`s,`EZ#I^8`q7I
%ct97FScnVKWQDej'SuTKm%,c*_4<"FTT/3",![3N"3WR_E]*:;P..AdK$I4KWC*Y*#pG=**"Z:754W5?/W;5J+<C7nccZ6l3'u35
%">mKjUbb(8D937XIh6-u+Qk7+^EsdVp8Ra+GlWq$`AU[X:X*]*h2+C=Lnhm\"/%8A4r!mE&<FtH7K5DdQlAY.)S.nGiE+%HFqOf>
%UoUGZ1C`#rMM_sS8-nCE57Q9Sdfjd(4:9S\;_1Q7O1kh\A-T8XKBV<=&]hdl?tgAbL\h2UM(tj9T`o\<H:tQq<%NS(LU9G;]>u],
%7U*0/.KEB&Y38HK(+(UF*KM$])k._2\Z&L(@9kH$SdVF#WT8_pIKok<k!gL*JT/Bd9*/s=;^+AunB/Vh3%C(hkP()Cibt>C*gGW4
%*M%j$if&OYMM!Vk!\LPmiWQW-F%r(t^j8^MHIijB'p=\f`eL_2S4S?%-gV"o))DCu%CG>0OEK!]!Q;pt5^G9g:o79(Dr@#jTV]cY
%N"BZ[;`=S>;q0@FM0/U'W=&/m%9lNXe79:4nrBTh^2-`(^Ll0Y5oi=X3(.?%?b?O,_U'$Qi-]qC)!S#0AN6,NkXu^R=!eNF!Gbn]
%E^l;GUUr#eeDlZ;Yg\6Z=8iu(K5/c1qYR'MGL6j[eVS.aq7RO)ff%c/h%0hg<Qp-CfesOG]LYH2@S4![nt^ftDaTu#NY1#%!uon?
%bs6^,%eQu"`'hcc^-+Yh5J#1%;mELK5cNf_*AI4Z0SCFOLj%7@'DN8gOD1?s6CCcj).IG#h6:=G!d')5(l**_OfbVml*!)7Geb[&
%Bcr[9ddmJV^Mq]'3&SSr#7@"IOr8dQRW)M.51-X/G,hJcTR_aA.:[[U;mFq>J%%OG6Pb@8q,+dW6qiri7d9P0(V'mC#/fh0/?)K8
%]a2Vr=AXT'.`e_$l0ienM[n9SoejT($e'mk\Wl*%K4ng8U?maITOBUt_))Yn2uPV6=0TYp=]lS-9%LhG&$/cJYd[i61?O"qi-C,[
%jBT6H2>MLGN$CasiZ9YC5o:WsV2>_H@sKA[0@8_*Y9Q*8Y`;qr1j(no%/^*F]t[T<,M"f9O#76=rO^]f33"A_TH6*L!hd&X_@X26
%p^P=KK)'pO[H5=U]HHk*EU;E;RVs(=>ZOhA)GEZ4CcG_5>CdRUCIq3B;m@qr)X!+qi/\J`/TG[;2PeNM'ckF&dkqpO`l@Sf.IL5n
%M^MVa>B5WB:\8,`4sGlac&/6l,@Ld_=]69jjm?N<G.FhXQY'lNJ&WgAE[9^7jp&%"_BO9A/>OHRD;YEsnMJeMf7nBmgG@F"aT7PG
%c=LF_0%'u8rH,T.O/7,(ksM0hFTG4)EgVk1130d2IGXsnWNmDFhVb[D)7NXH\rQroA0&c.(-7IB<`GL";uK'+GSpV4%"H:%*Z%qW
%nD5Tf0`sMb`_p+%7&VAc)bZ@$[^]%+(jNsgJ[1"FX',p'n,>LhS)-9hM`c5JRQkB;b!KKLE%IF1FD*I6!kBl?E&=qnVO2C2Qa]+f
%>?3VUXI/QhPq!GFA0W,0e.GLAWWHkto'.fsZ>X3O@%fK[ceG$I*a"ZP)eHtQ!XP5[cl5$0V1P_gM;V&I;jKgc=RRUZ#@<R,mdG4:
%"\ZbM4Y"J%`.:6)B*;,sW[R\?ZG*%5MW/;#de&Ini,OZM5<;tm\4"4k0bZ-QA(Y_!al6>^eg(&+LJ1PbI,4ptjf#J]]_P.jO5N(i
%U(H"SUQ[B?M7Pn]2Sc9G_/i[58$4Rdr>WllmVUO0Xo+J&';peeDNWb2Rg?>IQ$O!8<mDm_\cE"qiV3eXgH!@mRBjgto1trf]]@-Z
%0k";_N0Y2@X]ga(\`r=B:I&-qN5@(aSE"JH_"%X80=d/mYXH_\&OVj#BVmoVLE*)2Ho9kO'cPG^3?3QXH3HT#?3_5H&hN@T25re0
%nj:M25a=FI0VSWo_&YOUZEJb8[uCDe*plJ;AK_l:`WC.i/l1G?\/FB6+J"%H^jtl*IrA#ejZQM?B:8D/TV\c*K"eUg-l;5h8RK&+
%<!$p9O"J8!<i"t6lu7?7ZgdmV-M^8F@7s*OJ6"@Yn>2M^>c'DqfaFlIkp?U#2bYG>JXPdZ)P273"d\D3LG7R7B+i<'/i/&@h3Nh^
%1bQ(6JfIhD;J/<>W8%f+L9%*]E+;RB^>^"fbnaQ%+c0u%ApMR9cD]MtkSpdZcL?@ue4P8uiL$lnBP.6,I11>j2$'K,pM'fd/M?KG
%SPo6i:hJJ!X^ua3^lk)m8'3re;e4BW&`XQ/Q?9^TeAfa&>H%1F/f,FQihC,!3D64on[_rYAjrABM[Q*o"#%V-!ONrX1.0i[YUM48
%Wt"Cc[cPF=#@+K_b#Z\7l]*-=VMkNnh>/<BU,-N"ko:#$=Mrg+deki4\V(T:C<FlG0O#7.Oe$#<b[@;!gd-;Ppdi1><J?F/'S@AE
%n&#m;;^s8O<=u$Un0/$]^&o>.RP%[:"iH/.$#l&fZj-^!?=9p(H<=XUWZqp96T'okBfeUe%kj7212T@uaX)lP'1&NfC.%j0D2r^+
%nI.,jmO-*OMSo9M?R?Xb=%07pJTM$HJ>eg=*X67ib'^,4jRk[7e)_na[PUrXW%cu3KD!s8o>#2\=ZXXn/e(>?RcU/oK@.5)#nSt)
%BcUK'nki@.2q62.V<$i\>8MgS@7)0AXU+M&QG0k&WFOnE4MqH@Pro+?8T3jiE1_/MKPP'TY"X9(<Toh3`]JHG<<Q)"r@K_gFKD2O
%Z2ap,:t[maC>uC<gc6]<=lQGFd^ag!6oRQr/B&r<7p$_]j"60GhH+9P9KM0*%[o,P&R1UIJlFZihM&q%:dK>6q/^-fpZGEKE>,T8
%XO#Xm1Z!:b$7j+jn\td'Sk01V:cl`aE?Qg_Bl2S4\9LmQ/I0N6??_9]VDbO%"_L[4@Va^62bD+!/kB@^W7`p`5dt'mcm,Etcb!Fe
%&1hd8q_6aP&PR(F_:-,<Vj^WfC02asKNg*ji6pj/6Z<gsm3,nu0'H^J4lU@K"Np!3*88dk@4E,#9qPK-b^%Wa5gk#ma4Ga_ChYSC
%BF=X7=s&#(9[j87A:`#Ad5qBqa;#kCQjX;.&89,eonYtjiQ`NC5j#]ZB$hVu81Gs'X+>I2iPd<*<]J2V0YH#-9;:^+.QDiaR^\=^
%bn;`LSL*n=CtXiAYj+$-iSWLE5X1THaI?apJ#e=uZdZlZFCgCKXOqJ3l0G8kB#W=+?7DqsN4o=Q4?%p#2LOu8TJHfsndTIq_UGr8
%HSF;UCtQSGA;Gh3_8h#U%&[Vk_8h:=#H3V6ID0gE^XXiZW^J*F25)qn<'`nELKGcN@k"uk>aLj\s84t8Tn-EOS$mm%p]B%(h^pW6
%<gn'A/.A:!#FnF>n*2TCEH4rfHSsQMTh78+g%[<6?*6TNFA1G\!]JEah!mY(PKEB]Q<UH@ea\Hj6\X_DO)'VI:E9s^M`36geDS2D
%MF'%Y.pgL4m/_,S(AgThqOL"e]Z%r`N5f3%J)Tdas55XJ*OQ3Oo4+T'9QIjid-2HS?%_lF=X$>`nU<Ad^*Uo58UoR3gXe-m9ifuQ
%*$8CF\.m<*CE3Q_&8LHOe/FUL-'Xs\a4nRuVPrHaToP/lS?D_WE`.UVePTP..s:&b24OJ+J7b$BGo\C:`EblRad]B$&ejji+f(ST
%$0pI9`puG[6PZNhEOiMH([YF3"G]Es)2AGU<Z9u=Rnh8-\:IEja#XOL`VEtgQ)B#/(Ws8T?`,4p9c_F=38OCgVdAG]Sk]IfFRgNI
%_I<osf^3_2G_*V4?O;bg7Rd/\h@Dsf'3A68`TS5$\qEtmJC1DF*%.OBS`.Q9>f68dN_S[[W*WPLqIQ;8*.:l)=.!)fp2*/B_#uF>
%`HYW$<DYm:MX0E8ONB[-a2FV&D^1o77UsU$,XJo"jg2I3"]Jg;]Q2>[>9bt1_j6h=/L+N(Tc61VbL$MKG.YsTGbF8dm_'bm'%2V7
%U^Gq;mQ>P96?GleYG)kki_DO"@L0;3_J(_(AkM<ROs!Ct5iodn+S:\Df;Dt`2]R)ffF<0MRS^Q&n>gO9N77`DBIMq)-t3eJh-Y9J
%bQtS1\=K(hEcXle%9`fJ3f"KJcl/@cjY1)Y!IW/"eqj=oG+A]IVc]<M/?%+<]`8=LS8Oaj>L>h=-(oj=RW/%[nK-2qI36o+mut+u
%LRi;j9pYf3!Hbg\/lf%8?\$>]ocS;>dYskpP]'+?/M*\/n"aGZpk_gGg]<<dL%#g_U^'T>1>-hY%_iaTj%i83GXoBU#olCh&[,>(
%W*u[!7?M=$U%Ag##;q[O51B[?JV1*f;^9Xk^[o]0iS+Yn1)H3g#aO#uE`Efnb,(Rc?0?fQZ>IK,]@a#MZ8:$$P9k9dK#oibY_U$)
%*1XorcT$PNK[V\V]&8]\aUlo)C(0p47!s+[h#Sb^`0U`\n)asDFE.=D*<cLEdg*alpl]l$^8M%X"(<Kj]JkR(Oc*WO780tiQ]4e'
%M);KUVeOP4%g^-*#(h6kLs^@n!oc^=re]he<#:ZbZo;8eB*`+h^-^m>aZqC7ED*$6dhN3p^=GTugJim#7n:kSI<ph(9>$2u:kH_&
%<!f6Cs)AV+,XWiPEt-Pn24,_5EX9Xd/&=HM,?69D;_\qQ$DiJ'%p=D5F=W\fMaXLS!Cm8Hps(eP`lGXi*[<cL6qe1Zn9P@=Fr3K$
%H^J%l(U]AnEh+)"0cY0l+21VW2h6XUn9,\%4OlD8n<G:`U$0oeJl8;,:9P.h35r?M'#9_A!oo=/;hUW<TH2)I,m'_c(,#H]F)H4`
%$*S*'o*4$nT8iFSVAO^a3kfg\jUG@K;cWE.ijj/_W*IJ$h:Eo$,23-hF=3l?-il[`?%XfMcm4GgHl[-i4WL`QRN7:%q/no?igpA+
%n)'S^^miRh?VWIOe<T6>V*3YiKI8^H0(TUi4]S!Y$,iTi9T#9qmu<5k<-ad0!,Y#&^K`Dn[,`aRWIMKV$#BJ/9uCEaFK5on6W9h;
%j.n\@$\egdL*(3ibLl$l0(b_o*IG`Vm$KQ&6.6R&?tl$=M%2-;p)/6\NN\!@W_3R(X4bE&NW=%&r^5',3tt-m$OetS,`u'r`X"[j
%K0_\1:gO_!L]B.:Z0>O(Orj1b,?tWEQ]<oA]EFO&7>=(*)K3EPbQV3BGpIuTbX[V6^&]]]B'=_RedaF7)Ra`eFd5cAJfO<@!(d_D
%)SCYG$In2&E!/NpCojq#:.8L3PT>Xt`DRPf.=/CE]F@lH[qZ64g=H4h<fjpdEi.$t.AEBTUEF(Rc6ODA9!:S_3`ttD6@t(r8)VcU
%_j6@A60N-PJ/ECR;%rC9V)N'1P]j&4W]OnE&7k(7hiOX?pL!NL+NJ-#YTXP&fZ0[*'6RaqhqVU2p)mhAiBZ6HRH9?u:f7Do'"jRV
%GN"D\.V^16l>T,q'6g\Vf%?',?%SFgmV2'@@^UgO:6)"S*?-#bMLVu2;`$?LV:g*h6C"pP4;`Y5J,qMqmm_ga+(U;!>2p(Vi(L^E
%/?B\?RK&f([mt!\it5ri*N@5aR1O*<n*Lcbnc!T6>^h5H`e;0OrdT:P[VArc?28Bb5NI`qBh/j1b@BkF)bb1SU$ZJkUoU;G4L1&R
%CAdfH@uM:@`O_S@/EP/,$VD&qe>s[qi]:RUa-7q`X$`sC$/kT?D3^$ZW'7SnDAjkEeHfb$Hlg\#+N:?rO.&$[Sk'IO`%PjeWFZ1*
%"B?9nj;Q>,SP%?Zr3SV_o5>3[mco+55sbtk8[?N7Ku-T%f3RPjSPFS$p,hQ##7AY_gUN4K^gZF#V*/Y4cXg]lD!,/19Rtt^!Ct-P
%R0':E0oO9`ndn<7F+q0,'^9^C7Ibg_1n1Q*g@*qSbC+l@TBE,Hh*,!#VMP\'UfO+SV4V'b<iEW,=a'%Lg[ETel6dG*Q`^\/V0VZu
%g7-)]cEh$R%8V#4gl5Y'[ek=[h>XOYamPsVe,=DeSJ?!7L9f%"$F=,MRXRJ!ZVb!W]4^umn(1p3Q(Qb#Hng)3gfi/]>$@11d*H/)
%oY?.9F2'_ZG97f0Hc:C4_6T<.h*-%.Sdn)/#qD=_j;NL:7]=1@=MoQ'`[>Z]2<NpW53+$nii0!UA6^TEc\"7(,D*1,N>ha:6I>HD
%!].G'bG(j55".71mU6.clK9%pP$6O%onSV,QToj'8L[k7M?"2IO3hN=NIdCe,B,t0*@VuNlLu,:Q'#Vd:L%?PSCM@jebY!]UH'8\
%l@.1k9c-1_B2"dVIueKIc57jHrMi/Cjggk'$PPh)AY8/[1?#Da&q7U8^B&_p;n*e8a#H`e,6leG=IcQ^NPHVqg'[Ym@q&=@ZIi10
%1X_%D<k6=k`T$,(PM.SE_('r6]ukC?WAZBY[F_Uk'$nq(;"]d`gPd8]nei#GaF4n)c,(3#LgH?>*lmts6b0_kosq-m4dk$VHJR:0
%e\Es6c"j=sn?uH+/ij":&jI8+b+YFT&*6oid$K#)iB&&-^DLbtm0Sr)TsE:RH5W%;Toubr.YJ#MA!k(tg-1FrWQh6UA,G?I%@+X+
%A@(d*A8n'X?r:bF$nbJZ4eDBLa)bG^YJ'pGZS86Q3/bA(<6Ncp:`>,CB59`</oH"6=Yt#s%/DGbdnQ:@^+%MmE.,O;OQ?@98_t)T
%13ns\n'+/m`aec=n(LiHiq[boj:Dq(5q<!')_?tqN]^#7?_/$kg`^KAJN%(mH%Qu,.K=1RV;3#H3C@RYp8i>HO=BN^Ri2kTN52o`
%RpJ=i"MdGshUTr\;]N]\0sID)6r[Zsk!SjZ<@5!G"s:,eVCY:RV2[nn7Ul5X#A[PU*LMA"j#<\>-Nh&!.%2:/:i2504;dY0U,EEk
%9N',7N4"T8#Vt6@Uj5_05h0Q+Oo,BGKlLKmqFZoZ&Z"RR9gVu=%j(gCWXk-V$`A"FlOSQ%)j>a7S8E,g?!h.l9C6n=Fgbk7*N9LR
%16+f-m<8PR"<kl[3Ck<:><NZ@R6QWI'k8G`oRR.W,/*Os.>"MP:tgl$+db9h3QWpm)cV@YU>Q>6SYNN[B1(5,i(to$$7*W!I1b.p
%@>0i8qik*dKP_=&P=/s?F]+ZHF5]r)QR$;[.BDCRChcr!3/^WY-Jeu'A$WWl+q?+::/r@BSCCf*1Y6GUH_F"3,SrnL@C@3I7[g5!
%/%Qk.FCsSE=W'PC4hj&q:s>e3<`Gg#e(r`R;R,;VeY*81K?LmmSbhj*)uN)sUD"/W_OQiS*DLXd0#6Q<f9NpMcdTbGBZ!UnkTT6Q
%W8/H7o>.hr'o&isb.@%M)ktJ5n4`Pa=Y'^n7k2[0F-Ml=;X88Yk*p.9`uI:b72C&f_j%=:l\<C71;X^FS:'tM?&am\<G<Z-9bo@a
%*eftOP-=JhU"MO\8*&p<ddBOhh,ceH6O!X)!^e/`$iqt^g.B;a(3fMnk!`,7%3Db5_L0pJDpfmF%HadWJ4rP;g?gKHjiqj86^s$k
%Oe>g>Y%UrbE:T,RY*/^nTJB87:M8T\Ec+a49E^t4$0Bc'W9GQO4OU8Zs55m>:,FAqC*3M*YC8AE@Q`P@&?Cf#fM-FTTi-?nCm.;p
%f\&n)J\f5)hl2W8Zlc`Fk,B)jYO[6>mTSkT)-!'`E(um.i?4h]&kK;%mH1;EoeXLWTur#;6FM6e9$c\P0=KQB.mjIrC!"6I[e]bc
%Hah&%JHI'WFGkOI>3%/i-!H<nKpYc9HuV,DTB,9e/Lq=cFMUCdSZGqda^R1dSn4&Dr0_oJNc#i8cJMW?9hXpJN=*$XZ-9S[baN.m
%.@pTTea"/Z%ZsA@LLYkGhQG-3@tgF%(c64J<k?fU0EQ8O'lsUoaPjIB.J=4fQLI053Ah?%.7g`,4B2s]kK/]1B4ETQUegS&-EEMW
%,UHgl40H4&W%ZD?!K.\SjBRV_+5=dWb9HVFNKFF/H?XO:MhqcaQ-"U?)Z_#Je'dqZlF$;C--mC$*gY[J_qVVF5M*[SHe<_pm7"NO
%(+CM40eqDoB@C.=1WV?n[FVI"8T(<'O:#>QQhKL8(9LY))BFkqh)dQnr9K&(4B#M]r^e!AQW1IjAGG:5@XU0nIt!:2f/'`ql(L;3
%Xk-@>Xmo<C@gEVO1+:!T;3XBMhj5DMV`HZ+&;u$@#a8an>gjP0kp_,R9UsFiholZ[6,NI]1"p?;33;^.$XNMe\nS'&ID*i(]cA&=
%b=s(e,:3t.mX?ku6Cfc"%Al<YRK5.kdf&m4L+0mH/L`*l6ossA_j6d@qY#!V=9>!GO$_#<G?JPc!)(U/$uIe)%B2.[9ek/'BiM<h
%E$L27BDu+Rp5m\ir\?]*]KFgr1qDq]^TLG#Qak]4V"BPTHK_,!!;&FT?kA.4gESau$i/6^eu@9)4pr:JFIV2b-1=?ib?!3,gO7"3
%'(8?Lj"4j6Xa-H5rTa"LBl934H_G`?<V]nUj=.f[*%A?W+Q^<';D"EF?FGa?Yb0*d+tN?1_T+iEB[!'4PCcU?m7+[]aIo3I"6h`"
%F@@:X/;H)YV:%qG"ON$A<p"R+hRr[X=$6XYgg<<35^;GukRkfBgZeEi))Y.H#dc..[mPNgPkP/N8R)-%33\6MrB;nMEh&^X@K&R/
%dh2[Sar2sI(KDe@\n$PgN2h=o-3lt*BBU$.IPsTV3S#I6dbj-EV\%dtlJ,k\:%')n\4LD87"V;WTGgN<+D8#(GVPYB'ZfGS7!X!J
%i,dGfB8X+h#s\lRr>$H$k@rYGo7$+9O8'7bOJ$V'\4FFR(W-@)Q&h5Y1OhqJ8k-k5TosjQBF_X>@b(+U#r!g&Lc9LS!so]')DKBc
%N'Dt,eQ$r<J[19aJadTDoSuKK6m(L;dlp9dMdY1d1[q7)<BD-3[>HPr<m6@\>ZZ_ALeLH1p24KaiTQNC,@`h;s!G]Y&!F1cPiY3:
%f\R/h:K-EWmLuo8+iBhW+e-0'nC&3;Rhu5!dYOP#!q&Oqou%(k@i@+Z%7"5SHOI3@?Dpa-EK\rYZr,K*nNd]uJM/3J,'?Ou"pJ,)
%Ud4/lTp9mt3\tb#!6iI*JA&9KA.4tpKFKIuP_`1J6hn4f\:P!HHqVhl/BoAR%3ca+r8D$P)_*uN`R#*[8mm2ZZ\Uq'2&jFA0Z>7:
%#$2;%B[M$K(<3QkX3cmkGm&f<Q9q'q=ZQP*arp*X6rmi1_">F/LILU/]Ha?YH17d$L[[mi6'`#cdH*KmEHXs$TtSE:n-4U"W+I_[
%g*2?\bET(("/(lp`]5FYUu^+)[D9LY`e.I+3?Y&F7N3B8!_bG-/.s#%@4j8*&k([?nU8p]pe9t33d&^FoFKE;ea:p&k%eGpe.88H
%k_uLI-ZIOKbB*8f>8h6ioDU)iq*WGUn&i:?"K*J!8,\B:?UH6a$<@T?:f%_>g^B,SnX,uE[4;2'3.8$P1R$od,:1SLc'HjJ@Sj\t
%Xa;*A;M)"P91rASf&a2KDZ#n*:JcA&l`9Vg_WF8$I8RGq8L0#_=@o3W$)J*2-B7"*Cfd_33;:/Q=$s7#Zc1F#=:pE+Taf7a[UUTc
%*@*KUSjf/@PJq]HkL&XGeVr?EgkFHe'dtIYe>Sc;T0sg.[Hr0M?/rBEX;'R-M]&!697ULGWsN4(.2#IB]<7ij[@Ep5!rnDFi,36r
%OG+f=)<7T9#GM\Rl2^??#mAT8-mKT3*pmhm)mTOjA$XNE>]ZJZkd8l_F.lLc8?+.U-WK(*N:P7g-Y6;qct*nkHulTFP]i>cm^pr=
%pOoc(!oV<mNu0d8Bs;'Oq^sR2GgBf%#=55]A8(_13*6qQ6+cZC@c];#@1`4Hd/D74Ja*G3/1./l1Ynf'G1!TTGk)G%WO,]b''1\h
%r?j;K_lu>6*P@Tf+]XfZN^,]R]$kn&;Sn*B(g"f,18'3Bs,>qU%#bCK![(M8DSfIY>Qe$;`2H_dQ7V0`6,edNJ3r="FY\07"='3N
%:)Z;0/>cW^L#t1RPXE<FcZDtofs$U:Yt/8VZrem7[5T*9c7hq:Jg&k\V[\iMEjI_5k/(UG=G@#KWX-g+^%5.K4Ff=u^."G.3W!(s
%Q[mRQ(ua>*D?3&P:#?WL6t4C`=fSVM$VZS1PuuQF?7V=b%;L^i-JZ(2V,a=!^mpZI:*?j67CN6-;Q:]^QZrK&9AY*pN"NCQ74*"^
%J=76qi>nYcnO:DB0H)=<+j(;q=9)\Rj9#bnnF1d(QcqQXOao+k0d!]`g<FhpOMYD)5ktXQ,9'PQ\.`_NC7"PmS^0.@-6PW!)7AHF
%&_U.Bk)`^_=M6"sd3(FZOJIqPa[!%5%*?7TYj7BS"3NS>TpXgsJcM]r#"=0dcN@T25ZD3*fX;'H*RWsL?;1VZT'<Lo"hWA\4=jO3
%N1V&)*q:/6/6**Y(k?E]Au;:57&tQp3G%!l3f1GIX`4>3k='"Y?sVcR(jT"JDFh_+BiK@/8jHe*Wns,.S]lko1_iG*I%9<c1$=P`
%4J<(]MV8_@2+QmX/\>J:dnsR80qn+sNn%S^h2%4ZN!@)7:adLkQQ&Ih6X5rFZOr>X!26Gr\A&pdE?1?D5XFOGpAg&(G]et@ho+2.
%*XYkh_n1NSc;YY-N"B.1Daq>?cBPE77Q$9tjB1HTP/HbmKg!iBocKuL('1;)4A^%6h/cJ"k+Oo*,aAD9=/q]`nVp^F:&J=o@0Pkl
%j/"(Me@!1WLB>DKgWta4GF,Iq8iA78Una7O6,HGD$TA8uS.kiL;0>>#ora'onFD!tRBLjs(s$jY3s:!5;=PHnpD9CpT^rrZ1"]NY
%>[USFL9%\l2d_g@_fL*mmU!,2-;b-.#^duf@th<m<$C<=Q1l)[pD9+h(R=_2Q1sMmDntn]4j?Rt)sIB"4EAid6Io1n(LBWc5<4SI
%gbp?)X?X6l,%Ac/6[N3'EYTaV+tsQPV4T`DPc^-5GSKS<lPi37?m!V@gdL0OXe"u)F:;<\X8R%%T5rdIBHA&j?#W`5JMHocbYucG
%_eS*M0CYUM_/%HN0hmaF6koco&0%P1QI7t(MW`\C>dTS#TR!3166&mtifs%ZGXLcB[S8"8/K<^O_ZV,`Z_Ag0E4SEmGZh:#B)(0&
%nN);65gXmTG6V`XGB`8=:/io']%54k&0<bM+c8-rZU(an`H2_^ouM8'4EC;hX'TAqd?&A+;1W+DPej(EMFcVJcO2%\)\)b.`Y00j
%](R!Vq1`R__Gf6&i3=PlUnrBfII<Zc-CfUdr.Snm9d\)_@r*q*"mq'nM&>C5M7T<"ENg-9]C9m7bdhQ\P0])FYJ<;;[`sQD2MaJ+
%g?0SHb&O%B1!%llN8DIAKpRPe0tGWPE8$c&P$TkukFHkg:1%jLY@=PFUY:^lm:)f:&S#D7fmBF"(B07@FGO5]@E6>fW;b/S\Sl$?
%;1VR4))Zr"+uQ\V^e]f3K?Ho!_WgkZ]=rRRVt%`N(\fsDee?pWKqlHea]@$$H$69@[jjW?5VTi'?kFi7L!"ds(7IofiSk)'\"Ufe
%Ng9t]0/?MD7?");Y\PS?+g=jQ&Xj<7R]:?Ps3I0R!IR^+8aji7-\4*A7bI&n0%I=%Y'l.*aCFcQQTglQ9C7m8mk"d%Q-Zu4RpDnt
%/25\ibMFDH[P9t6L9>=`jMemtnHKR<BqiIY$ut8P@Sp8kY=WQd<!*Qc(.)&n8;idei_14Tb#X!Zgq=AY066ZdFM5lU8-c_me$%3t
%<T_'H$guLL=kl:7:?oru!g[^<#"*:>aTkaHP3H2IFS.:+*;(5k$u]i@2[[r$BtDis2@[lC--g@")FG\)d,bm5d4\,Tf^Vu'9GYQ-
%<DI>*C_6BcV5u@j""&m:DN$bArtjG:eUDU#T$MlFc\f2cO.E]MX8[RCk$P4kG8>h3@:?giJtbQ(!@=eL9HL8;;'Oo%nQ[V2(L,:X
%60Z\]F>Zcu/Qc(Af8VNOCbpF#a;bIp(P=3\.5rB+SWqK6hV,OQ:DWfk8a&R1)LL1p#N<Z[A_d%b%H=rtbaA>pB>[/!I229%`#e$q
%>A<j^1g^FPHQQ*Bis]D9W$2&4oGVImaLZn&5X,<<#$5r>4lW2U(NZ7K(kfa5._-tn%Q^#d;/3/mK&H!_@/@M?!F?XG*!R\hjpk]I
%VM/SC5VM\e0kMAFju=rD4t1aZ`o.3aagWbE<V*b98%2+?<S+h0a6p>%X$1N#3GoOpVoDFY6'=V8VI]6IU@;;AcpYoL0uOr*(kCqX
%Y9YM>0*@H;G""p]daM:ul)"X\1RK@U[fg`WrmkZ[T3D,d(WRt>OE'r4ZnOf=4e^h<jcTtK$?fJi-hi^W.V'AcmU<Aca\?o3YFGRi
%\*YU3^]'La0QUT[^Cu[Vi6UFbP0C9Gj-=E@A<!F]J;tPl6l;K*Np;jha7CH%<4/5hBN8N=[0^]c1a/:2;"=pX?P&;HB2@8%[FGUp
%[%K/\AlNbF1`=]&(L'kpRE9uAl#pC@a(kqrK8WDi-YG"3<p4LV?HiPZi*3^.9WtL"3qW%MJI=99(FE46iW6"npQ2i8>K,p-4+5[P
%?N5>R"P8Z6MGWat&La!G0--rYa`#>8:lT0>IF>e+M-/dB%ln/\V;Saq\np3N"R1]E>4nHq@LG&H_:%7Wj;bDF]u%&b$Lp5/OOjmu
%*tZO.N5=51CC.2QEe3^$3bFN0BPYq!pPW-h7?*>Emo_W!6\%?,fbYh0dr#tck\l.RkIOs%3m1O,\Q+-^>1-E7qT8Xm;ce@<_ra_?
%^$<HNNVTSU?Zkg!*U'\J[Jus`rLuD;&J=@4^,R`FTgtph7>5_ej4s]--?QDY?[D_3R_OF38`ZpBk49l_At:(bF=T74+qIZTB+<5^
%[-(FT_Z98<+tO,FfpgpI/q#2ol!H.@p"OCdUA4_bPjgp:fQtD)=-E;D%[Znj9X>I+BFPGJlu%=bSlE/21-HD[U`^N%<1PEo-po8r
%5T6$"<"Z%G/4.8e7D9Cj#>.U&X+'nlLCTZF+MX#J"c4BXmn%Z14euh!h\jMRPtqI$i(kfYOkS&XbTs))ihVb!P8])\3L#jR7$+U-
%Y\fqd?pMg_\imkCe;B>7;4SG\^Fl,O'X=7%;2".iLuhkdqFmXuG#g3PM"&_i,s4+R\)Dm4<f@o#d25U<Iq+0RpFV#jRBF/hPtZN&
%noh1N:17;nRjXE<^,>^N\]'RQ9iqUd\nYW7>.j6M8op&GGo3[t0rUc:)QL<_dK=k2fl$RK14lY93`d\dP#Om"Or`hY\t67ogj[b0
%>6"?H\htPVd=JkFdO\8/Q3XMW"aWuE7dYA+-PahOKo!6_!+HC(@(kguH@!;S\JEMiBo6XRR=Nr:=&EJ$jTW'X_S#Ms9Oosfr+]5G
%dXH00i;$8pLl5a2hH-QH^6eiGo=5)3-7TjY1PXY\piMWsO+@5F6]?X(1uMG4).T^?D^?l7WnY&CdXb>Yg>fWrT4adR.Er\L_a7^!
%Ab7"r=)u1G`fO>GOhVoWRs"oX,1]-294?>oau.u'>g')O<4T83dl1e3r-c/=>XC.q%8:.D[U4/r.d\B38DUQ"<!&%'%c\S"(aMD3
%ObC#77oD`?o`qn\WCT[2GO1>O]mSD39$b\#KOs>)!U?$?7YTe1,SelW$,sSZ;Um]iW9m>K(<5'4'p$"1R$Sn7jM$+].8]HD6J_K_
%B]=DIX+g4%WnE8JH!_-/b_8Jd:.t%@ns+qt`*^E"[#uUjm2%Vp&I5T;e7OK"$G`eADZ9j"4H6*4=ElHVn6VE#\#ej%gcSOFA0<LX
%;:H-K&8F:p2F9B22-EM)O`]r/,9jn"gTB1d<CVT%'4\kk\&3/g6gZ:UJp%!gOP1$TIu;`:G(t&S1ti.N^654Bc>54(V%'i14;W':
%PK]`t7mK[+pW&i$hu2Ya$5gs)X6Fpgju?nY_V$HXM$nn8%[%Z3a/]38hM^+A%u7[]S]S;J[Aa)Vne"8$Uu'\qA6H@f2=&FHI_H*X
%@ml9R=3acJ$>5-_-*hIk@$o3`(_+/J=J:OK\N*D#1>ZURNO;U#_T='-=\->Z;[UH07D1*"a1>04/ATG!L=AmcB,ODG+GZ+>QBBe1
%#bPNDJ5El\.,'=Zp,"M>;OE7-Y``B_PR2H*[O-fka,u5dCZ#?m7p+4U*F>%O]k5Fj`gi,pri5'2NLiL:qF%kcOM'uqecYB^9$.fE
%C*E;P.&"\DC*i&0Dm4-MOE-D/9/*g7C19e,66T3<=^2eC@ZM-fKTWKD%L?_uWMsjKXent9)OG`m(2?i%bOUdQ848g%*VYkb3+$Qi
%n]Ph'<ta8_GVkIJW5@ZiET`Won49-oi5meW8pVIK?4_u%&`l:f;"dFkiP4In3)H%;F,gEc/X7YAd!D>p5):b[i=TrK-lh/h0U*PK
%6uV3i2C]c\D!ZSD+q"Mi@fH^G!jBLa?%.`Kn\!\WJ=;@a!=b7J*nV*=]LOR,NBJ/fV5OhNPJ3u+;[!NfO]#$bpk,%'e:N%jhK"u-
%F)_*6n[!5lSAPnD2>%c:r%^gL'Ie4-nVl[E#gGS1R)8S`%6#JV`R5L)[FY^E/^%eqcL\KAWr``IiF%,<#9k-\VGVj\P;,M'I:,fB
%#a!sY3$gU0priu,-6g)3PR(B[dHA'fhWaEG._OsW8RLgsLj7e`n8Ln0%[33CC2&+$b^_;USD5LW(lZ'M`aX_Ac4.L?-jZC`Ajl,i
%;n7^'X^i@^r<+5Lf@&I2rBMj4b@HMbWDSKVO1XNRZ+BE\.l"2M5%lR-OMG1$GFf\4-PMZnUnjspnp$bG_[u+dGfWX0nGW.)71X+m
%A3"uFZUZel/6%;tR&,]SV3r'k`Bc@3<[rJoFgJ$<qV=($lP8QW4]'Q29tmX)7.[X$Ae1EAN[H@NDXM*fQ0d=81G>AHrJB[2oEa//
%MlB/R[Hp?a=?H]SnJbHe>u'CYgUAPODf(Zl7?af]XI%ISbN-3$Thh1`*n#9:A_[R@Df>]'a6Wg+;"7"jRRu'ahC8;]?U\ONoM0fS
%WC7uZO(/^pe@gY+G_[#i'Y;t>E3YTVddG&oJI'Lo-I&C_/TG_.SK3H;M[A'@%*$>dS?p>s<,),,01?/XIDh[_gGPgnJrQK*'C6=t
%650UI*#buU0F6Rol-;qkh'gXq)a2'EiJY2bh8B>_]%+lSX,H5%j4p].d6]9=*%gQ`ZK4ShaM^TVo(N1D2dQ-PEN'(:&m3S+>XT]U
%TX*09kuKEYC\VqZDR]TL^A%]5a455*r0SM+,'5C>\pGRH=;a"UDk0DBjh,d6Qf;p%5R%a'K[?]l*%kGPA6phKg9?Sb]Z&>8Ke@$-
%Bo=CKPf"O[C#>`>oXII%H>5NY;J#4>6HJ^@0C9l;.*>uOUp0[IQ;-qef3C4J;YEfl)p5t@dXCrm2o-Ek2jkX@&)KrsP!eP$9I/`"
%BA>4E/rZojouKM9b#)AZE,E)'!rt]__J^/k20:rW$O+<`@kj:(8/Ws`'W*e[@H^".TlBED;ZcZ"&/hX++Bt_"Cm<]`c=:WLHFje[
%Dn3_o`88-n/f0BYjSI`;nbM,V=4e*X>\8j`.mjj*Aoq2QT\72A[SSSLoQ%EYDgCjm'^_o0:n^FicJotmSX3N#X;_md2"UMRDGi?"
%)=.UuhT$rdUaq6<<&=M=@DMH^0F/ZY"++PREU=b*;$:<j<_A)g.\@U\>ArnWs(?b0De-aRUV1S!`/j$W468<6&,.Vigr;g72"auH
%*2ZUIh4P?\#c(B7aTobUoK1%C;'em)*Q"A]OsmsDc3$A+#7>^rdOkOf]@\m5\eSog2*,JLI,TXnE1]M(N2e%Ll$Of@qcbiqV3Z+E
%mU_L5^V:FWZ[60s^R3DMMbM]`K<-?6Vb,\[`$7b>5QPX`ZqEYheiGS9O@09q<8_ViEhnYSb,Jgs1U?\fr3O,P[c0!kC3K"[]=&,U
%Vjumn?-09jd0ncFiaf8q^QPG)"Bc/?$J^Gk1:T.6D/[F-"Bl9NY3Vo!ZURBE/&eKjd'4_qM8dAFpH)pr@;i)qU>=Zh"o.e/)8]-/
%bjXk&F5V'p@KW7E<kMMa-)ub0]NQ^!^:lE\^Si`[S#]b$Qt9iiQrf/D-0Si+I(Y3As.(pcYW&q_C*dNmGgM0l\;XjoSEBUS/pdmk
%ZdA,!@Ag/lMf!<dcX`_oM;h/q,XdqY2\esiOeIgep)3^hU+lUG6]_/jV>m)Aa07M0TrR)<+3#k?RmSmHAVQhkmU+pUWk&s2(\=qI
%<bANN&JG4/%MT,!*?%iFI$&pn],g3Jc2bXP,C`!LG,V_biN2Y9)du9qASHn50#S!OKZhg;5f?nUNoc@gG"tK3?M&m_;LP%sK1(;,
%K'!V[M+<1^L6Zd_SsR&H]?4L$a??ui3C&=<M"C#c$XpE_M)N7D%ZPC`f(qH[)L]4[?dNXs8L/2s:4+%;?F`.Y6h=OAhY]I(8eT%"
%RC3lF[IX[5o.nlG%W&1n%T=CKaL<0>"/`u+L#\F5Pn0u+Yn2Js6_R&>^b?0_Nlhuu\W=ZQn0;U5%:t^4MA[-R2CmngWSKO_)1YH,
%G0fcp2aO@nmOfa1<dFY!#>)PsRtLWVpLRIkf<N=:b8irCX>iG/cciFQkjZfI021-al&TUbBs1RY.5^g/,6?/b13NjR3%KW]d)3r1
%J05>=OY`\,QVT42h^qX`WR&V_6B(s=&mG3_IfIY7^]!Q?Du]<Fs7FQcr;N>go8hd4FRakXm@1leL];XY5kY[fIuA;tTWl<@:dCm+
%+Oic-?O1&X]mtrIQ@m18.fT]F>dF^29:)(Zi:[6SR0Pl!9TXH.N\hFnUuA5E3okp>]@:a16Sn$FIaIc'7TJ5jh"GKT"+!J!6j+so
%Jq/u\a0Z9t"@8\*VSp^b:lq-TaN5^.!!7Xj2<q$i`OtCLU3n'Qr%I6nFSWnlo'"+E`Fn%ee(+9L[t<cMS7.9Tk<Eot&aWLGj2%3f
%Q2?Aj6KcS:Q)lei&nXgl)4/]b:B>33HBmCcO4Q"ng\0OVlW/Am%>qOnKkgEnXH[egV'tTr%h(Uj$\_%ik(egEf-[31Lj:Kh!=J0?
%\X4HNLOa>Mp+TCp!Y%C=);o*>.O*Y?3H)$SbR8tGB-iI,fZ'/:DZVb]4J)?3Vr7^;d(?9Y*kmG5Q&VK3!,6HbgL+*>g:sP^*>B8c
%Wa/U<G01'DG)@eu+Z:+<S1h#aiYEqR>")\\`<1IQVI>-Ca&&+3'7k.qpdq#>'drcZ32F\r<"ZM80$i&/Fk'9WZUA3^l&E^2#"_<X
%"4=pD!W95#%"a&s6Ehrth.ptKdhYe454M&LU)gG'*^9RQ#QR=[#3rLU,(-&27ekR57oa5Ll3FDmd[+[k6(=U->-,:d;;NL(pq1f8
%onTWTO^-E3Ts5"?U:l.Fqo]49&?MW0@NWoZ"hRTJAXKHB=hg;!3mJL"`U5464ZcuYED(r5+"f&AIU)l(574KMO@4uMM`4cQ@?neW
%]eu(Q4A3=p-jKfHr>h[tqUWpnY;;g<6/Z=]pd*o1P[1k3_m@FrosP4;KRu9^(gM-DH"0j'pEK4_6k;%ke#U4(]M7L[Y7'uC[q^+B
%YP;\2"i,$L.f@;'\H/Smh57W*KK;V+iL*qhU!T)4io",b"95;9XNS'$ZVZHLD$og]l]1o#O15(:][Kkn:/]'Iaui2!d)S6ah",&6
%k:7i^5J;Q<0k'\^+t?%<B7fXHH1/sU1`g4o8iNV*DVIZY'o5Ga<\3t$>PT9\4J5T%<4<4gJ]X8K[3'<Op@/Bg)is634pH`WjibX@
%2ch;jPU9J(3?2I2P//Q!1M?Yt!?S`K:=\E`he\g\QFmM/c7EE1fOTDSHCAJ_4iZHKdiJ5%KoJ.]j#$70n2\PE[\jMQ!)gG&DJX3O
%a6a^-.7O:#%=U3R`IN$)Bnuh0Bf#?+`p(t:1Zfe#N\*qg4cl!RKrWu[ekm#kA%;g$fT(SQ*I?WpbZD'[4oIn4`HXpg[NPD%iK+U%
%Hl:q%SXCib+WJ4+RYdfIQkL+[UWQKhK7"Qt+68q_iXSFh0!<J9_nS<"l#"3MK8ub7,n3Ndgk/IDdBWO^o*1-[o*B(g]/[]8X=]\[
%m6iO2,m?2XKJ\$Pm(%mNeLecPe/h?2TllHU31>u!H0f"bV(Es.>'$-&?<IbgIs:EN,&Ek)3WY]*/@9+]9"/?^/Irg.;W&e'7r!Z+
%#QHp+0`0i#!0T-`W$u`HKD$uFhaQphY%6Vn;FqiM@HPp3MTuM^Nbs!?Xdlt4-7ZB<'X$6+b?r(Nq`tnG!7>;s6bQ7t,Q_r?bkK$H
%*s/(0\]UY?ke2j5Ue;Z8ZW*q5n4A@f\L9f`WCVSP`6lr>_/O"2icm5IZo&WQ[`HfFo*@]>OJK+Bi&PZCrc7q-H-H#=`'>#_L.aE5
%c(of?doq,DM_gGeN(f=J2gpTEqln/[BZbVA_'1,9+_+'iNTo8:\KNE]Q4B);#YB&*X:$07AW"Fu?2B3k)_rk(&Cpk[1<X[efO!uh
%?p8dA*7&[=a"G"#qW=qefCna@XmOqQr(]OHk/"uM_?9G1\;0AEC,<tAkJ/GTq=qK[jE9**Q[?T%FaC_WEF+SS0gY4"89KfR`&\Q#
%',8/X)$O!1rJ!$t+*?Iu;p,)%^_9!(Nen]/Q,8,$'!\!4'],1aS^\p98DR!E*VJRf]1@R@.r#r.[%*n&%c\i<^?s0UT?B%*>\q.2
%aVl!Rm(=;WY@f?DZU"pi,ksuOe!>,cM,dbi31l^H(FGc97otF*e!/[L,VUb_2\+?cZOR"G#Y=6g*krYjDqb37!Ch[FYHraW!1nV0
%mZ[BX>dL,]P;0MaipV>p>7*5/lr\#\`:p=0ldag6L0(i^^;i'dHM2Z^-6rRG&=(5Q6"4H(([+C$M=;`GA#%]"eRpjT/;?V<FgihF
%_G'BBopBm,;HO+?qE%OrB<">=rVDML]!I0sd.6q*aj"8K50Z>sRpQ`.c+46JJIOQ]ol@[#dfFNSjEQ2clkVoUX)mg2<.,n@GD?!T
%:D3$lj!lL`s-U:Q*kR]sbQ.Acf/Bid/8$u[i%iml'$NiXbu!(.;b2e_@V4Z8bWX4mW,S_d1q9fQLc4mt\)710i:^N\L3**h*BFs8
%GWeu>*9Hai#_\,[^#:_)[k1_;cW@:3fa<8bH>"M.bqbd4dT(racQ`kOp.1YGcl;919VmKQHm:.(D]MKJ=>BK%2NK$Okj5t-klj@=
%*Z'A<aj"S6gofV6K-c!qDWb.N3$GY3cij&fG^EP*hJWRfXQ\S0AO!2)NmSp'Lj8bC^ag,BOE>s#lSdQ@7`'F/!"K"/(s>C41Z9E_
%X[!C_2_bK%&:2Pe6$1^YXKlXtJKU(l`b6/7JMR;[6?_C$e\NnL[::(6$b6M@TRq*E2_j8/L`oO+:g,>g\0dL&%I"%48fYC0`FH<5
%T50^A)$12tJT(pO!qosG-`i0/`"f>uD5@D<&6CR&R1Y<2IY-cOb(uDEPHH3hB0eF#c7G3:jVEEI,Rm$ijpeAF2-h8Td!%m_KtqUr
%&HK)EaACrb[S.]RTEg>H9m,/2[hJXiAIO2SE/ATWRn`&/6=[\!O8p->>imL_b0:V13^DKW?HSh]H@?Wh%1FuNR>sj+]IZbnY9J(T
%7gf$iZ<Kb$HFkaUbs.jF[*T+-XN<p*&<($Jm"*_?l_1p"b7,2)FA7U\_:kI4cY0K<03h4sB"g)pk/b/0G:Ld"]MjA\92*u`.sj5E
%(2)S[b7/?+4&3t9Y:/8!rEmMGoX1nl!o+4Yi&?)dDUOC1nUoUfnsk,N5h#!(P=U)"fSmFrPq:F=4'd12.5r6O'Jf5@SNBLOK*0co
%qiJH9+D_J&=(s=k>?^)SKZPp7:Maii;XZ;bbo8u/bq4Io.b_V++l."8X19[?@E;L[ZVGYa^<B,:%3SJ._X'O]lHN_,]bK^NB9/7W
%$?3Wqnc"jM/LuTUQHI(_]:8tU@uOnkj$J?Te'`@J%0l'pg1qlu6S/]QBK"8aj',V8KD`_s]u6DahoE#HG']#:+bjQWZ6>G\=%*W!
%P5M,U80K'2$]K_N@o:/m>8d(mh@/`uf^\8A?f)oJSc4SQQSdqk%&]GjO-g>U$Ted>S&=J6U?GhIq)f\ok+t4,,CFcWpZX@482(or
%;+ZMEO,Uh#7/XpWqT".H?3H!14P'33N_0A$]6=$1`]h'Rg%<3.p@CDi"=44hEKY0i16Y"23T2::n>u[;Am5'YJ-au%n,b@_JllJ?
%KUrLTGO3->[L$WF+adJBdCq:/VQ>hg'k3>s5Jja$9lZjbW7]M[Zh;\N!4X,[rVl`,KZHn)%/Qlj4NP[[F\B=WGn+2X3"[DRm"2.'
%2M3<I*cOpbl`s[Akck5XHldLhs*S,EHStPH!a(.YD6&8i]Rl4!:.(Bk[AYs9GR'<I`$LRZ*U8nXgnYHq4/mAlb+Kj%m])G_f'h1H
%Z*b&r:hR1MLU]W/!h^>TQ'3MN+Ro\793+(J5j]u.]lk2p:[r%*?9\CjIK*P/1N'Lc)ZYt7fJ]]Bi79pY3Gt!mYmM-.M?10!$m6ZI
%6#e:2Fbg<WHk?Xu;%`fj9QaR<E1<V]kkkW\2isC"Yn04=>DLt;)6.=C.=:GHW<mj5&LQMU5\!:Z!JZ"G"XR'Q_i<AQ/jLHF`2LG:
%DnmOHNHAFB-,a^B52bd\(5HU-.H!Lo3o#faKJ6uQ6n>8&>eR)<;0s+N`oBa00KnkH8T^af^Fgk5C?Ns)MhrmN(6Z@]E(QijMq.:u
%]"i'b5EM\li"i[tk??RM>?&Jnj%'VGHs]'hbVmalhq4So2D;OtGV<KS2I+)I&^(HJcWiO?0lPhcansO&7YE\&6rs)6\:i#tUfj#e
%V@UW)X<^1!IZY)WW6KA=*_34TlMU2^7(,&iXL,7*<'mq."oGfF&ieddT_/C3^5&H'V'h#2eIP8=\6hg1R>*@!Ft[T'RqT#;ZQf=5
%DZCRX'sDNkEP4uf";%XJXRoA]niKd(]N.cb&@i]]UQmYOe,)0Be#8(m/BTq3;CNG9*s#,P&*mui7mRE8`sGH2!G3g7``@a%c*@JS
%g3]lP!%Wb`Xr"K&C5$LcD>d2/PpP9O;3S\cLQ1-[gFm@;q)<"&]t]TGK7$?+6gBDD_TGldgS9j><bYW:Kdg%;P'SC-TU:J!l<%$H
%E@0+Y]6j]8dM*o!_(`ZBQ8?R_@hD^R$d"IZPki4!qME^k:NJ3ZD6+'$k%H*L.O]*.#j*nCcC^Eb7gKQ2CV0Kq,m"+PbjrYW=,A0h
%`Ph1\U%Nfi=;_FqXG#krha+M,P)roJ5qR:iC%aVgKd!)8j0X9#LZIPZ_@X"5-p/\5m6^YcAVXf8`p`[DY7tFMIo+=J8@.WeYJS.A
%f4Fd5Xnl5u1nKpkh(1_5atObLj`9'sh?;qiYio-HeGu?!`&HamcI*MNh\&Tk22GSG;9=J0X5q0X2k(qhF?>+C1D<=gA6VWF/"<gU
%h$.7$M1JN_lF\Qm$T65fV'D+?L@mAH5c<p%j_0kr7DSLogRKJ;@M[W1+sc(PS$h'D+f7(4_Pdk_p0h1Yj"C8&`k0rO`uC6,eO&X;
%H=K)m:k0)*q9K_aC^AjK7>ZB,n_)tb9n'%1`P=^.Lfln"4X>*$L5L"!A,?f9Q!bb(E^2$1lDE<3=ouIoL;!C10hPKe6F9`G$4V`p
%W`YW!N`''im'9;<1BNi<NbOq9G[q#cGhTS<$WnYoY@$U969fA.n5Ita;2$JXb<_e(qXptqE&K1K_pU+7@]A8:j/1^0>5&T3hJ.7A
%@,3V'g6\4_U$Gf\-ten8p$Fmq@N\":S#cblCW^rOgurki#6.]N6WUo0oh6p:U@l#:_#5Q]F-248g(M_Y*E$5)Nb;\m3\D0-.ea4\
%R8;bMfSeSISh)YL%%"!=^/5sWWim%f*bu"i`23DmJalm@qI!!oFSkd?m2H`uDql:YEU+g`I-Pc2#b&2.i9H[N4bP_<f9NlXg9r/d
%,V>V2FpH[JX;jjY[j@A1L:38M,2C[u'8>5'r;<[9,PBgH't@&pkJqGSO!V@DDan3/ffPL<aB=!N+uNam,6%1o7Mppm2j2)/o?2a@
%[pJ'@O7L!YH1qOGGg,#2(2N<[Y\78)!e5!QN4Z'7mm&2u7(m_BJ+kJD\HTXForN6S_'1B$W[iB'SbR*f+%(I^H/(R2?k)(5Sth8L
%o1\iVG.;_]/d&>??.\Z?c*b4Yn!>4&0</I8Y>c2b[1T/jQg+\YK_(dl*k#JX=OUTRP'CsBc)Z'#p"q4J.!t)E!D&KWb71V5E+,9@
%ag6:Zkek"AB(aH'FbqVnHUX6AjAcW[FH4d%J*e1RRquZV*^HhSo\@GES.8HN?^Kjsjkn;&p'4@53f%RTp,SM:IC@@HMDFs37G-BW
%L(`Pa_nLtMgVg[>@PYULBW)%m]l'>7`>ld<iCZs`(ji(kmo5?%_J6s<(e:9&&$Q)s7(\HWGq2S0.qFp8gm_f;aYoaU]h>\de]kUq
%IW-qp8)"Dp#uA,AAbn,;Ij:>\c%6JYmMV`!C@_Xkb3/9=[Cb=Z\3mce=*A&3gr<HE2j\h_Ne@pme\gN,AJ@\@a,7Eqb/%Z&kZIO!
%<#DFg+KTMX[1?U(\mF82hN-?M[q;2=0!#lo]ZA.\#d1bpj0qDHr?)'$s7Pj\n8FA+rq"l/]mi6P^](-LIeW4os66$QqsiE*rT`j#
%pZHJoo'O&-rpU06bhrD>r2Y%VqpW$(rf;R/e$nfFr;2!DJ"WI^f&5/prqh3C?bcHLrssc%*%1~>
%AI9_PrivateDataEnd
